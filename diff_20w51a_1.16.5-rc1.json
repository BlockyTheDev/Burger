{
    "achievements": {},
    "blocks": {
        "block": {
            "activator_rail": [
                {
                    "class": "cbj",
                    "display_name": "Activator Rail",
                    "field": "fG",
                    "hardness": 0.7,
                    "max_state_id": 6888,
                    "min_state_id": 6865,
                    "num_states": 24,
                    "numeric_id": 344,
                    "resistance": 0.7,
                    "states": [
                        {
                            "declared_in": "chq",
                            "enum_class": "cie",
                            "field_name": "d",
                            "name": "shape",
                            "num_values": 6,
                            "predicate": "java/util/function/Predicate",
                            "type": "enum",
                            "values": [
                                "NORTH_SOUTH",
                                "EAST_WEST",
                                "ASCENDING_EAST",
                                "ASCENDING_WEST",
                                "ASCENDING_NORTH",
                                "ASCENDING_SOUTH"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "e",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "activator_rail"
                },
                {
                    "class": "byx",
                    "display_name": "Activator Rail",
                    "field": "fD",
                    "hardness": 0.7,
                    "max_state_id": 6838,
                    "min_state_id": 6827,
                    "num_states": 12,
                    "numeric_id": 341,
                    "resistance": 0.7,
                    "states": [
                        {
                            "declared_in": "cex",
                            "enum_class": "cfk",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 6,
                            "predicate": "java/util/function/Predicate",
                            "type": "enum",
                            "values": [
                                "NORTH_SOUTH",
                                "EAST_WEST",
                                "ASCENDING_EAST",
                                "ASCENDING_WEST",
                                "ASCENDING_NORTH",
                                "ASCENDING_SOUTH"
                            ]
                        },
                        {
                            "declared_in": "cex",
                            "field_name": "d",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "activator_rail"
                }
            ],
            "amethyst_block": [
                {
                    "class": "bvo",
                    "display_name": "Block of Amethyst",
                    "field": "ou",
                    "hardness": 1.5,
                    "max_state_id": 17468,
                    "min_state_id": 17468,
                    "num_states": 1,
                    "numeric_id": 800,
                    "resistance": 1.5,
                    "states": [],
                    "text_id": "amethyst_block"
                },
                null
            ],
            "amethyst_cluster": [
                {
                    "class": "bvp",
                    "display_name": "Amethyst Cluster",
                    "field": "ow",
                    "hardness": 1.5,
                    "light": 5,
                    "max_state_id": 17493,
                    "min_state_id": 17470,
                    "num_states": 24,
                    "numeric_id": 802,
                    "resistance": 1.5,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "a",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "facing",
                            "num_values": 6,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST",
                                "UP",
                                "DOWN"
                            ]
                        }
                    ],
                    "text_id": "amethyst_cluster"
                },
                null
            ],
            "black_candle": [
                {
                    "class": "bwy",
                    "display_name": "Black Candle",
                    "field": "oc",
                    "hardness": 0.1,
                    "max_state_id": 17433,
                    "min_state_id": 17418,
                    "num_states": 16,
                    "numeric_id": 782,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 4,
                            "min": 1,
                            "name": "candles",
                            "num_values": 4,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "black_candle"
                },
                null
            ],
            "black_candle_cake": [
                {
                    "class": "bwz",
                    "display_name": "Black Candle Cake",
                    "field": "ot",
                    "max_state_id": 17467,
                    "min_state_id": 17466,
                    "num_states": 2,
                    "numeric_id": 799,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "black_candle_cake"
                },
                null
            ],
            "blue_candle": [
                {
                    "class": "bwy",
                    "display_name": "Blue Candle",
                    "field": "nY",
                    "hardness": 0.1,
                    "max_state_id": 17369,
                    "min_state_id": 17354,
                    "num_states": 16,
                    "numeric_id": 778,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 4,
                            "min": 1,
                            "name": "candles",
                            "num_values": 4,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "blue_candle"
                },
                null
            ],
            "blue_candle_cake": [
                {
                    "class": "bwz",
                    "display_name": "Blue Candle Cake",
                    "field": "op",
                    "max_state_id": 17459,
                    "min_state_id": 17458,
                    "num_states": 2,
                    "numeric_id": 795,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "blue_candle_cake"
                },
                null
            ],
            "brown_candle": [
                {
                    "class": "bwy",
                    "display_name": "Brown Candle",
                    "field": "nZ",
                    "hardness": 0.1,
                    "max_state_id": 17385,
                    "min_state_id": 17370,
                    "num_states": 16,
                    "numeric_id": 779,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 4,
                            "min": 1,
                            "name": "candles",
                            "num_values": 4,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "brown_candle"
                },
                null
            ],
            "brown_candle_cake": [
                {
                    "class": "bwz",
                    "display_name": "Brown Candle Cake",
                    "field": "oq",
                    "max_state_id": 17461,
                    "min_state_id": 17460,
                    "num_states": 2,
                    "numeric_id": 796,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "brown_candle_cake"
                },
                null
            ],
            "budding_amethyst": [
                {
                    "class": "bws",
                    "display_name": "Budding Amethyst",
                    "field": "ov",
                    "hardness": 1.5,
                    "max_state_id": 17469,
                    "min_state_id": 17469,
                    "num_states": 1,
                    "numeric_id": 801,
                    "resistance": 1.5,
                    "states": [],
                    "text_id": "budding_amethyst"
                },
                null
            ],
            "calcite": [
                {
                    "class": "bwm",
                    "display_name": "Calcite",
                    "field": "oB",
                    "hardness": 0.75,
                    "max_state_id": 17567,
                    "min_state_id": 17567,
                    "num_states": 1,
                    "numeric_id": 807,
                    "resistance": 0.75,
                    "states": [],
                    "text_id": "calcite"
                },
                null
            ],
            "candle": [
                {
                    "class": "bwy",
                    "display_name": "Candle",
                    "field": "nM",
                    "hardness": 0.1,
                    "max_state_id": 17177,
                    "min_state_id": 17162,
                    "num_states": 16,
                    "numeric_id": 766,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 4,
                            "min": 1,
                            "name": "candles",
                            "num_values": 4,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "candle"
                },
                null
            ],
            "candle_cake": [
                {
                    "class": "bwz",
                    "display_name": "Candle Cake",
                    "field": "od",
                    "light": 3,
                    "max_state_id": 17435,
                    "min_state_id": 17434,
                    "num_states": 2,
                    "numeric_id": 783,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "candle_cake"
                },
                null
            ],
            "cauldron": [
                {
                    "class": "bxd",
                    "display_name": "Cauldron",
                    "field": "eb",
                    "hardness": 2.0,
                    "max_state_id": 5179,
                    "min_state_id": 5179,
                    "num_states": 1,
                    "numeric_id": 261,
                    "resistance": 2.0,
                    "states": [],
                    "text_id": "cauldron"
                },
                {
                    "class": "bvc",
                    "display_name": "Cauldron",
                    "field": "eb",
                    "hardness": 2.0,
                    "max_state_id": 5148,
                    "min_state_id": 5145,
                    "num_states": 4,
                    "numeric_id": 261,
                    "resistance": 2.0,
                    "states": [
                        {
                            "declared_in": "cex",
                            "field_name": "a",
                            "max": 3,
                            "min": 0,
                            "name": "level",
                            "num_values": 4,
                            "type": "int"
                        }
                    ],
                    "text_id": "cauldron"
                }
            ],
            "copper_block": [
                {
                    "class": "bxg",
                    "display_name": "Copper Block",
                    "field": "oI",
                    "hardness": 3.0,
                    "max_state_id": 17669,
                    "min_state_id": 17669,
                    "num_states": 1,
                    "numeric_id": 814,
                    "resistance": 6.0,
                    "states": [],
                    "text_id": "copper_block"
                },
                null
            ],
            "copper_ore": [
                {
                    "class": "bwm",
                    "display_name": "Copper Ore",
                    "field": "oJ",
                    "max_state_id": 17670,
                    "min_state_id": 17670,
                    "num_states": 1,
                    "numeric_id": 815,
                    "states": [],
                    "text_id": "copper_ore"
                },
                null
            ],
            "cut_copper": [
                {
                    "class": "bxg",
                    "display_name": "Cut Copper",
                    "field": "oN",
                    "max_state_id": 17674,
                    "min_state_id": 17674,
                    "num_states": 1,
                    "numeric_id": 819,
                    "states": [],
                    "text_id": "cut_copper"
                },
                null
            ],
            "cut_copper_slab": [
                {
                    "class": "bxh",
                    "display_name": "Cut Copper Slab",
                    "field": "oV",
                    "max_state_id": 18018,
                    "min_state_id": 18013,
                    "num_states": 6,
                    "numeric_id": 827,
                    "states": [
                        {
                            "declared_in": "chq",
                            "enum_class": "cih",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "cut_copper_slab"
                },
                null
            ],
            "cut_copper_stairs": [
                {
                    "class": "bxi",
                    "display_name": "Cut Copper Stairs",
                    "field": "oR",
                    "max_state_id": 17994,
                    "min_state_id": 17915,
                    "num_states": 80,
                    "numeric_id": 823,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "enum_class": "chz",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "enum_class": "cii",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "cut_copper_stairs"
                },
                null
            ],
            "cyan_candle": [
                {
                    "class": "bwy",
                    "display_name": "Cyan Candle",
                    "field": "nW",
                    "hardness": 0.1,
                    "max_state_id": 17337,
                    "min_state_id": 17322,
                    "num_states": 16,
                    "numeric_id": 776,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 4,
                            "min": 1,
                            "name": "candles",
                            "num_values": 4,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "cyan_candle"
                },
                null
            ],
            "cyan_candle_cake": [
                {
                    "class": "bwz",
                    "display_name": "Cyan Candle Cake",
                    "field": "on",
                    "max_state_id": 17455,
                    "min_state_id": 17454,
                    "num_states": 2,
                    "numeric_id": 793,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "cyan_candle_cake"
                },
                null
            ],
            "detector_rail": [
                {
                    "class": "byc",
                    "display_name": "Detector Rail",
                    "field": "aO",
                    "hardness": 0.7,
                    "max_state_id": 1352,
                    "min_state_id": 1329,
                    "num_states": 24,
                    "numeric_id": 92,
                    "resistance": 0.7,
                    "states": [
                        {
                            "declared_in": "chq",
                            "enum_class": "cie",
                            "field_name": "d",
                            "name": "shape",
                            "num_values": 6,
                            "predicate": "java/util/function/Predicate",
                            "type": "enum",
                            "values": [
                                "NORTH_SOUTH",
                                "EAST_WEST",
                                "ASCENDING_EAST",
                                "ASCENDING_WEST",
                                "ASCENDING_NORTH",
                                "ASCENDING_SOUTH"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "e",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "detector_rail"
                },
                {
                    "class": "bvx",
                    "display_name": "Detector Rail",
                    "field": "aO",
                    "hardness": 0.7,
                    "max_state_id": 1328,
                    "min_state_id": 1317,
                    "num_states": 12,
                    "numeric_id": 92,
                    "resistance": 0.7,
                    "states": [
                        {
                            "declared_in": "cex",
                            "enum_class": "cfk",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 6,
                            "predicate": "java/util/function/Predicate",
                            "type": "enum",
                            "values": [
                                "NORTH_SOUTH",
                                "EAST_WEST",
                                "ASCENDING_EAST",
                                "ASCENDING_WEST",
                                "ASCENDING_NORTH",
                                "ASCENDING_SOUTH"
                            ]
                        },
                        {
                            "declared_in": "cex",
                            "field_name": "d",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "detector_rail"
                }
            ],
            "dirt_path": [
                {
                    "class": "byf",
                    "display_name": "Dirt Path",
                    "field": "iH",
                    "hardness": 0.65,
                    "max_state_id": 9277,
                    "min_state_id": 9277,
                    "num_states": 1,
                    "numeric_id": 501,
                    "resistance": 0.65,
                    "states": [],
                    "text_id": "dirt_path"
                },
                null
            ],
            "dripstone_block": [
                {
                    "class": "bwm",
                    "display_name": "Dripstone Block",
                    "field": "pk",
                    "hardness": 1.5,
                    "max_state_id": 18315,
                    "min_state_id": 18315,
                    "num_states": 1,
                    "numeric_id": 842,
                    "resistance": 1.0,
                    "states": [],
                    "text_id": "dripstone_block"
                },
                null
            ],
            "grass_path": [
                null,
                {
                    "class": "bxc",
                    "display_name": "Grass Path",
                    "field": "iE",
                    "hardness": 0.65,
                    "max_state_id": 9227,
                    "min_state_id": 9227,
                    "num_states": 1,
                    "numeric_id": 498,
                    "resistance": 0.65,
                    "states": [],
                    "text_id": "grass_path"
                }
            ],
            "gray_candle": [
                {
                    "class": "bwy",
                    "display_name": "Gray Candle",
                    "field": "nU",
                    "hardness": 0.1,
                    "max_state_id": 17305,
                    "min_state_id": 17290,
                    "num_states": 16,
                    "numeric_id": 774,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 4,
                            "min": 1,
                            "name": "candles",
                            "num_values": 4,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "gray_candle"
                },
                null
            ],
            "gray_candle_cake": [
                {
                    "class": "bwz",
                    "display_name": "Gray Candle Cake",
                    "field": "ol",
                    "max_state_id": 17451,
                    "min_state_id": 17450,
                    "num_states": 2,
                    "numeric_id": 791,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "gray_candle_cake"
                },
                null
            ],
            "green_candle": [
                {
                    "class": "bwy",
                    "display_name": "Green Candle",
                    "field": "oa",
                    "hardness": 0.1,
                    "max_state_id": 17401,
                    "min_state_id": 17386,
                    "num_states": 16,
                    "numeric_id": 780,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 4,
                            "min": 1,
                            "name": "candles",
                            "num_values": 4,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "green_candle"
                },
                null
            ],
            "green_candle_cake": [
                {
                    "class": "bwz",
                    "display_name": "Green Candle Cake",
                    "field": "or",
                    "max_state_id": 17463,
                    "min_state_id": 17462,
                    "num_states": 2,
                    "numeric_id": 797,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "green_candle_cake"
                },
                null
            ],
            "lapis_block": [
                {
                    "class": "bwm",
                    "display_name": "Block of Lapis Lazuli",
                    "field": "ar",
                    "hardness": 3.0,
                    "max_state_id": 233,
                    "min_state_id": 233,
                    "num_states": 1,
                    "numeric_id": 69,
                    "resistance": 3.0,
                    "states": [],
                    "text_id": "lapis_block"
                },
                {
                    "class": "buo",
                    "display_name": "Lapis Lazuli Block",
                    "field": "ar",
                    "hardness": 3.0,
                    "max_state_id": 233,
                    "min_state_id": 233,
                    "num_states": 1,
                    "numeric_id": 69,
                    "resistance": 3.0,
                    "states": [],
                    "text_id": "lapis_block"
                }
            ],
            "large_amethyst_bud": [
                {
                    "class": "bvp",
                    "display_name": "Large Amethyst Bud",
                    "field": "ox",
                    "light": 4,
                    "max_state_id": 17517,
                    "min_state_id": 17494,
                    "num_states": 24,
                    "numeric_id": 803,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "a",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "facing",
                            "num_values": 6,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST",
                                "UP",
                                "DOWN"
                            ]
                        }
                    ],
                    "text_id": "large_amethyst_bud"
                },
                null
            ],
            "lava_cauldron": [
                {
                    "class": "cae",
                    "display_name": "Lava Cauldron",
                    "field": "ed",
                    "light": 15,
                    "max_state_id": 5183,
                    "min_state_id": 5183,
                    "num_states": 1,
                    "numeric_id": 263,
                    "states": [],
                    "text_id": "lava_cauldron"
                },
                null
            ],
            "light_blue_candle": [
                {
                    "class": "bwy",
                    "display_name": "Light Blue Candle",
                    "field": "nQ",
                    "hardness": 0.1,
                    "max_state_id": 17241,
                    "min_state_id": 17226,
                    "num_states": 16,
                    "numeric_id": 770,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 4,
                            "min": 1,
                            "name": "candles",
                            "num_values": 4,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "light_blue_candle"
                },
                null
            ],
            "light_blue_candle_cake": [
                {
                    "class": "bwz",
                    "display_name": "Light Blue Candle Cake",
                    "field": "oh",
                    "max_state_id": 17443,
                    "min_state_id": 17442,
                    "num_states": 2,
                    "numeric_id": 787,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "light_blue_candle_cake"
                },
                null
            ],
            "light_gray_candle": [
                {
                    "class": "bwy",
                    "display_name": "Light Gray Candle",
                    "field": "nV",
                    "hardness": 0.1,
                    "max_state_id": 17321,
                    "min_state_id": 17306,
                    "num_states": 16,
                    "numeric_id": 775,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 4,
                            "min": 1,
                            "name": "candles",
                            "num_values": 4,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "light_gray_candle"
                },
                null
            ],
            "light_gray_candle_cake": [
                {
                    "class": "bwz",
                    "display_name": "Light Gray Candle Cake",
                    "field": "om",
                    "max_state_id": 17453,
                    "min_state_id": 17452,
                    "num_states": 2,
                    "numeric_id": 792,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "light_gray_candle_cake"
                },
                null
            ],
            "lightly_weathered_copper_block": [
                {
                    "class": "bxg",
                    "display_name": "Lightly Weathered Copper Block",
                    "field": "oH",
                    "hardness": 3.0,
                    "max_state_id": 17668,
                    "min_state_id": 17668,
                    "num_states": 1,
                    "numeric_id": 813,
                    "resistance": 6.0,
                    "states": [],
                    "text_id": "lightly_weathered_copper_block"
                },
                null
            ],
            "lightly_weathered_cut_copper": [
                {
                    "class": "bxg",
                    "display_name": "Lightly Weathered Cut Copper",
                    "field": "oM",
                    "max_state_id": 17673,
                    "min_state_id": 17673,
                    "num_states": 1,
                    "numeric_id": 818,
                    "states": [],
                    "text_id": "lightly_weathered_cut_copper"
                },
                null
            ],
            "lightly_weathered_cut_copper_slab": [
                {
                    "class": "bxh",
                    "display_name": "Lightly Weathered Cut Copper Slab",
                    "field": "oU",
                    "max_state_id": 18012,
                    "min_state_id": 18007,
                    "num_states": 6,
                    "numeric_id": 826,
                    "states": [
                        {
                            "declared_in": "chq",
                            "enum_class": "cih",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "lightly_weathered_cut_copper_slab"
                },
                null
            ],
            "lightly_weathered_cut_copper_stairs": [
                {
                    "class": "bxi",
                    "display_name": "Lightly Weathered Cut Copper Stairs",
                    "field": "oQ",
                    "max_state_id": 17914,
                    "min_state_id": 17835,
                    "num_states": 80,
                    "numeric_id": 822,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "enum_class": "chz",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "enum_class": "cii",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "lightly_weathered_cut_copper_stairs"
                },
                null
            ],
            "lightning_rod": [
                {
                    "class": "cak",
                    "display_name": "Lightning Rod",
                    "field": "pi",
                    "hardness": 3.0,
                    "max_state_id": 18294,
                    "min_state_id": 18283,
                    "num_states": 12,
                    "numeric_id": 840,
                    "resistance": 6.0,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 6,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST",
                                "UP",
                                "DOWN"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "lightning_rod"
                },
                null
            ],
            "lime_candle": [
                {
                    "class": "bwy",
                    "display_name": "Lime Candle",
                    "field": "nS",
                    "hardness": 0.1,
                    "max_state_id": 17273,
                    "min_state_id": 17258,
                    "num_states": 16,
                    "numeric_id": 772,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 4,
                            "min": 1,
                            "name": "candles",
                            "num_values": 4,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "lime_candle"
                },
                null
            ],
            "lime_candle_cake": [
                {
                    "class": "bwz",
                    "display_name": "Lime Candle Cake",
                    "field": "oj",
                    "max_state_id": 17447,
                    "min_state_id": 17446,
                    "num_states": 2,
                    "numeric_id": 789,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "lime_candle_cake"
                },
                null
            ],
            "magenta_candle": [
                {
                    "class": "bwy",
                    "display_name": "Magenta Candle",
                    "field": "nP",
                    "hardness": 0.1,
                    "max_state_id": 17225,
                    "min_state_id": 17210,
                    "num_states": 16,
                    "numeric_id": 769,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 4,
                            "min": 1,
                            "name": "candles",
                            "num_values": 4,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "magenta_candle"
                },
                null
            ],
            "magenta_candle_cake": [
                {
                    "class": "bwz",
                    "display_name": "Magenta Candle Cake",
                    "field": "og",
                    "max_state_id": 17441,
                    "min_state_id": 17440,
                    "num_states": 2,
                    "numeric_id": 786,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "magenta_candle_cake"
                },
                null
            ],
            "medium_amethyst_bud": [
                {
                    "class": "bvp",
                    "display_name": "Medium Amethyst Bud",
                    "field": "oy",
                    "light": 2,
                    "max_state_id": 17541,
                    "min_state_id": 17518,
                    "num_states": 24,
                    "numeric_id": 804,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "a",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "facing",
                            "num_values": 6,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST",
                                "UP",
                                "DOWN"
                            ]
                        }
                    ],
                    "text_id": "medium_amethyst_bud"
                },
                null
            ],
            "orange_candle": [
                {
                    "class": "bwy",
                    "display_name": "Orange Candle",
                    "field": "nO",
                    "hardness": 0.1,
                    "max_state_id": 17209,
                    "min_state_id": 17194,
                    "num_states": 16,
                    "numeric_id": 768,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 4,
                            "min": 1,
                            "name": "candles",
                            "num_values": 4,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "orange_candle"
                },
                null
            ],
            "orange_candle_cake": [
                {
                    "class": "bwz",
                    "display_name": "Orange Candle Cake",
                    "field": "of",
                    "max_state_id": 17439,
                    "min_state_id": 17438,
                    "num_states": 2,
                    "numeric_id": 785,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "orange_candle_cake"
                },
                null
            ],
            "pink_candle": [
                {
                    "class": "bwy",
                    "display_name": "Pink Candle",
                    "field": "nT",
                    "hardness": 0.1,
                    "max_state_id": 17289,
                    "min_state_id": 17274,
                    "num_states": 16,
                    "numeric_id": 773,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 4,
                            "min": 1,
                            "name": "candles",
                            "num_values": 4,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "pink_candle"
                },
                null
            ],
            "pink_candle_cake": [
                {
                    "class": "bwz",
                    "display_name": "Pink Candle Cake",
                    "field": "ok",
                    "max_state_id": 17449,
                    "min_state_id": 17448,
                    "num_states": 2,
                    "numeric_id": 790,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "pink_candle_cake"
                },
                null
            ],
            "pointed_dripstone": [
                {
                    "class": "cbf",
                    "display_name": "Pointed Dripstone",
                    "field": "pj",
                    "hardness": 1.5,
                    "max_state_id": 18314,
                    "min_state_id": 18295,
                    "num_states": 20,
                    "numeric_id": 841,
                    "resistance": 3.0,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "a",
                            "name": "vertical_direction",
                            "num_values": 2,
                            "type": "direction",
                            "values": [
                                "UP",
                                "DOWN"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "enum_class": "chx",
                            "field_name": "b",
                            "name": "thickness",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "TIP_MERGE",
                                "TIP",
                                "FRUSTUM",
                                "MIDDLE",
                                "BASE"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "pointed_dripstone"
                },
                null
            ],
            "powder_snow": [
                {
                    "class": "cbh",
                    "display_name": "Powder Snow",
                    "field": "oD",
                    "hardness": 0.1,
                    "max_state_id": 17569,
                    "min_state_id": 17569,
                    "num_states": 1,
                    "numeric_id": 809,
                    "resistance": 0.1,
                    "states": [],
                    "text_id": "powder_snow"
                },
                null
            ],
            "powder_snow_cauldron": [
                {
                    "class": "caf",
                    "display_name": "Powder Snow Cauldron",
                    "field": "ee",
                    "max_state_id": 5186,
                    "min_state_id": 5184,
                    "num_states": 3,
                    "numeric_id": 264,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 3,
                            "min": 1,
                            "name": "level",
                            "num_values": 3,
                            "type": "int"
                        }
                    ],
                    "text_id": "powder_snow_cauldron"
                },
                null
            ],
            "powered_rail": [
                {
                    "class": "cbj",
                    "display_name": "Powered Rail",
                    "field": "aN",
                    "hardness": 0.7,
                    "max_state_id": 1328,
                    "min_state_id": 1305,
                    "num_states": 24,
                    "numeric_id": 91,
                    "resistance": 0.7,
                    "states": [
                        {
                            "declared_in": "chq",
                            "enum_class": "cie",
                            "field_name": "d",
                            "name": "shape",
                            "num_values": 6,
                            "predicate": "java/util/function/Predicate",
                            "type": "enum",
                            "values": [
                                "NORTH_SOUTH",
                                "EAST_WEST",
                                "ASCENDING_EAST",
                                "ASCENDING_WEST",
                                "ASCENDING_NORTH",
                                "ASCENDING_SOUTH"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "e",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "powered_rail"
                },
                {
                    "class": "byx",
                    "display_name": "Powered Rail",
                    "field": "aN",
                    "hardness": 0.7,
                    "max_state_id": 1316,
                    "min_state_id": 1305,
                    "num_states": 12,
                    "numeric_id": 91,
                    "resistance": 0.7,
                    "states": [
                        {
                            "declared_in": "cex",
                            "enum_class": "cfk",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 6,
                            "predicate": "java/util/function/Predicate",
                            "type": "enum",
                            "values": [
                                "NORTH_SOUTH",
                                "EAST_WEST",
                                "ASCENDING_EAST",
                                "ASCENDING_WEST",
                                "ASCENDING_NORTH",
                                "ASCENDING_SOUTH"
                            ]
                        },
                        {
                            "declared_in": "cex",
                            "field_name": "d",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "powered_rail"
                }
            ],
            "purple_candle": [
                {
                    "class": "bwy",
                    "display_name": "Purple Candle",
                    "field": "nX",
                    "hardness": 0.1,
                    "max_state_id": 17353,
                    "min_state_id": 17338,
                    "num_states": 16,
                    "numeric_id": 777,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 4,
                            "min": 1,
                            "name": "candles",
                            "num_values": 4,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "purple_candle"
                },
                null
            ],
            "purple_candle_cake": [
                {
                    "class": "bwz",
                    "display_name": "Purple Candle Cake",
                    "field": "oo",
                    "max_state_id": 17457,
                    "min_state_id": 17456,
                    "num_states": 2,
                    "numeric_id": 794,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "purple_candle_cake"
                },
                null
            ],
            "rail": [
                {
                    "class": "cbm",
                    "display_name": "Rail",
                    "field": "ch",
                    "hardness": 0.7,
                    "max_state_id": 3688,
                    "min_state_id": 3669,
                    "num_states": 20,
                    "numeric_id": 163,
                    "resistance": 0.7,
                    "states": [
                        {
                            "declared_in": "chq",
                            "enum_class": "cie",
                            "field_name": "d",
                            "name": "shape",
                            "num_values": 10,
                            "type": "enum",
                            "values": [
                                "NORTH_SOUTH",
                                "EAST_WEST",
                                "ASCENDING_EAST",
                                "ASCENDING_WEST",
                                "ASCENDING_NORTH",
                                "ASCENDING_SOUTH",
                                "SOUTH_EAST",
                                "SOUTH_WEST",
                                "NORTH_WEST",
                                "NORTH_EAST"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "rail"
                },
                {
                    "class": "bza",
                    "display_name": "Rail",
                    "field": "ch",
                    "hardness": 0.7,
                    "max_state_id": 3654,
                    "min_state_id": 3645,
                    "num_states": 10,
                    "numeric_id": 163,
                    "resistance": 0.7,
                    "states": [
                        {
                            "declared_in": "cex",
                            "enum_class": "cfk",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 10,
                            "type": "enum",
                            "values": [
                                "NORTH_SOUTH",
                                "EAST_WEST",
                                "ASCENDING_EAST",
                                "ASCENDING_WEST",
                                "ASCENDING_NORTH",
                                "ASCENDING_SOUTH",
                                "SOUTH_EAST",
                                "SOUTH_WEST",
                                "NORTH_WEST",
                                "NORTH_EAST"
                            ]
                        }
                    ],
                    "text_id": "rail"
                }
            ],
            "red_candle": [
                {
                    "class": "bwy",
                    "display_name": "Red Candle",
                    "field": "ob",
                    "hardness": 0.1,
                    "max_state_id": 17417,
                    "min_state_id": 17402,
                    "num_states": 16,
                    "numeric_id": 781,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 4,
                            "min": 1,
                            "name": "candles",
                            "num_values": 4,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "red_candle"
                },
                null
            ],
            "red_candle_cake": [
                {
                    "class": "bwz",
                    "display_name": "Red Candle Cake",
                    "field": "os",
                    "max_state_id": 17465,
                    "min_state_id": 17464,
                    "num_states": 2,
                    "numeric_id": 798,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "red_candle_cake"
                },
                null
            ],
            "sculk_sensor": [
                {
                    "block_entity": "sculk_sensor",
                    "class": "ccd",
                    "display_name": "Sculk Sensor",
                    "field": "oE",
                    "hardness": 1.5,
                    "light": 1,
                    "max_state_id": 17665,
                    "min_state_id": 17570,
                    "num_states": 96,
                    "numeric_id": 810,
                    "resistance": 1.5,
                    "states": [
                        {
                            "declared_in": "chq",
                            "enum_class": "cig",
                            "field_name": "b",
                            "name": "sculk_sensor_phase",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "INACTIVE",
                                "ACTIVE",
                                "COOLDOWN"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "max": 15,
                            "min": 0,
                            "name": "power",
                            "num_values": 16,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "sculk_sensor"
                },
                null
            ],
            "semi_weathered_copper_block": [
                {
                    "class": "bxg",
                    "display_name": "Semi-Weathered Copper Block",
                    "field": "oG",
                    "hardness": 3.0,
                    "max_state_id": 17667,
                    "min_state_id": 17667,
                    "num_states": 1,
                    "numeric_id": 812,
                    "resistance": 6.0,
                    "states": [],
                    "text_id": "semi_weathered_copper_block"
                },
                null
            ],
            "semi_weathered_cut_copper": [
                {
                    "class": "bxg",
                    "display_name": "Semi-Weathered Cut Copper",
                    "field": "oL",
                    "max_state_id": 17672,
                    "min_state_id": 17672,
                    "num_states": 1,
                    "numeric_id": 817,
                    "states": [],
                    "text_id": "semi_weathered_cut_copper"
                },
                null
            ],
            "semi_weathered_cut_copper_slab": [
                {
                    "class": "bxh",
                    "display_name": "Semi Weathered Cut Copper Slab",
                    "field": "oT",
                    "max_state_id": 18006,
                    "min_state_id": 18001,
                    "num_states": 6,
                    "numeric_id": 825,
                    "states": [
                        {
                            "declared_in": "chq",
                            "enum_class": "cih",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "semi_weathered_cut_copper_slab"
                },
                null
            ],
            "semi_weathered_cut_copper_stairs": [
                {
                    "class": "bxi",
                    "display_name": "Semi-Weathered Cut Copper Stairs",
                    "field": "oP",
                    "max_state_id": 17834,
                    "min_state_id": 17755,
                    "num_states": 80,
                    "numeric_id": 821,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "enum_class": "chz",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "enum_class": "cii",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "semi_weathered_cut_copper_stairs"
                },
                null
            ],
            "small_amethyst_bud": [
                {
                    "class": "bvp",
                    "display_name": "Small Amethyst Bud",
                    "field": "oz",
                    "light": 1,
                    "max_state_id": 17565,
                    "min_state_id": 17542,
                    "num_states": 24,
                    "numeric_id": 805,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "a",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "facing",
                            "num_values": 6,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST",
                                "UP",
                                "DOWN"
                            ]
                        }
                    ],
                    "text_id": "small_amethyst_bud"
                },
                null
            ],
            "tinted_glass": [
                {
                    "class": "cdn",
                    "display_name": "Tinted Glass",
                    "field": "oC",
                    "max_state_id": 17568,
                    "min_state_id": 17568,
                    "num_states": 1,
                    "numeric_id": 808,
                    "states": [],
                    "text_id": "tinted_glass"
                },
                null
            ],
            "tuff": [
                {
                    "class": "bwm",
                    "display_name": "Tuff",
                    "field": "oA",
                    "hardness": 1.5,
                    "max_state_id": 17566,
                    "min_state_id": 17566,
                    "num_states": 1,
                    "numeric_id": 806,
                    "resistance": 6.0,
                    "states": [],
                    "text_id": "tuff"
                },
                null
            ],
            "water_cauldron": [
                {
                    "class": "caf",
                    "display_name": "Water Cauldron",
                    "field": "ec",
                    "max_state_id": 5182,
                    "min_state_id": 5180,
                    "num_states": 3,
                    "numeric_id": 262,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 3,
                            "min": 1,
                            "name": "level",
                            "num_values": 3,
                            "type": "int"
                        }
                    ],
                    "text_id": "water_cauldron"
                },
                null
            ],
            "waxed_copper": [
                {
                    "class": "bwm",
                    "display_name": "Waxed Copper",
                    "field": "oW",
                    "max_state_id": 18019,
                    "min_state_id": 18019,
                    "num_states": 1,
                    "numeric_id": 828,
                    "states": [],
                    "text_id": "waxed_copper"
                },
                null
            ],
            "waxed_cut_copper": [
                {
                    "class": "bwm",
                    "display_name": "Waxed Cut Copper",
                    "field": "pb",
                    "max_state_id": 18024,
                    "min_state_id": 18024,
                    "num_states": 1,
                    "numeric_id": 833,
                    "states": [],
                    "text_id": "waxed_cut_copper"
                },
                null
            ],
            "waxed_cut_copper_slab": [
                {
                    "class": "cck",
                    "display_name": "Waxed Cut Copper Slab",
                    "field": "ph",
                    "max_state_id": 18282,
                    "min_state_id": 18277,
                    "num_states": 6,
                    "numeric_id": 839,
                    "states": [
                        {
                            "declared_in": "chq",
                            "enum_class": "cih",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "waxed_cut_copper_slab"
                },
                null
            ],
            "waxed_cut_copper_stairs": [
                {
                    "class": "ccy",
                    "display_name": "Waxed Cut Copper Stairs",
                    "field": "pe",
                    "max_state_id": 18264,
                    "min_state_id": 18185,
                    "num_states": 80,
                    "numeric_id": 836,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "enum_class": "chz",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "enum_class": "cii",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "waxed_cut_copper_stairs"
                },
                null
            ],
            "waxed_lightly_weathered_copper": [
                {
                    "class": "bwm",
                    "display_name": "Waxed Lightly Weathered Copper",
                    "field": "oY",
                    "max_state_id": 18021,
                    "min_state_id": 18021,
                    "num_states": 1,
                    "numeric_id": 830,
                    "states": [],
                    "text_id": "waxed_lightly_weathered_copper"
                },
                null
            ],
            "waxed_lightly_weathered_cut_copper": [
                {
                    "class": "bwm",
                    "display_name": "Waxed Lightly Weathered Cut Copper",
                    "field": "pa",
                    "max_state_id": 18023,
                    "min_state_id": 18023,
                    "num_states": 1,
                    "numeric_id": 832,
                    "states": [],
                    "text_id": "waxed_lightly_weathered_cut_copper"
                },
                null
            ],
            "waxed_lightly_weathered_cut_copper_slab": [
                {
                    "class": "cck",
                    "display_name": "Waxed Lightly Weathered Cut Copper Slab",
                    "field": "pg",
                    "max_state_id": 18276,
                    "min_state_id": 18271,
                    "num_states": 6,
                    "numeric_id": 838,
                    "states": [
                        {
                            "declared_in": "chq",
                            "enum_class": "cih",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "waxed_lightly_weathered_cut_copper_slab"
                },
                null
            ],
            "waxed_lightly_weathered_cut_copper_stairs": [
                {
                    "class": "ccy",
                    "display_name": "Waxed Lightly Weathered Cut Copper Stairs",
                    "field": "pd",
                    "max_state_id": 18184,
                    "min_state_id": 18105,
                    "num_states": 80,
                    "numeric_id": 835,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "enum_class": "chz",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "enum_class": "cii",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "waxed_lightly_weathered_cut_copper_stairs"
                },
                null
            ],
            "waxed_semi_weathered_copper": [
                {
                    "class": "bwm",
                    "display_name": "Waxed Semi-Weathered Copper",
                    "field": "oX",
                    "max_state_id": 18020,
                    "min_state_id": 18020,
                    "num_states": 1,
                    "numeric_id": 829,
                    "states": [],
                    "text_id": "waxed_semi_weathered_copper"
                },
                null
            ],
            "waxed_semi_weathered_cut_copper": [
                {
                    "class": "bwm",
                    "display_name": "Waxed Semi-Weathered Cut Copper",
                    "field": "oZ",
                    "max_state_id": 18022,
                    "min_state_id": 18022,
                    "num_states": 1,
                    "numeric_id": 831,
                    "states": [],
                    "text_id": "waxed_semi_weathered_cut_copper"
                },
                null
            ],
            "waxed_semi_weathered_cut_copper_slab": [
                {
                    "class": "cck",
                    "display_name": "Waxed Semi Weathered Cut Copper Slab",
                    "field": "pf",
                    "max_state_id": 18270,
                    "min_state_id": 18265,
                    "num_states": 6,
                    "numeric_id": 837,
                    "states": [
                        {
                            "declared_in": "chq",
                            "enum_class": "cih",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "waxed_semi_weathered_cut_copper_slab"
                },
                null
            ],
            "waxed_semi_weathered_cut_copper_stairs": [
                {
                    "class": "ccy",
                    "display_name": "Waxed Semi-Weathered Cut Copper Stairs",
                    "field": "pc",
                    "max_state_id": 18104,
                    "min_state_id": 18025,
                    "num_states": 80,
                    "numeric_id": 834,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "enum_class": "chz",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "enum_class": "cii",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "waxed_semi_weathered_cut_copper_stairs"
                },
                null
            ],
            "weathered_copper_block": [
                {
                    "class": "bwm",
                    "display_name": "Weathered Copper BlocK",
                    "field": "oF",
                    "hardness": 3.0,
                    "max_state_id": 17666,
                    "min_state_id": 17666,
                    "num_states": 1,
                    "numeric_id": 811,
                    "resistance": 6.0,
                    "states": [],
                    "text_id": "weathered_copper_block"
                },
                null
            ],
            "weathered_cut_copper": [
                {
                    "class": "bwm",
                    "display_name": "Weathered Cut Copper",
                    "field": "oK",
                    "max_state_id": 17671,
                    "min_state_id": 17671,
                    "num_states": 1,
                    "numeric_id": 816,
                    "states": [],
                    "text_id": "weathered_cut_copper"
                },
                null
            ],
            "weathered_cut_copper_slab": [
                {
                    "class": "cck",
                    "display_name": "Weathered Cut Copper Slab",
                    "field": "oS",
                    "max_state_id": 18000,
                    "min_state_id": 17995,
                    "num_states": 6,
                    "numeric_id": 824,
                    "states": [
                        {
                            "declared_in": "chq",
                            "enum_class": "cih",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "weathered_cut_copper_slab"
                },
                null
            ],
            "weathered_cut_copper_stairs": [
                {
                    "class": "ccy",
                    "display_name": "Weathered Cut Copper Stairs",
                    "field": "oO",
                    "max_state_id": 17754,
                    "min_state_id": 17675,
                    "num_states": 80,
                    "numeric_id": 820,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "enum_class": "chz",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "enum_class": "cii",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "weathered_cut_copper_stairs"
                },
                null
            ],
            "white_candle": [
                {
                    "class": "bwy",
                    "display_name": "White Candle",
                    "field": "nN",
                    "hardness": 0.1,
                    "max_state_id": 17193,
                    "min_state_id": 17178,
                    "num_states": 16,
                    "numeric_id": 767,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 4,
                            "min": 1,
                            "name": "candles",
                            "num_values": 4,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "white_candle"
                },
                null
            ],
            "white_candle_cake": [
                {
                    "class": "bwz",
                    "display_name": "White Candle Cake",
                    "field": "oe",
                    "max_state_id": 17437,
                    "min_state_id": 17436,
                    "num_states": 2,
                    "numeric_id": 784,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "white_candle_cake"
                },
                null
            ],
            "yellow_candle": [
                {
                    "class": "bwy",
                    "display_name": "Yellow Candle",
                    "field": "nR",
                    "hardness": 0.1,
                    "max_state_id": 17257,
                    "min_state_id": 17242,
                    "num_states": 16,
                    "numeric_id": 771,
                    "resistance": 0.1,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "max": 4,
                            "min": 1,
                            "name": "candles",
                            "num_values": 4,
                            "type": "int"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "chq",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "yellow_candle"
                },
                null
            ],
            "yellow_candle_cake": [
                {
                    "class": "bwz",
                    "display_name": "Yellow Candle Cake",
                    "field": "oi",
                    "max_state_id": 17445,
                    "min_state_id": 17444,
                    "num_states": 2,
                    "numeric_id": 788,
                    "states": [
                        {
                            "declared_in": "chq",
                            "field_name": "b",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "yellow_candle_cake"
                },
                null
            ]
        }
    },
    "entities": {
        "dataserializers": {},
        "entity": {
            "axolotl": [
                {
                    "class": "bcg",
                    "display_name": "Axolotl",
                    "field": "d",
                    "height": 0.42,
                    "id": 3,
                    "metadata": [
                        {
                            "class": "bbe",
                            "entity": "~abstract_animal"
                        },
                        {
                            "bitfields": [],
                            "class": "bcg",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "bm",
                                    "index": 17,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "bn",
                                    "index": 18,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": false,
                                    "field": "bo",
                                    "index": 19,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "axolotl",
                    "width": 0.75
                },
                null
            ],
            "fishing_bobber": [
                {
                    "class": "bhs",
                    "display_name": "Fishing Bobber",
                    "field": "be",
                    "height": 0.25,
                    "id": 108,
                    "metadata": [
                        {
                            "class": "aqr",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bhs",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "e",
                                    "index": 8,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "f",
                                    "index": 9,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "fishing_bobber",
                    "width": 0.25
                },
                {
                    "class": "bgi",
                    "display_name": "Fishing Bobber",
                    "field": "bd",
                    "height": 0.25,
                    "id": 107,
                    "metadata": [
                        {
                            "class": "aqa",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bgi",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "e",
                                    "index": 7,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": false,
                                    "field": "f",
                                    "index": 8,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                }
                            ]
                        }
                    ],
                    "name": "fishing_bobber",
                    "serializable": "false",
                    "width": 0.25
                }
            ],
            "leash_knot": [
                {
                    "class": "bea",
                    "display_name": "Leash Knot",
                    "field": "P",
                    "height": 0.5,
                    "id": 41,
                    "metadata": [
                        {
                            "class": "aqr",
                            "entity": "~abstract_entity"
                        }
                    ],
                    "name": "leash_knot",
                    "width": 0.375
                },
                {
                    "class": "bcq",
                    "display_name": "Leash Knot",
                    "field": "O",
                    "height": 0.5,
                    "id": 40,
                    "metadata": [
                        {
                            "class": "aqa",
                            "entity": "~abstract_entity"
                        }
                    ],
                    "name": "leash_knot",
                    "width": 0.5
                }
            ],
            "~abstract_entity": [
                {
                    "class": "aqr",
                    "metadata": [
                        {
                            "bitfields": [
                                {
                                    "class": "aqr",
                                    "mask": 1,
                                    "method": "bs"
                                },
                                {
                                    "class": "aqr",
                                    "mask": 2,
                                    "method": "bw"
                                },
                                {
                                    "class": "aqr",
                                    "mask": 8,
                                    "method": "bC"
                                },
                                {
                                    "class": "aqr",
                                    "mask": 16,
                                    "method": "bD"
                                },
                                {
                                    "class": "aqr",
                                    "mask": 64,
                                    "method": "bG"
                                },
                                {
                                    "class": "aqr",
                                    "mask": 32,
                                    "method": "bH"
                                },
                                {
                                    "class": "ard",
                                    "mask": 128,
                                    "method": "eA"
                                }
                            ],
                            "class": "aqr",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "Q",
                                    "index": 0,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "field": "al",
                                    "index": 1,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": "Empty",
                                    "field": "am",
                                    "index": 2,
                                    "serializer": "OptChat",
                                    "serializer_id": 5
                                },
                                {
                                    "default": false,
                                    "field": "an",
                                    "index": 3,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": false,
                                    "field": "ao",
                                    "index": 4,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": false,
                                    "field": "ap",
                                    "index": 5,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "field": "R",
                                    "index": 6,
                                    "serializer": "Pose",
                                    "serializer_id": 18
                                },
                                {
                                    "default": 0,
                                    "field": "aq",
                                    "index": 7,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        }
                    ],
                    "name": "~abstract_entity"
                },
                {
                    "class": "aqa",
                    "metadata": [
                        {
                            "bitfields": [
                                {
                                    "class": "aqa",
                                    "mask": 1,
                                    "method": "bq"
                                },
                                {
                                    "class": "aqa",
                                    "mask": 2,
                                    "method": "bu"
                                },
                                {
                                    "class": "aqa",
                                    "mask": 8,
                                    "method": "bA"
                                },
                                {
                                    "class": "aqa",
                                    "mask": 16,
                                    "method": "bB"
                                },
                                {
                                    "class": "aqa",
                                    "mask": 64,
                                    "method": "bE"
                                },
                                {
                                    "class": "aqa",
                                    "mask": 32,
                                    "method": "bF"
                                },
                                {
                                    "class": "aqm",
                                    "mask": 128,
                                    "method": "ef"
                                }
                            ],
                            "class": "aqa",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "S",
                                    "index": 0,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "field": "ap",
                                    "index": 1,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": "Empty",
                                    "field": "aq",
                                    "index": 2,
                                    "serializer": "OptChat",
                                    "serializer_id": 5
                                },
                                {
                                    "default": false,
                                    "field": "ar",
                                    "index": 3,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": false,
                                    "field": "as",
                                    "index": 4,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "default": false,
                                    "field": "at",
                                    "index": 5,
                                    "serializer": "Boolean",
                                    "serializer_id": 7
                                },
                                {
                                    "field": "T",
                                    "index": 6,
                                    "serializer": "Pose",
                                    "serializer_id": 18
                                }
                            ]
                        }
                    ],
                    "name": "~abstract_entity"
                }
            ]
        }
    },
    "items": {
        "item": {
            "amethyst_block": [
                {
                    "display_name": "Block of Amethyst",
                    "field": "so",
                    "max_stack_size": 64,
                    "numeric_id": 1002,
                    "text_id": "amethyst_block"
                },
                null
            ],
            "amethyst_cluster": [
                {
                    "display_name": "Amethyst Cluster",
                    "field": "st",
                    "max_stack_size": 64,
                    "numeric_id": 1007,
                    "text_id": "amethyst_cluster"
                },
                null
            ],
            "amethyst_shard": [
                {
                    "class": "bnm",
                    "display_name": "Amethyst Shard",
                    "field": "sn",
                    "max_stack_size": 64,
                    "numeric_id": 1001,
                    "text_id": "amethyst_shard"
                },
                null
            ],
            "axolotl_bucket": [
                {
                    "class": "bnz",
                    "display_name": "Bucket of Axolotl",
                    "field": "md",
                    "max_stack_size": 1,
                    "numeric_id": 679,
                    "text_id": "axolotl_bucket"
                },
                null
            ],
            "axolotl_spawn_egg": [
                {
                    "class": "bor",
                    "display_name": "Axolotl Spawn Egg",
                    "field": "nM",
                    "max_stack_size": 64,
                    "numeric_id": 766,
                    "text_id": "axolotl_spawn_egg"
                },
                null
            ],
            "black_candle": [
                {
                    "display_name": "Black Candle",
                    "field": "sm",
                    "max_stack_size": 64,
                    "numeric_id": 1000,
                    "text_id": "black_candle"
                },
                null
            ],
            "blue_candle": [
                {
                    "display_name": "Blue Candle",
                    "field": "si",
                    "max_stack_size": 64,
                    "numeric_id": 996,
                    "text_id": "blue_candle"
                },
                null
            ],
            "brown_candle": [
                {
                    "display_name": "Brown Candle",
                    "field": "sj",
                    "max_stack_size": 64,
                    "numeric_id": 997,
                    "text_id": "brown_candle"
                },
                null
            ],
            "budding_amethyst": [
                {
                    "display_name": "Budding Amethyst",
                    "field": "sp",
                    "max_stack_size": 64,
                    "numeric_id": 1003,
                    "text_id": "budding_amethyst"
                },
                null
            ],
            "bundle": [
                {
                    "class": "bmd",
                    "display_name": "Bundle",
                    "field": "mo",
                    "max_stack_size": 1,
                    "numeric_id": 690,
                    "text_id": "bundle"
                },
                null
            ],
            "calcite": [
                {
                    "display_name": "Calcite",
                    "field": "i",
                    "max_stack_size": 64,
                    "numeric_id": 8,
                    "text_id": "calcite"
                },
                null
            ],
            "candle": [
                {
                    "display_name": "Candle",
                    "field": "rW",
                    "max_stack_size": 64,
                    "numeric_id": 984,
                    "text_id": "candle"
                },
                null
            ],
            "copper_block": [
                {
                    "display_name": "Copper Block",
                    "field": "sv",
                    "max_stack_size": 64,
                    "numeric_id": 1009,
                    "text_id": "copper_block"
                },
                null
            ],
            "copper_ingot": [
                {
                    "class": "bnm",
                    "display_name": "Copper Ingot",
                    "field": "km",
                    "max_stack_size": 64,
                    "numeric_id": 584,
                    "text_id": "copper_ingot"
                },
                null
            ],
            "copper_ore": [
                {
                    "display_name": "Copper Ore",
                    "field": "L",
                    "max_stack_size": 64,
                    "numeric_id": 37,
                    "text_id": "copper_ore"
                },
                null
            ],
            "cut_copper": [
                {
                    "display_name": "Cut Copper",
                    "field": "sz",
                    "max_stack_size": 64,
                    "numeric_id": 1013,
                    "text_id": "cut_copper"
                },
                null
            ],
            "cut_copper_slab": [
                {
                    "display_name": "Cut Copper Slab",
                    "field": "sH",
                    "max_stack_size": 64,
                    "numeric_id": 1021,
                    "text_id": "cut_copper_slab"
                },
                null
            ],
            "cut_copper_stairs": [
                {
                    "display_name": "Cut Copper Stairs",
                    "field": "sD",
                    "max_stack_size": 64,
                    "numeric_id": 1017,
                    "text_id": "cut_copper_stairs"
                },
                null
            ],
            "cyan_candle": [
                {
                    "display_name": "Cyan Candle",
                    "field": "sg",
                    "max_stack_size": 64,
                    "numeric_id": 994,
                    "text_id": "cyan_candle"
                },
                null
            ],
            "dirt_path": [
                {
                    "display_name": "Dirt Path",
                    "field": "gm",
                    "max_stack_size": 64,
                    "numeric_id": 376,
                    "text_id": "dirt_path"
                },
                null
            ],
            "dripstone_block": [
                {
                    "display_name": "Dripstone Block",
                    "field": "ta",
                    "max_stack_size": 64,
                    "numeric_id": 1040,
                    "text_id": "dripstone_block"
                },
                null
            ],
            "grass_path": [
                null,
                {
                    "display_name": "Grass Path",
                    "field": "gi",
                    "max_stack_size": 64,
                    "numeric_id": 372,
                    "text_id": "grass_path"
                }
            ],
            "gray_candle": [
                {
                    "display_name": "Gray Candle",
                    "field": "se",
                    "max_stack_size": 64,
                    "numeric_id": 992,
                    "text_id": "gray_candle"
                },
                null
            ],
            "green_candle": [
                {
                    "display_name": "Green Candle",
                    "field": "sk",
                    "max_stack_size": 64,
                    "numeric_id": 998,
                    "text_id": "green_candle"
                },
                null
            ],
            "lapis_block": [
                {
                    "display_name": "Block of Lapis Lazuli",
                    "field": "aF",
                    "max_stack_size": 64,
                    "numeric_id": 83,
                    "text_id": "lapis_block"
                },
                {
                    "display_name": "Lapis Lazuli Block",
                    "field": "aB",
                    "max_stack_size": 64,
                    "numeric_id": 79,
                    "text_id": "lapis_block"
                }
            ],
            "large_amethyst_bud": [
                {
                    "display_name": "Large Amethyst Bud",
                    "field": "ss",
                    "max_stack_size": 64,
                    "numeric_id": 1006,
                    "text_id": "large_amethyst_bud"
                },
                null
            ],
            "light_blue_candle": [
                {
                    "display_name": "Light Blue Candle",
                    "field": "sa",
                    "max_stack_size": 64,
                    "numeric_id": 988,
                    "text_id": "light_blue_candle"
                },
                null
            ],
            "light_gray_candle": [
                {
                    "display_name": "Light Gray Candle",
                    "field": "sf",
                    "max_stack_size": 64,
                    "numeric_id": 993,
                    "text_id": "light_gray_candle"
                },
                null
            ],
            "lightly_weathered_copper_block": [
                {
                    "display_name": "Lightly Weathered Copper Block",
                    "field": "sw",
                    "max_stack_size": 64,
                    "numeric_id": 1010,
                    "text_id": "lightly_weathered_copper_block"
                },
                null
            ],
            "lightly_weathered_cut_copper": [
                {
                    "display_name": "Lightly Weathered Cut Copper",
                    "field": "sA",
                    "max_stack_size": 64,
                    "numeric_id": 1014,
                    "text_id": "lightly_weathered_cut_copper"
                },
                null
            ],
            "lightly_weathered_cut_copper_slab": [
                {
                    "display_name": "Lightly Weathered Cut Copper Slab",
                    "field": "sI",
                    "max_stack_size": 64,
                    "numeric_id": 1022,
                    "text_id": "lightly_weathered_cut_copper_slab"
                },
                null
            ],
            "lightly_weathered_cut_copper_stairs": [
                {
                    "display_name": "Lightly Weathered Cut Copper Stairs",
                    "field": "sE",
                    "max_stack_size": 64,
                    "numeric_id": 1018,
                    "text_id": "lightly_weathered_cut_copper_stairs"
                },
                null
            ],
            "lightning_rod": [
                {
                    "display_name": "Lightning Rod",
                    "field": "sX",
                    "max_stack_size": 64,
                    "numeric_id": 1037,
                    "text_id": "lightning_rod"
                },
                null
            ],
            "lime_candle": [
                {
                    "display_name": "Lime Candle",
                    "field": "sc",
                    "max_stack_size": 64,
                    "numeric_id": 990,
                    "text_id": "lime_candle"
                },
                null
            ],
            "magenta_candle": [
                {
                    "display_name": "Magenta Candle",
                    "field": "rZ",
                    "max_stack_size": 64,
                    "numeric_id": 987,
                    "text_id": "magenta_candle"
                },
                null
            ],
            "medium_amethyst_bud": [
                {
                    "display_name": "Medium Amethyst Bud",
                    "field": "sr",
                    "max_stack_size": 64,
                    "numeric_id": 1005,
                    "text_id": "medium_amethyst_bud"
                },
                null
            ],
            "orange_candle": [
                {
                    "display_name": "Orange Candle",
                    "field": "rY",
                    "max_stack_size": 64,
                    "numeric_id": 986,
                    "text_id": "orange_candle"
                },
                null
            ],
            "pink_candle": [
                {
                    "display_name": "Pink Candle",
                    "field": "sd",
                    "max_stack_size": 64,
                    "numeric_id": 991,
                    "text_id": "pink_candle"
                },
                null
            ],
            "pointed_dripstone": [
                {
                    "display_name": "Pointed Dripstone",
                    "field": "sZ",
                    "max_stack_size": 64,
                    "numeric_id": 1039,
                    "text_id": "pointed_dripstone"
                },
                null
            ],
            "powder_snow_bucket": [
                {
                    "class": "boq",
                    "display_name": "Powder Snow Bucket",
                    "field": "sY",
                    "max_stack_size": 1,
                    "numeric_id": 1038,
                    "text_id": "powder_snow_bucket"
                },
                null
            ],
            "purple_candle": [
                {
                    "display_name": "Purple Candle",
                    "field": "sh",
                    "max_stack_size": 64,
                    "numeric_id": 995,
                    "text_id": "purple_candle"
                },
                null
            ],
            "red_candle": [
                {
                    "display_name": "Red Candle",
                    "field": "sl",
                    "max_stack_size": 64,
                    "numeric_id": 999,
                    "text_id": "red_candle"
                },
                null
            ],
            "sculk_sensor": [
                {
                    "display_name": "Sculk Sensor",
                    "field": "tb",
                    "max_stack_size": 64,
                    "numeric_id": 1041,
                    "text_id": "sculk_sensor"
                },
                null
            ],
            "semi_weathered_copper_block": [
                {
                    "display_name": "Semi-Weathered Copper Block",
                    "field": "sx",
                    "max_stack_size": 64,
                    "numeric_id": 1011,
                    "text_id": "semi_weathered_copper_block"
                },
                null
            ],
            "semi_weathered_cut_copper": [
                {
                    "display_name": "Semi-Weathered Cut Copper",
                    "field": "sB",
                    "max_stack_size": 64,
                    "numeric_id": 1015,
                    "text_id": "semi_weathered_cut_copper"
                },
                null
            ],
            "semi_weathered_cut_copper_slab": [
                {
                    "display_name": "Semi Weathered Cut Copper Slab",
                    "field": "sJ",
                    "max_stack_size": 64,
                    "numeric_id": 1023,
                    "text_id": "semi_weathered_cut_copper_slab"
                },
                null
            ],
            "semi_weathered_cut_copper_stairs": [
                {
                    "display_name": "Semi-Weathered Cut Copper Stairs",
                    "field": "sF",
                    "max_stack_size": 64,
                    "numeric_id": 1019,
                    "text_id": "semi_weathered_cut_copper_stairs"
                },
                null
            ],
            "small_amethyst_bud": [
                {
                    "display_name": "Small Amethyst Bud",
                    "field": "sq",
                    "max_stack_size": 64,
                    "numeric_id": 1004,
                    "text_id": "small_amethyst_bud"
                },
                null
            ],
            "spyglass": [
                {
                    "class": "bou",
                    "display_name": "Spyglass",
                    "field": "su",
                    "max_stack_size": 1,
                    "numeric_id": 1008,
                    "text_id": "spyglass"
                },
                null
            ],
            "tinted_glass": [
                {
                    "display_name": "Tinted Glass",
                    "field": "aD",
                    "max_stack_size": 64,
                    "numeric_id": 81,
                    "text_id": "tinted_glass"
                },
                null
            ],
            "tuff": [
                {
                    "display_name": "Tuff",
                    "field": "j",
                    "max_stack_size": 64,
                    "numeric_id": 9,
                    "text_id": "tuff"
                },
                null
            ],
            "waxed_copper": [
                {
                    "display_name": "Waxed Copper",
                    "field": "sL",
                    "max_stack_size": 64,
                    "numeric_id": 1025,
                    "text_id": "waxed_copper"
                },
                null
            ],
            "waxed_cut_copper": [
                {
                    "display_name": "Waxed Cut Copper",
                    "field": "sO",
                    "max_stack_size": 64,
                    "numeric_id": 1028,
                    "text_id": "waxed_cut_copper"
                },
                null
            ],
            "waxed_cut_copper_slab": [
                {
                    "display_name": "Waxed Cut Copper Slab",
                    "field": "sU",
                    "max_stack_size": 64,
                    "numeric_id": 1034,
                    "text_id": "waxed_cut_copper_slab"
                },
                null
            ],
            "waxed_cut_copper_stairs": [
                {
                    "display_name": "Waxed Cut Copper Stairs",
                    "field": "sR",
                    "max_stack_size": 64,
                    "numeric_id": 1031,
                    "text_id": "waxed_cut_copper_stairs"
                },
                null
            ],
            "waxed_lightly_weathered_copper": [
                {
                    "display_name": "Waxed Lightly Weathered Copper",
                    "field": "sM",
                    "max_stack_size": 64,
                    "numeric_id": 1026,
                    "text_id": "waxed_lightly_weathered_copper"
                },
                null
            ],
            "waxed_lightly_weathered_cut_copper": [
                {
                    "display_name": "Waxed Lightly Weathered Cut Copper",
                    "field": "sP",
                    "max_stack_size": 64,
                    "numeric_id": 1029,
                    "text_id": "waxed_lightly_weathered_cut_copper"
                },
                null
            ],
            "waxed_lightly_weathered_cut_copper_slab": [
                {
                    "display_name": "Waxed Lightly Weathered Cut Copper Slab",
                    "field": "sV",
                    "max_stack_size": 64,
                    "numeric_id": 1035,
                    "text_id": "waxed_lightly_weathered_cut_copper_slab"
                },
                null
            ],
            "waxed_lightly_weathered_cut_copper_stairs": [
                {
                    "display_name": "Waxed Lightly Weathered Cut Copper Stairs",
                    "field": "sS",
                    "max_stack_size": 64,
                    "numeric_id": 1032,
                    "text_id": "waxed_lightly_weathered_cut_copper_stairs"
                },
                null
            ],
            "waxed_semi_weathered_copper": [
                {
                    "display_name": "Waxed Semi-Weathered Copper",
                    "field": "sN",
                    "max_stack_size": 64,
                    "numeric_id": 1027,
                    "text_id": "waxed_semi_weathered_copper"
                },
                null
            ],
            "waxed_semi_weathered_cut_copper": [
                {
                    "display_name": "Waxed Semi-Weathered Cut Copper",
                    "field": "sQ",
                    "max_stack_size": 64,
                    "numeric_id": 1030,
                    "text_id": "waxed_semi_weathered_cut_copper"
                },
                null
            ],
            "waxed_semi_weathered_cut_copper_slab": [
                {
                    "display_name": "Waxed Semi Weathered Cut Copper Slab",
                    "field": "sW",
                    "max_stack_size": 64,
                    "numeric_id": 1036,
                    "text_id": "waxed_semi_weathered_cut_copper_slab"
                },
                null
            ],
            "waxed_semi_weathered_cut_copper_stairs": [
                {
                    "display_name": "Waxed Semi-Weathered Cut Copper Stairs",
                    "field": "sT",
                    "max_stack_size": 64,
                    "numeric_id": 1033,
                    "text_id": "waxed_semi_weathered_cut_copper_stairs"
                },
                null
            ],
            "weathered_copper_block": [
                {
                    "display_name": "Weathered Copper BlocK",
                    "field": "sy",
                    "max_stack_size": 64,
                    "numeric_id": 1012,
                    "text_id": "weathered_copper_block"
                },
                null
            ],
            "weathered_cut_copper": [
                {
                    "display_name": "Weathered Cut Copper",
                    "field": "sC",
                    "max_stack_size": 64,
                    "numeric_id": 1016,
                    "text_id": "weathered_cut_copper"
                },
                null
            ],
            "weathered_cut_copper_slab": [
                {
                    "display_name": "Weathered Cut Copper Slab",
                    "field": "sK",
                    "max_stack_size": 64,
                    "numeric_id": 1024,
                    "text_id": "weathered_cut_copper_slab"
                },
                null
            ],
            "weathered_cut_copper_stairs": [
                {
                    "display_name": "Weathered Cut Copper Stairs",
                    "field": "sG",
                    "max_stack_size": 64,
                    "numeric_id": 1020,
                    "text_id": "weathered_cut_copper_stairs"
                },
                null
            ],
            "white_candle": [
                {
                    "display_name": "White Candle",
                    "field": "rX",
                    "max_stack_size": 64,
                    "numeric_id": 985,
                    "text_id": "white_candle"
                },
                null
            ],
            "yellow_candle": [
                {
                    "display_name": "Yellow Candle",
                    "field": "sb",
                    "max_stack_size": 64,
                    "numeric_id": 989,
                    "text_id": "yellow_candle"
                },
                null
            ]
        }
    },
    "language": {
        "advMode": {
            "mode": [
                "Mode",
                null
            ],
            "trackOutput": [
                "Track output",
                null
            ],
            "triggering": [
                "Triggering",
                null
            ],
            "type": [
                "Type",
                null
            ]
        },
        "argument": {
            "angle.invalid": [
                "Invalid angle",
                null
            ]
        },
        "biome": {
            "minecraft.dripstone_caves": [
                "Dripstone caves",
                null
            ]
        },
        "block": {
            "minecraft.amethyst_block": [
                "Block of Amethyst",
                null
            ],
            "minecraft.amethyst_cluster": [
                "Amethyst Cluster",
                null
            ],
            "minecraft.banner.base.black": [
                "Fully Black Field",
                null
            ],
            "minecraft.banner.base.blue": [
                "Fully Blue Field",
                null
            ],
            "minecraft.banner.base.brown": [
                "Fully Brown Field",
                null
            ],
            "minecraft.banner.base.cyan": [
                "Fully Cyan Field",
                null
            ],
            "minecraft.banner.base.gray": [
                "Fully Gray Field",
                null
            ],
            "minecraft.banner.base.green": [
                "Fully Green Field",
                null
            ],
            "minecraft.banner.base.light_blue": [
                "Fully Light Blue Field",
                null
            ],
            "minecraft.banner.base.light_gray": [
                "Fully Light Gray Field",
                null
            ],
            "minecraft.banner.base.lime": [
                "Fully Lime Field",
                null
            ],
            "minecraft.banner.base.magenta": [
                "Fully Magenta Field",
                null
            ],
            "minecraft.banner.base.orange": [
                "Fully Orange Field",
                null
            ],
            "minecraft.banner.base.pink": [
                "Fully Pink Field",
                null
            ],
            "minecraft.banner.base.purple": [
                "Fully Purple Field",
                null
            ],
            "minecraft.banner.base.red": [
                "Fully Red Field",
                null
            ],
            "minecraft.banner.base.white": [
                "Fully White Field",
                null
            ],
            "minecraft.banner.base.yellow": [
                "Fully Yellow Field",
                null
            ],
            "minecraft.black_candle": [
                "Black Candle",
                null
            ],
            "minecraft.black_candle_cake": [
                "Black Candle Cake",
                null
            ],
            "minecraft.blue_candle": [
                "Blue Candle",
                null
            ],
            "minecraft.blue_candle_cake": [
                "Blue Candle Cake",
                null
            ],
            "minecraft.brown_candle": [
                "Brown Candle",
                null
            ],
            "minecraft.brown_candle_cake": [
                "Brown Candle Cake",
                null
            ],
            "minecraft.budding_amethyst": [
                "Budding Amethyst",
                null
            ],
            "minecraft.calcite": [
                "Calcite",
                null
            ],
            "minecraft.candle": [
                "Candle",
                null
            ],
            "minecraft.candle_cake": [
                "Candle Cake",
                null
            ],
            "minecraft.copper_block": [
                "Copper Block",
                null
            ],
            "minecraft.copper_ore": [
                "Copper Ore",
                null
            ],
            "minecraft.cut_copper": [
                "Cut Copper",
                null
            ],
            "minecraft.cut_copper_slab": [
                "Cut Copper Slab",
                null
            ],
            "minecraft.cut_copper_stairs": [
                "Cut Copper Stairs",
                null
            ],
            "minecraft.cyan_candle": [
                "Cyan Candle",
                null
            ],
            "minecraft.cyan_candle_cake": [
                "Cyan Candle Cake",
                null
            ],
            "minecraft.dirt_path": [
                "Dirt Path",
                null
            ],
            "minecraft.dripstone_block": [
                "Dripstone Block",
                null
            ],
            "minecraft.grass_path": [
                null,
                "Grass Path"
            ],
            "minecraft.gray_candle": [
                "Gray Candle",
                null
            ],
            "minecraft.gray_candle_cake": [
                "Gray Candle Cake",
                null
            ],
            "minecraft.green_candle": [
                "Green Candle",
                null
            ],
            "minecraft.green_candle_cake": [
                "Green Candle Cake",
                null
            ],
            "minecraft.lapis_block": [
                "Block of Lapis Lazuli",
                "Lapis Lazuli Block"
            ],
            "minecraft.large_amethyst_bud": [
                "Large Amethyst Bud",
                null
            ],
            "minecraft.lava_cauldron": [
                "Lava Cauldron",
                null
            ],
            "minecraft.light_blue_candle": [
                "Light Blue Candle",
                null
            ],
            "minecraft.light_blue_candle_cake": [
                "Light Blue Candle Cake",
                null
            ],
            "minecraft.light_gray_candle": [
                "Light Gray Candle",
                null
            ],
            "minecraft.light_gray_candle_cake": [
                "Light Gray Candle Cake",
                null
            ],
            "minecraft.lightly_weathered_copper_block": [
                "Lightly Weathered Copper Block",
                null
            ],
            "minecraft.lightly_weathered_cut_copper": [
                "Lightly Weathered Cut Copper",
                null
            ],
            "minecraft.lightly_weathered_cut_copper_slab": [
                "Lightly Weathered Cut Copper Slab",
                null
            ],
            "minecraft.lightly_weathered_cut_copper_stairs": [
                "Lightly Weathered Cut Copper Stairs",
                null
            ],
            "minecraft.lightning_rod": [
                "Lightning Rod",
                null
            ],
            "minecraft.lime_candle": [
                "Lime Candle",
                null
            ],
            "minecraft.lime_candle_cake": [
                "Lime Candle Cake",
                null
            ],
            "minecraft.magenta_candle": [
                "Magenta Candle",
                null
            ],
            "minecraft.magenta_candle_cake": [
                "Magenta Candle Cake",
                null
            ],
            "minecraft.medium_amethyst_bud": [
                "Medium Amethyst Bud",
                null
            ],
            "minecraft.orange_candle": [
                "Orange Candle",
                null
            ],
            "minecraft.orange_candle_cake": [
                "Orange Candle Cake",
                null
            ],
            "minecraft.pink_candle": [
                "Pink Candle",
                null
            ],
            "minecraft.pink_candle_cake": [
                "Pink Candle Cake",
                null
            ],
            "minecraft.pointed_dripstone": [
                "Pointed Dripstone",
                null
            ],
            "minecraft.powder_snow": [
                "Powder Snow",
                null
            ],
            "minecraft.powder_snow_cauldron": [
                "Powder Snow Cauldron",
                null
            ],
            "minecraft.purple_candle": [
                "Purple Candle",
                null
            ],
            "minecraft.purple_candle_cake": [
                "Purple Candle Cake",
                null
            ],
            "minecraft.red_candle": [
                "Red Candle",
                null
            ],
            "minecraft.red_candle_cake": [
                "Red Candle Cake",
                null
            ],
            "minecraft.sculk_sensor": [
                "Sculk Sensor",
                null
            ],
            "minecraft.semi_weathered_copper_block": [
                "Semi-Weathered Copper Block",
                null
            ],
            "minecraft.semi_weathered_cut_copper": [
                "Semi-Weathered Cut Copper",
                null
            ],
            "minecraft.semi_weathered_cut_copper_slab": [
                "Semi Weathered Cut Copper Slab",
                null
            ],
            "minecraft.semi_weathered_cut_copper_stairs": [
                "Semi-Weathered Cut Copper Stairs",
                null
            ],
            "minecraft.small_amethyst_bud": [
                "Small Amethyst Bud",
                null
            ],
            "minecraft.tinted_glass": [
                "Tinted Glass",
                null
            ],
            "minecraft.tuff": [
                "Tuff",
                null
            ],
            "minecraft.water_cauldron": [
                "Water Cauldron",
                null
            ],
            "minecraft.waxed_copper": [
                "Waxed Copper",
                null
            ],
            "minecraft.waxed_cut_copper": [
                "Waxed Cut Copper",
                null
            ],
            "minecraft.waxed_cut_copper_slab": [
                "Waxed Cut Copper Slab",
                null
            ],
            "minecraft.waxed_cut_copper_stairs": [
                "Waxed Cut Copper Stairs",
                null
            ],
            "minecraft.waxed_lightly_weathered_copper": [
                "Waxed Lightly Weathered Copper",
                null
            ],
            "minecraft.waxed_lightly_weathered_copper_block": [
                "Waxed Lightly Weathered Copper Block",
                null
            ],
            "minecraft.waxed_lightly_weathered_cut_copper": [
                "Waxed Lightly Weathered Cut Copper",
                null
            ],
            "minecraft.waxed_lightly_weathered_cut_copper_slab": [
                "Waxed Lightly Weathered Cut Copper Slab",
                null
            ],
            "minecraft.waxed_lightly_weathered_cut_copper_stairs": [
                "Waxed Lightly Weathered Cut Copper Stairs",
                null
            ],
            "minecraft.waxed_semi_weathered_copper": [
                "Waxed Semi-Weathered Copper",
                null
            ],
            "minecraft.waxed_semi_weathered_copper_block": [
                "Waxed Semi-Weathered Copper Block",
                null
            ],
            "minecraft.waxed_semi_weathered_cut_copper": [
                "Waxed Semi-Weathered Cut Copper",
                null
            ],
            "minecraft.waxed_semi_weathered_cut_copper_slab": [
                "Waxed Semi Weathered Cut Copper Slab",
                null
            ],
            "minecraft.waxed_semi_weathered_cut_copper_stairs": [
                "Waxed Semi-Weathered Cut Copper Stairs",
                null
            ],
            "minecraft.weathered_copper_block": [
                "Weathered Copper BlocK",
                null
            ],
            "minecraft.weathered_cut_copper": [
                "Weathered Cut Copper",
                null
            ],
            "minecraft.weathered_cut_copper_slab": [
                "Weathered Cut Copper Slab",
                null
            ],
            "minecraft.weathered_cut_copper_stairs": [
                "Weathered Cut Copper Stairs",
                null
            ],
            "minecraft.white_candle": [
                "White Candle",
                null
            ],
            "minecraft.white_candle_cake": [
                "White Candle Cake",
                null
            ],
            "minecraft.yellow_candle": [
                "Yellow Candle",
                null
            ],
            "minecraft.yellow_candle_cake": [
                "Yellow Candle Cake",
                null
            ]
        },
        "commands": {
            "item.block.set.success": [
                "Replaced a slot at %s, %s, %s with %s",
                null
            ],
            "item.entity.set.success.multiple": [
                "Replaced a slot on %s entities with %s",
                null
            ],
            "item.entity.set.success.single": [
                "Replaced a slot on %s with %s",
                null
            ],
            "item.source.no_such_slot": [
                "The source does not have slot %s",
                null
            ],
            "item.source.not_a_container": [
                "Source position %s, %s, %s is not a container",
                null
            ],
            "item.target.no_changed.known_item": [
                "No targets accepted item %s into slot %s",
                null
            ],
            "item.target.no_changes": [
                "No targets accepted item into slot %s",
                null
            ],
            "item.target.no_such_slot": [
                "The target does not have slot %s",
                null
            ],
            "item.target.not_a_container": [
                "Target position %s, %s, %s is not a container",
                null
            ],
            "replaceitem.block.failed": [
                null,
                "The target block is not a container"
            ],
            "replaceitem.block.success": [
                null,
                "Replaced a slot at %s, %s, %s with %s"
            ],
            "replaceitem.entity.failed": [
                null,
                "Could not put %s in slot %s"
            ],
            "replaceitem.entity.success.multiple": [
                null,
                "Replaced a slot on %s entities with %s"
            ],
            "replaceitem.entity.success.single": [
                null,
                "Replaced a slot on %s with %s"
            ],
            "replaceitem.slot.inapplicable": [
                null,
                "The target does not have slot %s"
            ]
        },
        "dataPack": {
            "vanilla.description": [
                "The default data for Minecraft",
                null
            ]
        },
        "death": {
            "attack.fallingStalactite": [
                "%1$s was skewered by a falling stalactite",
                null
            ],
            "attack.fallingStalactite.player": [
                "%1$s was skewered by a falling stalactite whilst fighting %2$s",
                null
            ],
            "attack.freeze": [
                "%1$s froze to death",
                null
            ],
            "attack.freeze.player": [
                "%1$s was frozen to death by %2$s",
                null
            ]
        },
        "entity": {
            "minecraft.axolotl": [
                "Axolotl",
                null
            ]
        },
        "gamerule": {
            "freezeDamage": [
                "Deal freeze damage",
                null
            ],
            "playersSleepingPercentage": [
                "Sleep percentage",
                null
            ],
            "playersSleepingPercentage.description": [
                "The percentage of players who must be sleeping to skip the night.",
                null
            ]
        },
        "item": {
            "minecraft.amethyst_shard": [
                "Amethyst Shard",
                null
            ],
            "minecraft.axolotl_bucket": [
                "Bucket of Axolotl",
                null
            ],
            "minecraft.axolotl_spawn_egg": [
                "Axolotl Spawn Egg",
                null
            ],
            "minecraft.bundle": [
                "Bundle",
                null
            ],
            "minecraft.bundle.fullness": [
                "%s/%s",
                null
            ],
            "minecraft.copper_ingot": [
                "Copper Ingot",
                null
            ],
            "minecraft.powder_snow_bucket": [
                "Powder Snow Bucket",
                null
            ],
            "minecraft.spyglass": [
                "Spyglass",
                null
            ]
        },
        "item_modifier": [
            {
                "unknown": "Unknown item modifier: %s"
            },
            null
        ],
        "mirror": [
            {
                "front_back": "\u2191 \u2193",
                "left_right": "\u2190 \u2192",
                "none": "|"
            },
            null
        ],
        "multiplayer": {
            "requiredTexturePrompt.disconnect": [
                "Server requires a custom resource pack",
                null
            ],
            "requiredTexturePrompt.line1": [
                "This server requires the use of a custom resource pack.",
                null
            ],
            "requiredTexturePrompt.line2": [
                "Rejecting a custom resource pack will disconnect you from this server.",
                null
            ]
        },
        "options": {
            "fovEffectScale.off": [
                null,
                "Off"
            ],
            "screenEffectScale.off": [
                null,
                "Off"
            ],
            "vbo": [
                null,
                "Use VBOs"
            ],
            "vsync": [
                "VSync",
                "Use VSync"
            ]
        },
        "resourcePack": {
            "vanilla.description": [
                "The default resources for Minecraft",
                null
            ]
        },
        "selectWorld": {
            "mapType": [
                "World Type",
                "World Type:"
            ]
        },
        "sleep": [
            {
                "not_possible": "No amount of rest can pass this night",
                "players_sleeping": "%s/%s players sleeping",
                "skipping_night": "Sleeping through this night"
            },
            null
        ],
        "subtitles": {
            "block.cake.add_candle": [
                "Cake squishes",
                null
            ],
            "block.candle.crackle": [
                "Candle crackles",
                null
            ],
            "block.pointed_dripstone.drip_lava": [
                "Lava drips",
                null
            ],
            "block.pointed_dripstone.drip_lava_into_cauldron": [
                "Lava drips into cauldron",
                null
            ],
            "block.pointed_dripstone.drip_water": [
                "Water drips",
                null
            ],
            "block.pointed_dripstone.drip_water_into_cauldron": [
                "Water drips into cauldron",
                null
            ],
            "block.pointed_dripstone.land": [
                "Stalactite crashes down",
                null
            ],
            "block.sculk_sensor.clicking": [
                "Sculk Sensor starts clicking",
                null
            ],
            "block.sculk_sensor.clicking_stop": [
                "Sculk Sensor stops clicking",
                null
            ],
            "entity.axolotl.attack": [
                "Axolotl attacks",
                null
            ],
            "entity.axolotl.death": [
                "Axolotl dies",
                null
            ],
            "entity.axolotl.hurt": [
                "Axolotl hurts",
                null
            ],
            "entity.axolotl.idle_air": [
                "Axolotl chirps",
                null
            ],
            "entity.axolotl.idle_water": [
                "Axolotl chirps",
                null
            ],
            "entity.axolotl.splash": [
                "Axolotl splashes",
                null
            ],
            "entity.axolotl.swim": [
                "Axolotl swims",
                null
            ],
            "entity.player.freeze_hurt": [
                "Player freezes",
                null
            ],
            "item.bucket.fill_axolotl": [
                "Axolotl scooped",
                null
            ],
            "item.spyglass.stop_using": [
                "Spyglass retracts",
                null
            ],
            "item.spyglass.use": [
                "Spyglass expands",
                null
            ]
        }
    },
    "packets": {
        "packet": {
            "PLAY_CLIENTBOUND_05": [
                {
                    "class": "pg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 5,
                    "instructions": [
                        {
                            "field": "a.b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "gn.am.b(a.c.a())",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "args": "packetbuffer, this.a.c",
                            "field": "a.c.a()",
                            "method": "a(Lnt;Lcld;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "cle",
                            "type": "interface"
                        },
                        {
                            "field": "a.d",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "os.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 5,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_06": [
                {
                    "class": "ph.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 6,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ot.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 6,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.object2IntEntrySet().iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((it.unimi.dsi.fastutil.objects.Object2IntMap$Entry)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((adx)var3.getKey())",
                                    "var": "var4"
                                },
                                {
                                    "field": "gm.ag.a(var4.a())",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "a(var4)",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "var3.getIntValue()",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_07": [
                {
                    "class": "pi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.object2IntEntrySet().iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((it.unimi.dsi.fastutil.objects.Object2IntMap$Entry)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((aek)var3.getKey())",
                                    "var": "var4"
                                },
                                {
                                    "field": "gn.an.a(var4.a())",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "a(var4)",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "var3.getIntValue()",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ou.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "buo.i(d)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_08": [
                {
                    "class": "pj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 8,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "bwm.i(d)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ov.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 8,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_09": [
                {
                    "class": "pk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 9,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ow.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 9,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "(byte)b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0A": [
                {
                    "class": "pl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 10,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "(byte)b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ox.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 10,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "gm.Q.a(d)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0B": [
                {
                    "class": "pm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 11,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "gn.W.a(d)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "oy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 11,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "buo.i(b)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0C": [
                {
                    "class": "pn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 12,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "bwm.i(b)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "oz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 12,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "oz$1.a[this.b.ordinal()]",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "1"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "k()",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "2"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "3"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "4"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "5"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "6"
                                },
                                {
                                    "field": "k()",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "switch"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0D": [
                {
                    "class": "po.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "po$1.a[this.b.ordinal()]",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "1"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "k()",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "2"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "3"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "4"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "5"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "6"
                                },
                                {
                                    "field": "k()",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "switch"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "a.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0E": [
                {
                    "class": "pp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "a.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "uuid"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0F": [
                {
                    "class": "pq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "uuid"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getStart()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getLength()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getList().size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.getList().iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.brigadier.suggestion.Suggestion)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.getText()",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "(var3.getTooltip() != null) ? 1 : 0",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "var3.getTooltip() != null",
                                    "instructions": [
                                        {
                                            "field": "ns.a(var3.getTooltip())",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_10": [
                {
                    "class": "pr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getStart()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getLength()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getList().size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.getList().iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.brigadier.suggestion.Suggestion)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.getText()",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "(var3.getTooltip() != null) ? 1 : 0",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "var3.getTooltip() != null",
                                    "instructions": [
                                        {
                                            "field": "og.a(var3.getTooltip())",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 16,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "pd.a(this.a)",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "pd.a(var2)",
                            "var": "var3"
                        },
                        {
                            "field": "var3.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "var3",
                            "var": "var4"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var4.length",
                            "var": "var5"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var6"
                        },
                        {
                            "condition": "var6 < var5",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var4[var6]",
                                    "var": "var7"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var3"
                                },
                                {
                                    "condition": "var7.getRedirect() != null",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "((byte)(var3 | 0x8))",
                                            "var": "var3"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "var7.getCommand() != null",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "((byte)(var3 | 4))",
                                            "var": "var3"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "var7 instanceof com.mojang.brigadier.tree.RootCommandNode",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "((byte)(var3 | 0))",
                                            "var": "var3"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "var7 instanceof com.mojang.brigadier.tree.ArgumentCommandNode",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "((byte)(var3 | 2))",
                                                    "var": "var3"
                                                },
                                                {
                                                    "condition": "((com.mojang.brigadier.tree.ArgumentCommandNode)var7).getCustomSuggestions() != null",
                                                    "instructions": [
                                                        {
                                                            "operation": "store",
                                                            "type": "int",
                                                            "value": "((byte)(var3 | 0x10))",
                                                            "var": "var3"
                                                        }
                                                    ],
                                                    "operation": "if"
                                                },
                                                {
                                                    "instructions": [
                                                        {
                                                            "condition": "var7 instanceof com.mojang.brigadier.tree.LiteralCommandNode",
                                                            "instructions": [
                                                                {
                                                                    "operation": "store",
                                                                    "type": "int",
                                                                    "value": "((byte)(var3 | 1))",
                                                                    "var": "var3"
                                                                }
                                                            ],
                                                            "operation": "if"
                                                        }
                                                    ],
                                                    "operation": "else"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var7.getChildren().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var7.getChildren().iterator()",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((com.mojang.brigadier.tree.CommandNode)var4.next())",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "((Integer)var2.get(var5)).intValue()",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "condition": "var7.getRedirect() != null",
                                    "instructions": [
                                        {
                                            "field": "((Integer)var2.get(var7.getRedirect())).intValue()",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "var7 instanceof com.mojang.brigadier.tree.ArgumentCommandNode",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((com.mojang.brigadier.tree.ArgumentCommandNode)var7)",
                                            "var": "var4"
                                        },
                                        {
                                            "field": "var4.getName()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "fk.b(var4.getType())",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "var2 == null",
                                            "instructions": [
                                                {
                                                    "field": "new vk(\"\")",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2.c",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "args": "var4.getType(), packetbuffer",
                                            "field": "var2.b",
                                            "method": "a(Lcom/mojang/brigadier/arguments/ArgumentType;Lnf;)V",
                                            "name": "a",
                                            "operation": "interfacecall",
                                            "target": "fj",
                                            "type": "interface"
                                        },
                                        {
                                            "condition": "var4.getCustomSuggestions() != null",
                                            "instructions": [
                                                {
                                                    "field": "fm.a(var4.getCustomSuggestions())",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "var7 instanceof com.mojang.brigadier.tree.LiteralCommandNode",
                                            "instructions": [
                                                {
                                                    "field": "((com.mojang.brigadier.tree.LiteralCommandNode)var7).getLiteral()",
                                                    "operation": "write",
                                                    "type": "string"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var6",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "var2.get(a).intValue()",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_11": [
                {
                    "class": "ps.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 17,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "ps.a(this.a)",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "ps.a(var2)",
                            "var": "var3"
                        },
                        {
                            "field": "var3.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "var3",
                            "var": "var4"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var4.length",
                            "var": "var5"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var6"
                        },
                        {
                            "condition": "var6 < var5",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var4[var6]",
                                    "var": "var7"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var3"
                                },
                                {
                                    "condition": "var7.getRedirect() != null",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "((byte)(var3 | 0x8))",
                                            "var": "var3"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "var7.getCommand() != null",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "((byte)(var3 | 4))",
                                            "var": "var3"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "var7 instanceof com.mojang.brigadier.tree.RootCommandNode",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "((byte)(var3 | 0))",
                                            "var": "var3"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "var7 instanceof com.mojang.brigadier.tree.ArgumentCommandNode",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "((byte)(var3 | 2))",
                                                    "var": "var3"
                                                },
                                                {
                                                    "condition": "((com.mojang.brigadier.tree.ArgumentCommandNode)var7).getCustomSuggestions() != null",
                                                    "instructions": [
                                                        {
                                                            "operation": "store",
                                                            "type": "int",
                                                            "value": "((byte)(var3 | 0x10))",
                                                            "var": "var3"
                                                        }
                                                    ],
                                                    "operation": "if"
                                                },
                                                {
                                                    "instructions": [
                                                        {
                                                            "condition": "var7 instanceof com.mojang.brigadier.tree.LiteralCommandNode",
                                                            "instructions": [
                                                                {
                                                                    "operation": "store",
                                                                    "type": "int",
                                                                    "value": "((byte)(var3 | 1))",
                                                                    "var": "var3"
                                                                }
                                                            ],
                                                            "operation": "if"
                                                        }
                                                    ],
                                                    "operation": "else"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var7.getChildren().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var7.getChildren().iterator()",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((com.mojang.brigadier.tree.CommandNode)var4.next())",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "((Integer)var2.get(var5)).intValue()",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "condition": "var7.getRedirect() != null",
                                    "instructions": [
                                        {
                                            "field": "((Integer)var2.get(var7.getRedirect())).intValue()",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "var7 instanceof com.mojang.brigadier.tree.ArgumentCommandNode",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((com.mojang.brigadier.tree.ArgumentCommandNode)var7)",
                                            "var": "var4"
                                        },
                                        {
                                            "field": "var4.getName()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "fk.b(var4.getType())",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "var2 == null",
                                            "instructions": [
                                                {
                                                    "field": "new vy(\"\")",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2.c",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "args": "var4.getType(), packetbuffer",
                                            "field": "var2.b",
                                            "method": "a(Lcom/mojang/brigadier/arguments/ArgumentType;Lnt;)V",
                                            "name": "a",
                                            "operation": "interfacecall",
                                            "target": "fj",
                                            "type": "interface"
                                        },
                                        {
                                            "condition": "var4.getCustomSuggestions() != null",
                                            "instructions": [
                                                {
                                                    "field": "fm.a(var4.getCustomSuggestions())",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "var7 instanceof com.mojang.brigadier.tree.LiteralCommandNode",
                                            "instructions": [
                                                {
                                                    "field": "((com.mojang.brigadier.tree.LiteralCommandNode)var7).getLiteral()",
                                                    "operation": "write",
                                                    "type": "string"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var6",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "var2.get(a).intValue()",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pe.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 17,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_12": [
                {
                    "class": "pt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_13": [
                {
                    "class": "pu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((bmb)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_14": [
                {
                    "class": "pv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((bnq)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ph.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_15": [
                {
                    "class": "pw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_16": [
                {
                    "class": "px.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "blx.a(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_17": [
                {
                    "class": "py.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "bnm.a(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "r",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "s.copy()",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_18": [
                {
                    "class": "pz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "t",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "u.copy()",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_19": [
                {
                    "class": "qa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1A": [
                {
                    "class": "qb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1B": [
                {
                    "class": "qc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "po.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "(float)a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)b",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)c",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "afm.c(this.a)",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "afm.c(this.b)",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "afm.c(this.c)",
                            "var": "var4"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.e.iterator()",
                            "var": "var5"
                        },
                        {
                            "condition": "var5.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((fx)var5.next())",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var6.u() - var2)",
                                    "var": "var7"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var6.v() - var3)",
                                    "var": "var8"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var6.w() - var4)",
                                    "var": "var9"
                                },
                                {
                                    "field": "var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var8",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var9",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1C": [
                {
                    "class": "qd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 28,
                    "instructions": [
                        {
                            "field": "(float)a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)b",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)c",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "afz.c(this.a)",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "afz.c(this.b)",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "afz.c(this.c)",
                            "var": "var4"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.e.iterator()",
                            "var": "var5"
                        },
                        {
                            "condition": "var5.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((fx)var5.next())",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var6.u() - var2)",
                                    "var": "var7"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var6.v() - var3)",
                                    "var": "var8"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var6.w() - var4)",
                                    "var": "var9"
                                },
                                {
                                    "field": "var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var8",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var9",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 28,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1D": [
                {
                    "class": "qe.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "pq$a.a(m)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "n",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1E": [
                {
                    "class": "qf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "qf$a.a(m)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "n",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1F": [
                {
                    "class": "qg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ps.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_20": [
                {
                    "class": "qh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "varint[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "f.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "g.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.g.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((md)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_21": [
                {
                    "class": "qi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "varint[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "f.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "g.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.g.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((mn)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_22": [
                {
                    "class": "qj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "gm.V.a(j.b())",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "j",
                            "method": "a(Lnf;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "hf",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_23": [
                {
                    "class": "qk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "gn.ab.a(j.b())",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "j",
                            "method": "a(Lnt;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "hj",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.g.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((byte[])var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.h.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((byte[])var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_24": [
                {
                    "class": "ql.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "e.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "f.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "g.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.g.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((byte[])var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "h.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.h.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((byte[])var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "px.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "e.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.f.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((vj)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.a()",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "gn$b.a.encode(g)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "chd.n.encode(px::q)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "i.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "l",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "m",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "n",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "o",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_25": [
                {
                    "class": "qm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "btn.a(e)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.f.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((vx)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.a()",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "go$b.a.encode(g)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "cjz.r.encode(qm::q)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "i.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "l",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "m",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "n",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "o",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "py.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "e.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.e",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "field": "var5.b()",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "var5.c()",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var5.d()",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var5.e() & 0xf",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "condition": "var5.g() != null",
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var5.g()",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "h > 0",
                            "instructions": [
                                {
                                    "field": "i",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "g",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "j.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "j",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_26": [
                {
                    "class": "qn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "field": "1",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "d.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.d",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.b()",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "var5.c()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "var5.d()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "var5.e() & 0xf",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "condition": "var5.g() != null",
                                            "instructions": [
                                                {
                                                    "field": "1",
                                                    "operation": "write",
                                                    "type": "boolean"
                                                },
                                                {
                                                    "field": "var5.g()",
                                                    "operation": "write",
                                                    "type": "chatcomponent"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "boolean"
                                                }
                                            ],
                                            "operation": "else"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "boolean"
                                }
                            ],
                            "operation": "else"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e.c",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.d",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.e.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "e.e",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "(byte)(b.size() & 0xff)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < b.size()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((bqv)this.b.get(var2))",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.a()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "var3.d()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var3.c()",
                                    "var": "var4"
                                },
                                {
                                    "field": "(var4.a() == 0) ? 1 : 0",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "var4.a() == 0",
                                    "instructions": [
                                        {
                                            "field": "var4",
                                            "operation": "write",
                                            "type": "itemstack"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "var3.p()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "var3.g()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.i()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.o()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.m()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.n()",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "var3.k()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_27": [
                {
                    "class": "qo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "(byte)(b.size() & 0xff)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < b.size()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((bsn)this.b.get(var2))",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.a()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "var3.d()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var3.c()",
                                    "var": "var4"
                                },
                                {
                                    "field": "(var4.b() == 0) ? 1 : 0",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "var4.b() == 0",
                                    "instructions": [
                                        {
                                            "field": "var4",
                                            "operation": "write",
                                            "type": "itemstack"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "var3.p()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "var3.g()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.i()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.o()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.m()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.n()",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "var3.k()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qa$a.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_28": [
                {
                    "class": "qp$a.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qa$b.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_29": [
                {
                    "class": "qp$b.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qa$c.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2A": [
                {
                    "class": "qp$c.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2B": [
                {
                    "class": "qp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2C": [
                {
                    "class": "qq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2D": [
                {
                    "class": "qr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2E": [
                {
                    "class": "qs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qe.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2F": [
                {
                    "class": "qt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 47,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 47,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_30": [
                {
                    "class": "qu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 48,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 48,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "a",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "b",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "c",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 4))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "d",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 0x8))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_31": [
                {
                    "class": "qv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 49,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "a",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "b",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "c",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 4))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "d",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 0x8))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 49,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "a == qh$a.b",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "int"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "condition": "a == qh$a.c",
                                    "instructions": [
                                        {
                                            "field": "b",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "field": "c",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "field": "e",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_32": [
                {
                    "class": "qw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 50,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "a == qw$a.b",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "int"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "condition": "a == qw$a.c",
                                    "instructions": [
                                        {
                                            "field": "b",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "field": "c",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "field": "e",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 50,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((qi$b)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "qi$1.a[this.a.ordinal()]",
                                    "instructions": [
                                        {
                                            "operation": "case",
                                            "value": "1"
                                        },
                                        {
                                            "field": "var3.a().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "var3.a().getName()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "var3.a().getProperties().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var3.a().getProperties().values().iterator()",
                                            "var": "var4"
                                        },
                                        {
                                            "condition": "var4.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "((com.mojang.authlib.properties.Property)var4.next())",
                                                    "var": "var5"
                                                },
                                                {
                                                    "field": "var5.getName()",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "field": "var5.getValue()",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "condition": "var5.hasSignature()",
                                                    "instructions": [
                                                        {
                                                            "field": "1",
                                                            "operation": "write",
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "field": "var5.getSignature()",
                                                            "operation": "write",
                                                            "type": "string"
                                                        }
                                                    ],
                                                    "operation": "if"
                                                },
                                                {
                                                    "instructions": [
                                                        {
                                                            "field": "0",
                                                            "operation": "write",
                                                            "type": "boolean"
                                                        }
                                                    ],
                                                    "operation": "else"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "field": "var3.c().a()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "field": "var3.b()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "condition": "var3.d() == null",
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "boolean"
                                                },
                                                {
                                                    "operation": "break"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var3.d()",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "operation": "break"
                                        },
                                        {
                                            "operation": "case",
                                            "value": "2"
                                        },
                                        {
                                            "field": "var3.a().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "var3.c().a()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "break"
                                        },
                                        {
                                            "operation": "case",
                                            "value": "3"
                                        },
                                        {
                                            "field": "var3.a().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "var3.b()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "break"
                                        },
                                        {
                                            "operation": "case",
                                            "value": "4"
                                        },
                                        {
                                            "field": "var3.a().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "condition": "var3.d() == null",
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "boolean"
                                                },
                                                {
                                                    "operation": "break"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var3.d()",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "operation": "break"
                                        },
                                        {
                                            "operation": "case",
                                            "value": "5"
                                        },
                                        {
                                            "field": "var3.a().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        }
                                    ],
                                    "operation": "switch"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_33": [
                {
                    "class": "qx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 51,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((qx$b)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "qx$1.a[this.a.ordinal()]",
                                    "instructions": [
                                        {
                                            "operation": "case",
                                            "value": "1"
                                        },
                                        {
                                            "field": "var3.a().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "var3.a().getName()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "var3.a().getProperties().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var3.a().getProperties().values().iterator()",
                                            "var": "var4"
                                        },
                                        {
                                            "condition": "var4.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "((com.mojang.authlib.properties.Property)var4.next())",
                                                    "var": "var5"
                                                },
                                                {
                                                    "field": "var5.getName()",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "field": "var5.getValue()",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "condition": "var5.hasSignature()",
                                                    "instructions": [
                                                        {
                                                            "field": "1",
                                                            "operation": "write",
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "field": "var5.getSignature()",
                                                            "operation": "write",
                                                            "type": "string"
                                                        }
                                                    ],
                                                    "operation": "if"
                                                },
                                                {
                                                    "instructions": [
                                                        {
                                                            "field": "0",
                                                            "operation": "write",
                                                            "type": "boolean"
                                                        }
                                                    ],
                                                    "operation": "else"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "field": "var3.c().a()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "field": "var3.b()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "condition": "var3.d() == null",
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "boolean"
                                                },
                                                {
                                                    "operation": "break"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var3.d()",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "operation": "break"
                                        },
                                        {
                                            "operation": "case",
                                            "value": "2"
                                        },
                                        {
                                            "field": "var3.a().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "var3.c().a()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "break"
                                        },
                                        {
                                            "operation": "case",
                                            "value": "3"
                                        },
                                        {
                                            "field": "var3.a().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "var3.b()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "break"
                                        },
                                        {
                                            "operation": "case",
                                            "value": "4"
                                        },
                                        {
                                            "field": "var3.a().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "condition": "var3.d() == null",
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "boolean"
                                                },
                                                {
                                                    "operation": "break"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var3.d()",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "operation": "break"
                                        },
                                        {
                                            "operation": "case",
                                            "value": "5"
                                        },
                                        {
                                            "field": "var3.a().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        }
                                    ],
                                    "operation": "switch"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 51,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_34": [
                {
                    "class": "qy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 52,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 52,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "qk$a.a(f)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_35": [
                {
                    "class": "qz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 53,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "qz$a.a(f)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ql.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 53,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "bjk.values()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((adu$a)this.d.b.get(var5))",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6 == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "adu$a.a(var6)",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "adu$a.b(var6)",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((vk)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "condition": "a == ql$a.a",
                            "instructions": [
                                {
                                    "field": "c.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.c.iterator()",
                                    "var": "var2"
                                },
                                {
                                    "condition": "var2.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((vk)var2.next())",
                                            "var": "var3"
                                        },
                                        {
                                            "field": "var3",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_36": [
                {
                    "class": "ra.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 54,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "bkv.values()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((aeh$a)this.d.b.get(var5))",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6 == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "aeh$a.a(var6)",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "aeh$a.b(var6)",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((vy)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "condition": "a == ra$a.a",
                            "instructions": [
                                {
                                    "field": "c.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.c.iterator()",
                                    "var": "var2"
                                },
                                {
                                    "condition": "var2.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((vy)var2.next())",
                                            "var": "var3"
                                        },
                                        {
                                            "field": "var3",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 54,
                    "instructions": [
                        {
                            "field": "a.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "field": "var5",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_37": [
                {
                    "class": "rb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 55,
                    "instructions": [
                        {
                            "field": "a.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "field": "var5",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 55,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "aps.a(b)",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_38": [
                {
                    "class": "rc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 56,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "aqj.a(b)",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 56,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_39": [
                {
                    "class": "rd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 57,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 57,
                    "instructions": [
                        {
                            "field": "chd.n.encode(qp::j)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "e.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3A": [
                {
                    "class": "re.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 58,
                    "instructions": [
                        {
                            "field": "cjz.r.encode(re::j)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "btn.a(e)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 58,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3B": [
                {
                    "class": "rf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 59,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 59,
                    "instructions": [
                        {
                            "field": "a.s()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < b.length",
                            "instructions": [
                                {
                                    "field": "(long)((buo.i(c[var2]) << 0xc) | b[var2])",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3C": [
                {
                    "class": "rg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 60,
                    "instructions": [
                        {
                            "field": "a.s()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < b.length",
                            "instructions": [
                                {
                                    "field": "(long)((bwm.i(c[var2]) << 0xc) | b[var2])",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 60,
                    "instructions": [
                        {
                            "field": "(a != null) ? 1 : 0",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a != null",
                            "instructions": [
                                {
                                    "field": "a",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3D": [
                {
                    "class": "rh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 61,
                    "instructions": [
                        {
                            "field": "(a != null) ? 1 : 0",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a != null",
                            "instructions": [
                                {
                                    "field": "a",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 61,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "qt$1.a[this.a.ordinal()]",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "1"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "2"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "g",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "3"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "5"
                                },
                                {
                                    "field": "h",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "4"
                                },
                                {
                                    "field": "i",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "6"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "g",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "i",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "h",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "switch"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3E": [
                {
                    "class": "ri.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 62,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "ri$1.a[this.a.ordinal()]",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "1"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "2"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "g",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "3"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "5"
                                },
                                {
                                    "field": "h",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "4"
                                },
                                {
                                    "field": "i",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "6"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "g",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "i",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "h",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "switch"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 62,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3F": [
                {
                    "class": "rj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 63,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 63,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_40": [
                {
                    "class": "rk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 64,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 64,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_41": [
                {
                    "class": "rl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 65,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 65,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_42": [
                {
                    "class": "rm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 66,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 66,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_43": [
                {
                    "class": "rn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 67,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 67,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_44": [
                {
                    "class": "ro.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 68,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ra.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 68,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "metadata"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_45": [
                {
                    "class": "rp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 69,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "metadata"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 69,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_46": [
                {
                    "class": "rq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 70,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 70,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_47": [
                {
                    "class": "rr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 71,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 71,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.b.size()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var3"
                        },
                        {
                            "condition": "var3 < var2",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.datafixers.util.Pair)this.b.get(var3))",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((aqf)var4.getFirst())",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((var3 != (var2 - 1)) ? 1 : 0)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var5.ordinal()",
                                    "var": "var7"
                                },
                                {
                                    "field": "(var6) ? (var7 | -128) : var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "(bmb)var4.getSecond()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "amount": "1",
                                    "field": "var3",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_48": [
                {
                    "class": "rs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 72,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.b.size()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var3"
                        },
                        {
                            "condition": "var3 < var2",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.datafixers.util.Pair)this.b.get(var3))",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((aqw)var4.getFirst())",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((var3 != (var2 - 1)) ? 1 : 0)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var5.ordinal()",
                                    "var": "var7"
                                },
                                {
                                    "field": "(var6) ? (var7 | -128) : var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "(bnq)var4.getSecond()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "amount": "1",
                                    "field": "var3",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "re.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 72,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_49": [
                {
                    "class": "rt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 73,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 73,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4A": [
                {
                    "class": "ru.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 74,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 74,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "d",
                            "instructions": [
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4B": [
                {
                    "class": "rv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 75,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "d",
                            "instructions": [
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 75,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint[]"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4C": [
                {
                    "class": "rw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 76,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ri.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 76,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "i",
                            "instructions": [
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "j",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "g",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "i",
                            "instructions": [
                                {
                                    "field": "h.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.h.iterator()",
                                    "var": "var2"
                                },
                                {
                                    "condition": "var2.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((String)var2.next())",
                                            "var": "var3"
                                        },
                                        {
                                            "field": "var3",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4D": [
                {
                    "class": "rx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 77,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "i",
                            "instructions": [
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "j",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "g",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "i",
                            "instructions": [
                                {
                                    "field": "h.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.h.iterator()",
                                    "var": "var2"
                                },
                                {
                                    "condition": "var2.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((String)var2.next())",
                                            "var": "var3"
                                        },
                                        {
                                            "field": "var3",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 77,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "(b == null) ? \"\" : b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "condition": "d != wa$a.b",
                            "instructions": [
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4E": [
                {
                    "class": "ry.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 78,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "(b == null) ? \"\" : b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "condition": "d != wn$a.b",
                            "instructions": [
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 78,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4F": [
                {
                    "class": "rz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 79,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 79,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "a != rl$a.a",
                            "instructions": [
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "a == rl$a.d",
                            "instructions": [
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "int"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_50": [
                {
                    "class": "sa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 80,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "a != sa$a.a",
                            "instructions": [
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "a == sa$a.d",
                            "instructions": [
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "int"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 80,
                    "instructions": [
                        {
                            "field": "gm.N.a(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_51": [
                {
                    "class": "sb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 81,
                    "instructions": [
                        {
                            "field": "gn.T.a(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 81,
                    "instructions": [
                        {
                            "field": "gm.N.a(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_52": [
                {
                    "class": "sc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 82,
                    "instructions": [
                        {
                            "field": "gn.T.a(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ro.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 82,
                    "instructions": [
                        {
                            "condition": "b != null",
                            "instructions": [
                                {
                                    "condition": "a != null",
                                    "instructions": [
                                        {
                                            "field": "3",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "b",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "a",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "b",
                                            "operation": "write",
                                            "type": "enum"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "a != null",
                                            "instructions": [
                                                {
                                                    "field": "2",
                                                    "operation": "write",
                                                    "type": "byte"
                                                },
                                                {
                                                    "field": "a",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "byte"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_53": [
                {
                    "class": "sd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 83,
                    "instructions": [
                        {
                            "condition": "b != null",
                            "instructions": [
                                {
                                    "condition": "a != null",
                                    "instructions": [
                                        {
                                            "field": "3",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "b",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "a",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "b",
                                            "operation": "write",
                                            "type": "enum"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "a != null",
                                            "instructions": [
                                                {
                                                    "field": "2",
                                                    "operation": "write",
                                                    "type": "byte"
                                                },
                                                {
                                                    "field": "a",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "byte"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 83,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_54": [
                {
                    "class": "se.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 84,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 84,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_55": [
                {
                    "class": "sf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 85,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 85,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_56": [
                {
                    "class": "sg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 86,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 86,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_57": [
                {
                    "class": "sh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 87,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 87,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.entrySet().iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((Map$Entry)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((vk)var3.getKey())",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((y$a)var3.getValue())",
                                    "var": "var5"
                                },
                                {
                                    "field": "var4",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "condition": "var5.a == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var5.a",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "condition": "var5.c == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var5.c.a",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "var5.c.b",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "var5.c.c",
                                            "operation": "write",
                                            "type": "itemstack"
                                        },
                                        {
                                            "field": "var5.c.e",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "var5.c.d != null",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 1)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "var5.c.f",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 2)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "var5.c.h",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 4)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "condition": "var5.c.d != null",
                                            "instructions": [
                                                {
                                                    "field": "var5.c.d",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var5.c.i",
                                            "operation": "write",
                                            "type": "float"
                                        },
                                        {
                                            "field": "var5.c.j",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "field": "var5.e.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var5.e.entrySet().iterator()",
                                    "var": "var2"
                                },
                                {
                                    "condition": "var2.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((Map$Entry)var2.next())",
                                            "var": "var3"
                                        },
                                        {
                                            "field": "(String)var3.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "var5.f.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var5.f",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.length",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5",
                                            "var": "var6"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "var6.length",
                                            "var": "var7"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var8"
                                        },
                                        {
                                            "condition": "var8 < var7",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "var6[var8]",
                                                    "var": "var9"
                                                },
                                                {
                                                    "field": "var9",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "amount": "1",
                                                    "field": "var8",
                                                    "operation": "increment"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.c.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((vk)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.d.entrySet().iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((Map$Entry)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "(vk)var3.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "((aa)var3.getValue()).a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((aa)var3.getValue()).a.entrySet().iterator()",
                                    "var": "var2"
                                },
                                {
                                    "condition": "var2.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((Map$Entry)var2.next())",
                                            "var": "var3"
                                        },
                                        {
                                            "field": "(String)var3.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "(((ae)var3.getValue()).b != null) ? 1 : 0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "((ae)var3.getValue()).b != null",
                                            "instructions": [
                                                {
                                                    "field": "((ae)var3.getValue()).b.getTime()",
                                                    "operation": "write",
                                                    "type": "long"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_58": [
                {
                    "class": "si.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 88,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.entrySet().iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((Map$Entry)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((vy)var3.getKey())",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((y$a)var3.getValue())",
                                    "var": "var5"
                                },
                                {
                                    "field": "var4",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "condition": "var5.a == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var5.a",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "condition": "var5.c == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var5.c.a",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "var5.c.b",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "var5.c.c",
                                            "operation": "write",
                                            "type": "itemstack"
                                        },
                                        {
                                            "field": "var5.c.e",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "var5.c.d != null",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 1)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "var5.c.f",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 2)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "var5.c.h",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 4)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "condition": "var5.c.d != null",
                                            "instructions": [
                                                {
                                                    "field": "var5.c.d",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var5.c.i",
                                            "operation": "write",
                                            "type": "float"
                                        },
                                        {
                                            "field": "var5.c.j",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "field": "var5.e.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var5.e.entrySet().iterator()",
                                    "var": "var2"
                                },
                                {
                                    "condition": "var2.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((Map$Entry)var2.next())",
                                            "var": "var3"
                                        },
                                        {
                                            "field": "(String)var3.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "var5.f.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var5.f",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.length",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5",
                                            "var": "var6"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "var6.length",
                                            "var": "var7"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var8"
                                        },
                                        {
                                            "condition": "var8 < var7",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "var6[var8]",
                                                    "var": "var9"
                                                },
                                                {
                                                    "field": "var9",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "amount": "1",
                                                    "field": "var8",
                                                    "operation": "increment"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.c.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((vy)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.d.entrySet().iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((Map$Entry)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "(vy)var3.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "((aa)var3.getValue()).a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((aa)var3.getValue()).a.entrySet().iterator()",
                                    "var": "var2"
                                },
                                {
                                    "condition": "var2.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((Map$Entry)var2.next())",
                                            "var": "var3"
                                        },
                                        {
                                            "field": "(String)var3.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "(((ae)var3.getValue()).b != null) ? 1 : 0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "((ae)var3.getValue()).b != null",
                                            "instructions": [
                                                {
                                                    "field": "((ae)var3.getValue()).b.getTime()",
                                                    "operation": "write",
                                                    "type": "long"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ru.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 88,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((ru$a)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "gm.af.b(var3.a())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "var3.b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "var3.c().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var3.c().iterator()",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((arj)var4.next())",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.a()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "var5.d()",
                                            "operation": "write",
                                            "type": "double"
                                        },
                                        {
                                            "field": "var5.c().a()",
                                            "operation": "write",
                                            "type": "byte"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_59": [
                {
                    "class": "sj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 89,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((sj$a)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "gn.al.b(var3.a())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "var3.b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "var3.c().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var3.c().iterator()",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((asb)var4.next())",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.a()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "var5.d()",
                                            "operation": "write",
                                            "type": "double"
                                        },
                                        {
                                            "field": "var5.c().a()",
                                            "operation": "write",
                                            "type": "byte"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 89,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5A": [
                {
                    "class": "sk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 90,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 90,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((boq)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "gm.ae.b(var3.ag_())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "var3.f()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "args": "packetbuffer, var3",
                                    "field": "var3.ag_()",
                                    "method": "a(Lnf;Lboq;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "bos",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5B": [
                {
                    "class": "sl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 91,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((bqi)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "gn.ak.b(var3.ah_())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "var3.f()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "args": "packetbuffer, var3",
                                    "field": "var3.ah_()",
                                    "method": "a(Lnt;Lbqi;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "bqk",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 91,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.a().a()",
                            "var": "var3"
                        },
                        {
                            "field": "var3.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "var3.entrySet().iterator()",
                            "var": "var4"
                        },
                        {
                            "condition": "var4.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((Map$Entry)var4.next())",
                                    "var": "var5"
                                },
                                {
                                    "field": "(vk)var5.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "((ael)var5.getValue()).b().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((ael)var5.getValue()).b().iterator()",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var6.next()",
                                            "var": "var7"
                                        },
                                        {
                                            "field": "gm.Q.a(var7)",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.b().a()",
                            "var": "var3"
                        },
                        {
                            "field": "var3.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "var3.entrySet().iterator()",
                            "var": "var4"
                        },
                        {
                            "condition": "var4.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((Map$Entry)var4.next())",
                                    "var": "var5"
                                },
                                {
                                    "field": "(vk)var5.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "((ael)var5.getValue()).b().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((ael)var5.getValue()).b().iterator()",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var6.next()",
                                            "var": "var7"
                                        },
                                        {
                                            "field": "gm.T.a(var7)",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.c().a()",
                            "var": "var3"
                        },
                        {
                            "field": "var3.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "var3.entrySet().iterator()",
                            "var": "var4"
                        },
                        {
                            "condition": "var4.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((Map$Entry)var4.next())",
                                    "var": "var5"
                                },
                                {
                                    "field": "(vk)var5.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "((ael)var5.getValue()).b().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((ael)var5.getValue()).b().iterator()",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var6.next()",
                                            "var": "var7"
                                        },
                                        {
                                            "field": "gm.O.a(var7)",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.d().a()",
                            "var": "var3"
                        },
                        {
                            "field": "var3.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "var3.entrySet().iterator()",
                            "var": "var4"
                        },
                        {
                            "condition": "var4.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((Map$Entry)var4.next())",
                                    "var": "var5"
                                },
                                {
                                    "field": "(vk)var5.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "((ael)var5.getValue()).b().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((ael)var5.getValue()).b().iterator()",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var6.next()",
                                            "var": "var7"
                                        },
                                        {
                                            "field": "gm.S.a(var7)",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5C": [
                {
                    "class": "sm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 92,
                    "state": "PLAY"
                },
                null
            ]
        }
    },
    "recipes": {
        "amethyst_block": [
            [
                {
                    "id": "minecraft:amethyst_block",
                    "makes": {
                        "count": 1,
                        "name": "amethyst_block",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "SS",
                            "SS"
                        ],
                        "subs": {
                            "S": {
                                "name": "amethyst_shard",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "amethyst_shard",
                                "type": "item"
                            },
                            {
                                "name": "amethyst_shard",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "amethyst_shard",
                                "type": "item"
                            },
                            {
                                "name": "amethyst_shard",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "black_candle": [
            [
                {
                    "id": "minecraft:black_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "black_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "black_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "blue_candle": [
            [
                {
                    "id": "minecraft:blue_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "blue_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "blue_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "brown_candle": [
            [
                {
                    "id": "minecraft:brown_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "brown_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "brown_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "bundle": [
            [
                {
                    "id": "minecraft:bundle",
                    "makes": {
                        "count": 1,
                        "name": "bundle",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "-#-",
                            "# #",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "rabbit_hide",
                                "type": "item"
                            },
                            "-": {
                                "name": "string",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "string",
                                "type": "item"
                            },
                            {
                                "name": "rabbit_hide",
                                "type": "item"
                            },
                            {
                                "name": "string",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "rabbit_hide",
                                "type": "item"
                            },
                            null,
                            {
                                "name": "rabbit_hide",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "rabbit_hide",
                                "type": "item"
                            },
                            {
                                "name": "rabbit_hide",
                                "type": "item"
                            },
                            {
                                "name": "rabbit_hide",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "candle": [
            [
                {
                    "id": "minecraft:candle",
                    "makes": {
                        "count": 1,
                        "name": "candle",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "S",
                            "H"
                        ],
                        "subs": {
                            "H": {
                                "name": "honeycomb",
                                "type": "item"
                            },
                            "S": {
                                "name": "string",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "string",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "honeycomb",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "copper_block": [
            [
                {
                    "id": "minecraft:copper_block",
                    "makes": {
                        "count": 1,
                        "name": "copper_block",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "##",
                            "##"
                        ],
                        "subs": {
                            "#": {
                                "name": "copper_ingot",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "copper_ingot",
                                "type": "item"
                            },
                            {
                                "name": "copper_ingot",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "copper_ingot",
                                "type": "item"
                            },
                            {
                                "name": "copper_ingot",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "copper_ingot": [
            [
                {
                    "group": "copper_ingot",
                    "id": "minecraft:copper_ingot_from_copper_block",
                    "ingredients": [
                        {
                            "name": "copper_block",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 4,
                        "name": "copper_ingot",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "cut_copper": [
            [
                {
                    "id": "minecraft:cut_copper",
                    "makes": {
                        "count": 4,
                        "name": "cut_copper",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "##",
                            "##"
                        ],
                        "subs": {
                            "#": {
                                "name": "copper_block",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "copper_block",
                                "type": "item"
                            },
                            {
                                "name": "copper_block",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "copper_block",
                                "type": "item"
                            },
                            {
                                "name": "copper_block",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "cut_copper_slab": [
            [
                {
                    "id": "minecraft:cut_copper_slab",
                    "makes": {
                        "count": 6,
                        "name": "cut_copper_slab",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "cut_copper",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "cut_copper",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "cut_copper_stairs": [
            [
                {
                    "id": "minecraft:cut_copper_stairs",
                    "makes": {
                        "count": 4,
                        "name": "cut_copper_stairs",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#  ",
                            "## ",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "cut_copper",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "cut_copper",
                                "type": "item"
                            },
                            null,
                            null
                        ],
                        [
                            {
                                "name": "cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "cut_copper",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "cut_copper",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "cyan_candle": [
            [
                {
                    "id": "minecraft:cyan_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "cyan_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "cyan_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "firework_rocket": [
            [
                {
                    "id": "minecraft:firework_rocket_simple",
                    "ingredients": [
                        {
                            "name": "gunpowder",
                            "type": "item"
                        },
                        {
                            "name": "paper",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 3,
                        "name": "firework_rocket",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "gray_candle": [
            [
                {
                    "id": "minecraft:gray_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "gray_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "gray_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "green_candle": [
            [
                {
                    "id": "minecraft:green_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "green_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "green_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "light_blue_candle": [
            [
                {
                    "id": "minecraft:light_blue_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "light_blue_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "light_blue_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "light_gray_candle": [
            [
                {
                    "id": "minecraft:light_gray_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "light_gray_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "light_gray_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "lightly_weathered_cut_copper": [
            [
                {
                    "id": "minecraft:lightly_weathered_cut_copper",
                    "makes": {
                        "count": 4,
                        "name": "lightly_weathered_cut_copper",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "##",
                            "##"
                        ],
                        "subs": {
                            "#": {
                                "name": "lightly_weathered_copper_block",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "lightly_weathered_copper_block",
                                "type": "item"
                            },
                            {
                                "name": "lightly_weathered_copper_block",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "lightly_weathered_copper_block",
                                "type": "item"
                            },
                            {
                                "name": "lightly_weathered_copper_block",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "lightly_weathered_cut_copper_slab": [
            [
                {
                    "id": "minecraft:lightly_weathered_cut_copper_slab",
                    "makes": {
                        "count": 6,
                        "name": "lightly_weathered_cut_copper_slab",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "lightly_weathered_cut_copper",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "lightly_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "lightly_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "lightly_weathered_cut_copper",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "lightly_weathered_cut_copper_stairs": [
            [
                {
                    "id": "minecraft:lightly_weathered_cut_copper_stairs",
                    "makes": {
                        "count": 4,
                        "name": "lightly_weathered_cut_copper_stairs",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#  ",
                            "## ",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "lightly_weathered_cut_copper",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "lightly_weathered_cut_copper",
                                "type": "item"
                            },
                            null,
                            null
                        ],
                        [
                            {
                                "name": "lightly_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "lightly_weathered_cut_copper",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "lightly_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "lightly_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "lightly_weathered_cut_copper",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "lightning_rod": [
            [
                {
                    "id": "minecraft:lightning_rod",
                    "makes": {
                        "count": 1,
                        "name": "lightning_rod",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#",
                            "#",
                            "#"
                        ],
                        "subs": {
                            "#": {
                                "name": "copper_ingot",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "copper_ingot",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "copper_ingot",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "copper_ingot",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "lime_candle": [
            [
                {
                    "id": "minecraft:lime_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "lime_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "lime_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "magenta_candle": [
            [
                {
                    "id": "minecraft:magenta_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "magenta_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "magenta_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "orange_candle": [
            [
                {
                    "id": "minecraft:orange_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "orange_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "orange_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "pink_candle": [
            [
                {
                    "id": "minecraft:pink_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "pink_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "pink_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "purple_candle": [
            [
                {
                    "id": "minecraft:purple_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "purple_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "purple_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "red_candle": [
            [
                {
                    "id": "minecraft:red_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "red_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "red_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "semi_weathered_cut_copper": [
            [
                {
                    "id": "minecraft:semi_weathered_cut_copper",
                    "makes": {
                        "count": 4,
                        "name": "semi_weathered_cut_copper",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "##",
                            "##"
                        ],
                        "subs": {
                            "#": {
                                "name": "semi_weathered_copper_block",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "semi_weathered_copper_block",
                                "type": "item"
                            },
                            {
                                "name": "semi_weathered_copper_block",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "semi_weathered_copper_block",
                                "type": "item"
                            },
                            {
                                "name": "semi_weathered_copper_block",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "semi_weathered_cut_copper_slab": [
            [
                {
                    "id": "minecraft:semi_weathered_cut_copper_slab",
                    "makes": {
                        "count": 6,
                        "name": "semi_weathered_cut_copper_slab",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "semi_weathered_cut_copper",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "semi_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "semi_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "semi_weathered_cut_copper",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "semi_weathered_cut_copper_stairs": [
            [
                {
                    "id": "minecraft:semi_weathered_cut_copper_stairs",
                    "makes": {
                        "count": 4,
                        "name": "semi_weathered_cut_copper_stairs",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#  ",
                            "## ",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "semi_weathered_cut_copper",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "semi_weathered_cut_copper",
                                "type": "item"
                            },
                            null,
                            null
                        ],
                        [
                            {
                                "name": "semi_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "semi_weathered_cut_copper",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "semi_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "semi_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "semi_weathered_cut_copper",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "spyglass": [
            [
                {
                    "id": "minecraft:spyglass",
                    "makes": {
                        "count": 1,
                        "name": "spyglass",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            " # ",
                            " X ",
                            " X "
                        ],
                        "subs": {
                            "#": {
                                "name": "amethyst_shard",
                                "type": "item"
                            },
                            "X": {
                                "name": "copper_ingot",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            null,
                            {
                                "name": "amethyst_shard",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            null,
                            {
                                "name": "copper_ingot",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            null,
                            {
                                "name": "copper_ingot",
                                "type": "item"
                            },
                            null
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "tinted_glass": [
            [
                {
                    "id": "minecraft:tinted_glass",
                    "makes": {
                        "count": 2,
                        "name": "tinted_glass",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            " S ",
                            "SGS",
                            " S "
                        ],
                        "subs": {
                            "G": {
                                "name": "glass",
                                "type": "item"
                            },
                            "S": {
                                "name": "amethyst_shard",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            null,
                            {
                                "name": "amethyst_shard",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "amethyst_shard",
                                "type": "item"
                            },
                            {
                                "name": "glass",
                                "type": "item"
                            },
                            {
                                "name": "amethyst_shard",
                                "type": "item"
                            }
                        ],
                        [
                            null,
                            {
                                "name": "amethyst_shard",
                                "type": "item"
                            },
                            null
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "waxed_copper": [
            [
                {
                    "id": "minecraft:waxed_copper",
                    "ingredients": [
                        {
                            "name": "copper_block",
                            "type": "item"
                        },
                        {
                            "name": "honeycomb",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "waxed_copper",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "waxed_cut_copper": [
            [
                {
                    "id": "minecraft:waxed_cut_copper_from_honeycomb",
                    "ingredients": [
                        {
                            "name": "cut_copper",
                            "type": "item"
                        },
                        {
                            "name": "honeycomb",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "waxed_cut_copper",
                        "type": "item"
                    },
                    "type": "shapeless"
                },
                {
                    "id": "minecraft:waxed_cut_copper_from_waxed_block",
                    "makes": {
                        "count": 4,
                        "name": "waxed_cut_copper",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "##",
                            "##"
                        ],
                        "subs": {
                            "#": {
                                "name": "waxed_copper",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "waxed_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_copper",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "waxed_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_copper",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "waxed_cut_copper_slab": [
            [
                {
                    "id": "minecraft:waxed_copper_cut_slab_from_honeycomb",
                    "ingredients": [
                        {
                            "name": "cut_copper_slab",
                            "type": "item"
                        },
                        {
                            "name": "honeycomb",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "waxed_cut_copper_slab",
                        "type": "item"
                    },
                    "type": "shapeless"
                },
                {
                    "id": "minecraft:waxed_cut_copper_slab",
                    "makes": {
                        "count": 6,
                        "name": "waxed_cut_copper_slab",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "waxed_cut_copper",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "waxed_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_cut_copper",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "waxed_cut_copper_stairs": [
            [
                {
                    "id": "minecraft:waxed_copper_cut_stairs_from_honeycomb",
                    "ingredients": [
                        {
                            "name": "cut_copper_stairs",
                            "type": "item"
                        },
                        {
                            "name": "honeycomb",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "waxed_cut_copper_stairs",
                        "type": "item"
                    },
                    "type": "shapeless"
                },
                {
                    "id": "minecraft:waxed_cut_copper_stairs",
                    "makes": {
                        "count": 4,
                        "name": "waxed_cut_copper_stairs",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#  ",
                            "## ",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "waxed_cut_copper",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "waxed_cut_copper",
                                "type": "item"
                            },
                            null,
                            null
                        ],
                        [
                            {
                                "name": "waxed_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_cut_copper",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "waxed_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_cut_copper",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "waxed_lightly_weathered_copper": [
            [
                {
                    "id": "minecraft:waxed_lightly_weathered_copper",
                    "ingredients": [
                        {
                            "name": "lightly_weathered_copper_block",
                            "type": "item"
                        },
                        {
                            "name": "honeycomb",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "waxed_lightly_weathered_copper",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "waxed_lightly_weathered_cut_copper": [
            [
                {
                    "id": "minecraft:waxed_lightly_weathered_cut_copper_from_honeycomb",
                    "ingredients": [
                        {
                            "name": "lightly_weathered_cut_copper",
                            "type": "item"
                        },
                        {
                            "name": "honeycomb",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "waxed_lightly_weathered_cut_copper",
                        "type": "item"
                    },
                    "type": "shapeless"
                },
                {
                    "id": "minecraft:waxed_lightly_weathered_cut_copper_from_waxed_block",
                    "makes": {
                        "count": 4,
                        "name": "waxed_lightly_weathered_cut_copper",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "##",
                            "##"
                        ],
                        "subs": {
                            "#": {
                                "name": "waxed_lightly_weathered_copper",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "waxed_lightly_weathered_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_lightly_weathered_copper",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "waxed_lightly_weathered_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_lightly_weathered_copper",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "waxed_lightly_weathered_cut_copper_slab": [
            [
                {
                    "id": "minecraft:waxed_lightly_weathered_cut_copper_slab",
                    "makes": {
                        "count": 6,
                        "name": "waxed_lightly_weathered_cut_copper_slab",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "waxed_lightly_weathered_cut_copper",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "waxed_lightly_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_lightly_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_lightly_weathered_cut_copper",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                },
                {
                    "id": "minecraft:waxed_lightly_weathered_cut_copper_slab_from_honeycomb",
                    "ingredients": [
                        {
                            "name": "lightly_weathered_cut_copper_slab",
                            "type": "item"
                        },
                        {
                            "name": "honeycomb",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "waxed_lightly_weathered_cut_copper_slab",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "waxed_lightly_weathered_cut_copper_stairs": [
            [
                {
                    "id": "minecraft:waxed_lightly_weathered_cut_copper_stairs",
                    "makes": {
                        "count": 4,
                        "name": "waxed_lightly_weathered_cut_copper_stairs",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#  ",
                            "## ",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "waxed_lightly_weathered_cut_copper",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "waxed_lightly_weathered_cut_copper",
                                "type": "item"
                            },
                            null,
                            null
                        ],
                        [
                            {
                                "name": "waxed_lightly_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_lightly_weathered_cut_copper",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "waxed_lightly_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_lightly_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_lightly_weathered_cut_copper",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                },
                {
                    "id": "minecraft:waxed_lightly_weathered_cut_copper_stairs_from_honeycomb",
                    "ingredients": [
                        {
                            "name": "lightly_weathered_cut_copper_stairs",
                            "type": "item"
                        },
                        {
                            "name": "honeycomb",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "waxed_lightly_weathered_cut_copper_stairs",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "waxed_semi_weathered_copper": [
            [
                {
                    "id": "minecraft:waxed_semi_weathered_copper",
                    "ingredients": [
                        {
                            "name": "semi_weathered_copper_block",
                            "type": "item"
                        },
                        {
                            "name": "honeycomb",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "waxed_semi_weathered_copper",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "waxed_semi_weathered_cut_copper": [
            [
                {
                    "id": "minecraft:waxed_semi_weathered_cut_copper_from_honeycomb",
                    "ingredients": [
                        {
                            "name": "semi_weathered_cut_copper",
                            "type": "item"
                        },
                        {
                            "name": "honeycomb",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "waxed_semi_weathered_cut_copper",
                        "type": "item"
                    },
                    "type": "shapeless"
                },
                {
                    "id": "minecraft:waxed_semi_weathered_cut_copper_from_waxed_block",
                    "makes": {
                        "count": 4,
                        "name": "waxed_semi_weathered_cut_copper",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "##",
                            "##"
                        ],
                        "subs": {
                            "#": {
                                "name": "waxed_semi_weathered_copper",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "waxed_semi_weathered_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_semi_weathered_copper",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "waxed_semi_weathered_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_semi_weathered_copper",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "waxed_semi_weathered_cut_copper_slab": [
            [
                {
                    "id": "minecraft:waxed_semi_weathered_cut_copper_slab",
                    "makes": {
                        "count": 6,
                        "name": "waxed_semi_weathered_cut_copper_slab",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "waxed_semi_weathered_cut_copper",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "waxed_semi_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_semi_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_semi_weathered_cut_copper",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                },
                {
                    "id": "minecraft:waxed_semi_weathered_cut_copper_slab_from_honeycomb",
                    "ingredients": [
                        {
                            "name": "semi_weathered_cut_copper_slab",
                            "type": "item"
                        },
                        {
                            "name": "honeycomb",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "waxed_semi_weathered_cut_copper_slab",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "waxed_semi_weathered_cut_copper_stairs": [
            [
                {
                    "id": "minecraft:waxed_semi_weathered_cut_copper_stairs",
                    "makes": {
                        "count": 4,
                        "name": "waxed_semi_weathered_cut_copper_stairs",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#  ",
                            "## ",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "waxed_semi_weathered_cut_copper",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "waxed_semi_weathered_cut_copper",
                                "type": "item"
                            },
                            null,
                            null
                        ],
                        [
                            {
                                "name": "waxed_semi_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_semi_weathered_cut_copper",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "waxed_semi_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_semi_weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "waxed_semi_weathered_cut_copper",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                },
                {
                    "id": "minecraft:waxed_semi_weathered_cut_copper_stairs_from_honeycomb",
                    "ingredients": [
                        {
                            "name": "semi_weathered_cut_copper_stairs",
                            "type": "item"
                        },
                        {
                            "name": "honeycomb",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "waxed_semi_weathered_cut_copper_stairs",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "weathered_cut_copper": [
            [
                {
                    "id": "minecraft:weathered_cut_copper",
                    "makes": {
                        "count": 4,
                        "name": "weathered_cut_copper",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "##",
                            "##"
                        ],
                        "subs": {
                            "#": {
                                "name": "weathered_copper_block",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "weathered_copper_block",
                                "type": "item"
                            },
                            {
                                "name": "weathered_copper_block",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "weathered_copper_block",
                                "type": "item"
                            },
                            {
                                "name": "weathered_copper_block",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "weathered_cut_copper_slab": [
            [
                {
                    "id": "minecraft:weathered_cut_copper_slab",
                    "makes": {
                        "count": 6,
                        "name": "weathered_cut_copper_slab",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "weathered_cut_copper",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "weathered_cut_copper",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "weathered_cut_copper_stairs": [
            [
                {
                    "id": "minecraft:weathered_cut_copper_stairs",
                    "makes": {
                        "count": 4,
                        "name": "weathered_cut_copper_stairs",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#  ",
                            "## ",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "weathered_cut_copper",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "weathered_cut_copper",
                                "type": "item"
                            },
                            null,
                            null
                        ],
                        [
                            {
                                "name": "weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "weathered_cut_copper",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "weathered_cut_copper",
                                "type": "item"
                            },
                            {
                                "name": "weathered_cut_copper",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "white_candle": [
            [
                {
                    "id": "minecraft:white_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "white_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "white_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "yellow_candle": [
            [
                {
                    "id": "minecraft:yellow_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "yellow_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "yellow_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ]
    },
    "sounds": {
        "block.amethyst_block.break": [
            {
                "field": "w",
                "id": 22,
                "name": "block.amethyst_block.break",
                "sounds": [
                    {
                        "hash": "d99ea9a1bcd14d24f9a83d09fb07be81fcf30570",
                        "name": "block/amethyst/break1",
                        "volume": 1
                    },
                    {
                        "hash": "bae694eddcf4766fa100552fddd5bc463a4edbff",
                        "name": "block/amethyst/break2",
                        "volume": 1
                    },
                    {
                        "hash": "6ef376d7623fac03bc15caf95ffeae9d192d46f4",
                        "name": "block/amethyst/break3",
                        "volume": 1
                    },
                    {
                        "hash": "5c39dec69b8093f9accf712fe21f9f8bae102991",
                        "name": "block/amethyst/break4",
                        "volume": 1
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            },
            null
        ],
        "block.amethyst_block.chime": [
            {
                "field": "x",
                "id": 23,
                "name": "block.amethyst_block.chime",
                "sounds": [
                    {
                        "hash": "da0969aedca90796e6828293b6d8f85f4c1a35f8",
                        "name": "block/amethyst/shimmer",
                        "volume": 0.2
                    }
                ],
                "subtitle_key": "subtitles.block.amethyst_block.chime"
            },
            null
        ],
        "block.amethyst_block.fall": [
            {
                "field": "y",
                "id": 24,
                "name": "block.amethyst_block.fall",
                "sounds": [
                    {
                        "hash": "ae1fff00d840263fdd265f4132bce0a36060e710",
                        "name": "block/amethyst/step1",
                        "volume": 1
                    },
                    {
                        "hash": "e13e894043078dd4ea17c254dbb0841297d5f995",
                        "name": "block/amethyst/step2",
                        "volume": 1
                    },
                    {
                        "hash": "d83f84529125443dc54c215de2452b790c9fc1b4",
                        "name": "block/amethyst/step3",
                        "volume": 1
                    },
                    {
                        "hash": "54488c4207d033bd6fb75def4869cb6e1f7926f1",
                        "name": "block/amethyst/step4",
                        "volume": 1
                    },
                    {
                        "hash": "b88ded63fb4428d72b0b7ef07dd870b6e1fad52f",
                        "name": "block/amethyst/step5",
                        "volume": 1
                    },
                    {
                        "hash": "55cfb1b3422f9f66e85656ee12723a1cfb7370cb",
                        "name": "block/amethyst/step6",
                        "volume": 1
                    },
                    {
                        "hash": "c51ab373a06654202aef302f17df73d0564fdca5",
                        "name": "block/amethyst/step7",
                        "volume": 1
                    },
                    {
                        "hash": "bf73c5552459f53cbd591ce2717d932ce0231c75",
                        "name": "block/amethyst/step8",
                        "volume": 1
                    },
                    {
                        "hash": "19f43eef373da394e78338632d627eef89957e98",
                        "name": "block/amethyst/step9",
                        "volume": 1
                    },
                    {
                        "hash": "4e9de2d8bc053581711a1578a5949386c7b24a39",
                        "name": "block/amethyst/step10",
                        "volume": 1
                    },
                    {
                        "hash": "4270788804150c672116f1e0e5c0bad7d8fca4cf",
                        "name": "block/amethyst/step11",
                        "volume": 1
                    },
                    {
                        "hash": "2da4a16b23fa525000eb370963176524d0a63942",
                        "name": "block/amethyst/step12",
                        "volume": 1
                    },
                    {
                        "hash": "277c4ee5e68971b9c43f07b5e7d5783a57adea91",
                        "name": "block/amethyst/step14",
                        "volume": 1
                    }
                ]
            },
            null
        ],
        "block.amethyst_block.hit": [
            {
                "field": "z",
                "id": 25,
                "name": "block.amethyst_block.hit",
                "sounds": [
                    {
                        "hash": "ae1fff00d840263fdd265f4132bce0a36060e710",
                        "name": "block/amethyst/step1",
                        "volume": 1
                    },
                    {
                        "hash": "e13e894043078dd4ea17c254dbb0841297d5f995",
                        "name": "block/amethyst/step2",
                        "volume": 1
                    },
                    {
                        "hash": "d83f84529125443dc54c215de2452b790c9fc1b4",
                        "name": "block/amethyst/step3",
                        "volume": 1
                    },
                    {
                        "hash": "54488c4207d033bd6fb75def4869cb6e1f7926f1",
                        "name": "block/amethyst/step4",
                        "volume": 1
                    },
                    {
                        "hash": "b88ded63fb4428d72b0b7ef07dd870b6e1fad52f",
                        "name": "block/amethyst/step5",
                        "volume": 1
                    },
                    {
                        "hash": "55cfb1b3422f9f66e85656ee12723a1cfb7370cb",
                        "name": "block/amethyst/step6",
                        "volume": 1
                    },
                    {
                        "hash": "c51ab373a06654202aef302f17df73d0564fdca5",
                        "name": "block/amethyst/step7",
                        "volume": 1
                    },
                    {
                        "hash": "bf73c5552459f53cbd591ce2717d932ce0231c75",
                        "name": "block/amethyst/step8",
                        "volume": 1
                    },
                    {
                        "hash": "19f43eef373da394e78338632d627eef89957e98",
                        "name": "block/amethyst/step9",
                        "volume": 1
                    },
                    {
                        "hash": "4e9de2d8bc053581711a1578a5949386c7b24a39",
                        "name": "block/amethyst/step10",
                        "volume": 1
                    },
                    {
                        "hash": "4270788804150c672116f1e0e5c0bad7d8fca4cf",
                        "name": "block/amethyst/step11",
                        "volume": 1
                    },
                    {
                        "hash": "2da4a16b23fa525000eb370963176524d0a63942",
                        "name": "block/amethyst/step12",
                        "volume": 1
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            },
            null
        ],
        "block.amethyst_block.place": [
            {
                "field": "A",
                "id": 26,
                "name": "block.amethyst_block.place",
                "sounds": [
                    {
                        "hash": "271f0b289d320620d5f8b4742867a4d0b1d24643",
                        "name": "block/amethyst/place1",
                        "volume": 1
                    },
                    {
                        "hash": "ece0b0833c26076209e1c1395571f8a5da5fa012",
                        "name": "block/amethyst/place2",
                        "volume": 1
                    },
                    {
                        "hash": "fd8e2fbd111d5f4f2a07650a37163cb956566777",
                        "name": "block/amethyst/place3",
                        "volume": 1
                    },
                    {
                        "hash": "f5da4e2f7a3ef17e713e302190f63ad51f6e1654",
                        "name": "block/amethyst/place4",
                        "volume": 1
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            },
            null
        ],
        "block.amethyst_block.step": [
            {
                "field": "B",
                "id": 27,
                "name": "block.amethyst_block.step",
                "sounds": [
                    {
                        "hash": "ae1fff00d840263fdd265f4132bce0a36060e710",
                        "name": "block/amethyst/step1",
                        "volume": 1
                    },
                    {
                        "hash": "e13e894043078dd4ea17c254dbb0841297d5f995",
                        "name": "block/amethyst/step2",
                        "volume": 1
                    },
                    {
                        "hash": "d83f84529125443dc54c215de2452b790c9fc1b4",
                        "name": "block/amethyst/step3",
                        "volume": 1
                    },
                    {
                        "hash": "54488c4207d033bd6fb75def4869cb6e1f7926f1",
                        "name": "block/amethyst/step4",
                        "volume": 1
                    },
                    {
                        "hash": "b88ded63fb4428d72b0b7ef07dd870b6e1fad52f",
                        "name": "block/amethyst/step5",
                        "volume": 1
                    },
                    {
                        "hash": "55cfb1b3422f9f66e85656ee12723a1cfb7370cb",
                        "name": "block/amethyst/step6",
                        "volume": 1
                    },
                    {
                        "hash": "c51ab373a06654202aef302f17df73d0564fdca5",
                        "name": "block/amethyst/step7",
                        "volume": 1
                    },
                    {
                        "hash": "bf73c5552459f53cbd591ce2717d932ce0231c75",
                        "name": "block/amethyst/step8",
                        "volume": 1
                    },
                    {
                        "hash": "19f43eef373da394e78338632d627eef89957e98",
                        "name": "block/amethyst/step9",
                        "volume": 1
                    },
                    {
                        "hash": "4e9de2d8bc053581711a1578a5949386c7b24a39",
                        "name": "block/amethyst/step10",
                        "volume": 1
                    },
                    {
                        "hash": "4270788804150c672116f1e0e5c0bad7d8fca4cf",
                        "name": "block/amethyst/step11",
                        "volume": 1
                    },
                    {
                        "hash": "2da4a16b23fa525000eb370963176524d0a63942",
                        "name": "block/amethyst/step12",
                        "volume": 1
                    },
                    {
                        "hash": "9dc2dc677905c29fa35138a3bdaec7dac777c30a",
                        "name": "block/amethyst/step13",
                        "volume": 1
                    },
                    {
                        "hash": "277c4ee5e68971b9c43f07b5e7d5783a57adea91",
                        "name": "block/amethyst/step14",
                        "volume": 1
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            },
            null
        ],
        "block.amethyst_cluster.break": [
            {
                "field": "C",
                "id": 28,
                "name": "block.amethyst_cluster.break",
                "sounds": [
                    {
                        "hash": "689be5af8ea7328e8e1b664561efff236ab87aee",
                        "name": "block/amethyst_cluster/break1",
                        "pitch": 0.8,
                        "volume": 0.8
                    },
                    {
                        "hash": "abaa4fb5b56b9110a2de7733d291338a6b0d4c3e",
                        "name": "block/amethyst_cluster/break2",
                        "pitch": 0.8,
                        "volume": 0.8
                    },
                    {
                        "hash": "a01ead89927917ea1817990c645c6fcee2018c8a",
                        "name": "block/amethyst_cluster/break3",
                        "pitch": 0.8,
                        "volume": 0.8
                    },
                    {
                        "hash": "c4380743ab08e60bafad7ff0dfd2aeb281fdfc3a",
                        "name": "block/amethyst_cluster/break4",
                        "pitch": 0.8,
                        "volume": 0.8
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            },
            null
        ],
        "block.amethyst_cluster.fall": [
            {
                "field": "D",
                "id": 29,
                "name": "block.amethyst_cluster.fall",
                "sounds": [
                    {
                        "hash": "ae1fff00d840263fdd265f4132bce0a36060e710",
                        "name": "block/amethyst/step1",
                        "volume": 1
                    },
                    {
                        "hash": "e13e894043078dd4ea17c254dbb0841297d5f995",
                        "name": "block/amethyst/step2",
                        "volume": 1
                    },
                    {
                        "hash": "d83f84529125443dc54c215de2452b790c9fc1b4",
                        "name": "block/amethyst/step3",
                        "volume": 1
                    },
                    {
                        "hash": "54488c4207d033bd6fb75def4869cb6e1f7926f1",
                        "name": "block/amethyst/step4",
                        "volume": 1
                    },
                    {
                        "hash": "b88ded63fb4428d72b0b7ef07dd870b6e1fad52f",
                        "name": "block/amethyst/step5",
                        "volume": 1
                    },
                    {
                        "hash": "55cfb1b3422f9f66e85656ee12723a1cfb7370cb",
                        "name": "block/amethyst/step6",
                        "volume": 1
                    },
                    {
                        "hash": "c51ab373a06654202aef302f17df73d0564fdca5",
                        "name": "block/amethyst/step7",
                        "volume": 1
                    },
                    {
                        "hash": "bf73c5552459f53cbd591ce2717d932ce0231c75",
                        "name": "block/amethyst/step8",
                        "volume": 1
                    },
                    {
                        "hash": "19f43eef373da394e78338632d627eef89957e98",
                        "name": "block/amethyst/step9",
                        "volume": 1
                    },
                    {
                        "hash": "4e9de2d8bc053581711a1578a5949386c7b24a39",
                        "name": "block/amethyst/step10",
                        "volume": 1
                    },
                    {
                        "hash": "4270788804150c672116f1e0e5c0bad7d8fca4cf",
                        "name": "block/amethyst/step11",
                        "volume": 1
                    },
                    {
                        "hash": "2da4a16b23fa525000eb370963176524d0a63942",
                        "name": "block/amethyst/step12",
                        "volume": 1
                    },
                    {
                        "hash": "277c4ee5e68971b9c43f07b5e7d5783a57adea91",
                        "name": "block/amethyst/step14",
                        "volume": 1
                    }
                ]
            },
            null
        ],
        "block.amethyst_cluster.hit": [
            {
                "field": "E",
                "id": 30,
                "name": "block.amethyst_cluster.hit",
                "sounds": [
                    {
                        "hash": "ae1fff00d840263fdd265f4132bce0a36060e710",
                        "name": "block/amethyst/step1",
                        "volume": 1
                    },
                    {
                        "hash": "e13e894043078dd4ea17c254dbb0841297d5f995",
                        "name": "block/amethyst/step2",
                        "volume": 1
                    },
                    {
                        "hash": "d83f84529125443dc54c215de2452b790c9fc1b4",
                        "name": "block/amethyst/step3",
                        "volume": 1
                    },
                    {
                        "hash": "54488c4207d033bd6fb75def4869cb6e1f7926f1",
                        "name": "block/amethyst/step4",
                        "volume": 1
                    },
                    {
                        "hash": "b88ded63fb4428d72b0b7ef07dd870b6e1fad52f",
                        "name": "block/amethyst/step5",
                        "volume": 1
                    },
                    {
                        "hash": "55cfb1b3422f9f66e85656ee12723a1cfb7370cb",
                        "name": "block/amethyst/step6",
                        "volume": 1
                    },
                    {
                        "hash": "c51ab373a06654202aef302f17df73d0564fdca5",
                        "name": "block/amethyst/step7",
                        "volume": 1
                    },
                    {
                        "hash": "bf73c5552459f53cbd591ce2717d932ce0231c75",
                        "name": "block/amethyst/step8",
                        "volume": 1
                    },
                    {
                        "hash": "19f43eef373da394e78338632d627eef89957e98",
                        "name": "block/amethyst/step9",
                        "volume": 1
                    },
                    {
                        "hash": "4e9de2d8bc053581711a1578a5949386c7b24a39",
                        "name": "block/amethyst/step10",
                        "volume": 1
                    },
                    {
                        "hash": "4270788804150c672116f1e0e5c0bad7d8fca4cf",
                        "name": "block/amethyst/step11",
                        "volume": 1
                    },
                    {
                        "hash": "2da4a16b23fa525000eb370963176524d0a63942",
                        "name": "block/amethyst/step12",
                        "volume": 1
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            },
            null
        ],
        "block.amethyst_cluster.place": [
            {
                "field": "F",
                "id": 31,
                "name": "block.amethyst_cluster.place",
                "sounds": [
                    {
                        "hash": "f57c74bb3b583bbbbb78529203ff8dee72f1052f",
                        "name": "block/amethyst_cluster/place1",
                        "volume": 0.9
                    },
                    {
                        "hash": "b57f215084d00503c884c327f2617ce563bf2e3c",
                        "name": "block/amethyst_cluster/place2",
                        "volume": 0.9
                    },
                    {
                        "hash": "4af9c72df6f67060c0dbff10feeb9aa13767b560",
                        "name": "block/amethyst_cluster/place3",
                        "volume": 0.9
                    },
                    {
                        "hash": "7f31942ce140138141d4873ff36acd9a51f4f496",
                        "name": "block/amethyst_cluster/place4",
                        "volume": 0.9
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            },
            null
        ],
        "block.amethyst_cluster.step": [
            {
                "field": "G",
                "id": 32,
                "name": "block.amethyst_cluster.step",
                "sounds": [
                    {
                        "hash": "ae1fff00d840263fdd265f4132bce0a36060e710",
                        "name": "block/amethyst/step1",
                        "volume": 1
                    },
                    {
                        "hash": "e13e894043078dd4ea17c254dbb0841297d5f995",
                        "name": "block/amethyst/step2",
                        "volume": 1
                    },
                    {
                        "hash": "d83f84529125443dc54c215de2452b790c9fc1b4",
                        "name": "block/amethyst/step3",
                        "volume": 1
                    },
                    {
                        "hash": "54488c4207d033bd6fb75def4869cb6e1f7926f1",
                        "name": "block/amethyst/step4",
                        "volume": 1
                    },
                    {
                        "hash": "b88ded63fb4428d72b0b7ef07dd870b6e1fad52f",
                        "name": "block/amethyst/step5",
                        "volume": 1
                    },
                    {
                        "hash": "55cfb1b3422f9f66e85656ee12723a1cfb7370cb",
                        "name": "block/amethyst/step6",
                        "volume": 1
                    },
                    {
                        "hash": "c51ab373a06654202aef302f17df73d0564fdca5",
                        "name": "block/amethyst/step7",
                        "volume": 1
                    },
                    {
                        "hash": "bf73c5552459f53cbd591ce2717d932ce0231c75",
                        "name": "block/amethyst/step8",
                        "volume": 1
                    },
                    {
                        "hash": "19f43eef373da394e78338632d627eef89957e98",
                        "name": "block/amethyst/step9",
                        "volume": 1
                    },
                    {
                        "hash": "4e9de2d8bc053581711a1578a5949386c7b24a39",
                        "name": "block/amethyst/step10",
                        "volume": 1
                    },
                    {
                        "hash": "4270788804150c672116f1e0e5c0bad7d8fca4cf",
                        "name": "block/amethyst/step11",
                        "volume": 1
                    },
                    {
                        "hash": "2da4a16b23fa525000eb370963176524d0a63942",
                        "name": "block/amethyst/step12",
                        "volume": 1
                    },
                    {
                        "hash": "9dc2dc677905c29fa35138a3bdaec7dac777c30a",
                        "name": "block/amethyst/step13",
                        "volume": 1
                    },
                    {
                        "hash": "277c4ee5e68971b9c43f07b5e7d5783a57adea91",
                        "name": "block/amethyst/step14",
                        "volume": 1
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            },
            null
        ],
        "block.cake.add_candle": [
            {
                "field": "bL",
                "id": 141,
                "name": "block.cake.add_candle",
                "sounds": [
                    {
                        "hash": "8ca2c5219bef386424c8d002a30dbb6d5c63e45f",
                        "name": "block/cake/add_candle1"
                    },
                    {
                        "hash": "8e1a772f818d2e6eed58cdb2b083bde8776c38de",
                        "name": "block/cake/add_candle2"
                    },
                    {
                        "hash": "b1b19e98780d3f3b205529784381722bc2072293",
                        "name": "block/cake/add_candle3"
                    }
                ],
                "subtitle": "Cake squishes",
                "subtitle_key": "subtitles.block.cake.add_candle"
            },
            null
        ],
        "block.calcite.break": [
            {
                "field": "bM",
                "id": 142,
                "name": "block.calcite.break",
                "sounds": [
                    {
                        "hash": "cc18f6fff795c388d5344835cbdd26033ffe612a",
                        "name": "block/calcite/break1",
                        "volume": 0.9
                    },
                    {
                        "hash": "9ec3a85c351475f38ecc01dd4b1b1bd5ae82ddf8",
                        "name": "block/calcite/break2",
                        "volume": 0.9
                    },
                    {
                        "hash": "382a151231a96ffbea3622943cd2cb64acca107e",
                        "name": "block/calcite/break3",
                        "volume": 0.9
                    },
                    {
                        "hash": "39ec9f647dc54c66f72dcaf0e54b066f413a0895",
                        "name": "block/calcite/break4",
                        "volume": 0.9
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            },
            null
        ],
        "block.calcite.fall": [
            {
                "field": "bQ",
                "id": 146,
                "name": "block.calcite.fall",
                "sounds": [
                    {
                        "hash": "f929049bb7d6cd5ab7cfbb51e55ea3cee52e5729",
                        "name": "block/calcite/step1",
                        "volume": 1
                    },
                    {
                        "hash": "b2b85858191c452aa27d1ea790edf2c9c497e0d5",
                        "name": "block/calcite/step2",
                        "volume": 1
                    },
                    {
                        "hash": "a8729aeadb4f8303d16366e2896098cc7926da67",
                        "name": "block/calcite/step3",
                        "volume": 1
                    },
                    {
                        "hash": "0e5029467ce047b3146be7ac3c25325301e223dd",
                        "name": "block/calcite/step4",
                        "volume": 1
                    },
                    {
                        "hash": "f3e93920147eef76105c0f47f845fb53de202a45",
                        "name": "block/calcite/step5",
                        "volume": 1
                    },
                    {
                        "hash": "6bb45e31e1939487f58f5fd4be1e7487b1fa16be",
                        "name": "block/calcite/step6",
                        "volume": 1
                    }
                ]
            },
            null
        ],
        "block.calcite.hit": [
            {
                "field": "bP",
                "id": 145,
                "name": "block.calcite.hit",
                "sounds": [
                    {
                        "hash": "f929049bb7d6cd5ab7cfbb51e55ea3cee52e5729",
                        "name": "block/calcite/step1",
                        "volume": 1
                    },
                    {
                        "hash": "b2b85858191c452aa27d1ea790edf2c9c497e0d5",
                        "name": "block/calcite/step2",
                        "volume": 1
                    },
                    {
                        "hash": "a8729aeadb4f8303d16366e2896098cc7926da67",
                        "name": "block/calcite/step3",
                        "volume": 1
                    },
                    {
                        "hash": "0e5029467ce047b3146be7ac3c25325301e223dd",
                        "name": "block/calcite/step4",
                        "volume": 1
                    },
                    {
                        "hash": "f3e93920147eef76105c0f47f845fb53de202a45",
                        "name": "block/calcite/step5",
                        "volume": 1
                    },
                    {
                        "hash": "6bb45e31e1939487f58f5fd4be1e7487b1fa16be",
                        "name": "block/calcite/step6",
                        "volume": 1
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            },
            null
        ],
        "block.calcite.place": [
            {
                "field": "bO",
                "id": 144,
                "name": "block.calcite.place",
                "sounds": [
                    {
                        "hash": "2ccf6ef5fc880ccd57a6e550c443700e6d748e3c",
                        "name": "block/calcite/place1",
                        "volume": 0.94
                    },
                    {
                        "hash": "54d86634de079d8e52cc0129fa7cfe269a8fec17",
                        "name": "block/calcite/place2",
                        "volume": 0.94
                    },
                    {
                        "hash": "64aedc68cc012df8336801a50e617b4fd09343fd",
                        "name": "block/calcite/place3",
                        "volume": 0.94
                    },
                    {
                        "hash": "240d7af9ddb309e5e6b30f5b69b163bda9f43d8e",
                        "name": "block/calcite/place4",
                        "volume": 0.94
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            },
            null
        ],
        "block.calcite.step": [
            {
                "field": "bN",
                "id": 143,
                "name": "block.calcite.step",
                "sounds": [
                    {
                        "hash": "f929049bb7d6cd5ab7cfbb51e55ea3cee52e5729",
                        "name": "block/calcite/step1",
                        "volume": 1
                    },
                    {
                        "hash": "b2b85858191c452aa27d1ea790edf2c9c497e0d5",
                        "name": "block/calcite/step2",
                        "volume": 1
                    },
                    {
                        "hash": "a8729aeadb4f8303d16366e2896098cc7926da67",
                        "name": "block/calcite/step3",
                        "volume": 1
                    },
                    {
                        "hash": "0e5029467ce047b3146be7ac3c25325301e223dd",
                        "name": "block/calcite/step4",
                        "volume": 1
                    },
                    {
                        "hash": "f3e93920147eef76105c0f47f845fb53de202a45",
                        "name": "block/calcite/step5",
                        "volume": 1
                    },
                    {
                        "hash": "6bb45e31e1939487f58f5fd4be1e7487b1fa16be",
                        "name": "block/calcite/step6",
                        "volume": 1
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            },
            null
        ],
        "block.candle.ambient": [
            {
                "field": "bS",
                "id": 148,
                "name": "block.candle.ambient",
                "sounds": [
                    {
                        "attenuation_distance": 3,
                        "hash": "01fc32d87db50d42e67519529c9e5b911652fcc7",
                        "name": "block/candle/ambient1",
                        "pitch": 0.8,
                        "volume": 0.7
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "aaf9d9bbea70c6ae1b6326d55a6bd31835d7ad58",
                        "name": "block/candle/ambient2",
                        "pitch": 0.8,
                        "volume": 0.7
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "cea8d7528eb11e1b804f43c1fc96db8e20a5270c",
                        "name": "block/candle/ambient3",
                        "pitch": 0.8,
                        "volume": 0.7
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "0a682ccf59ee55c4c318540cb1c1796b89544725",
                        "name": "block/candle/ambient4",
                        "pitch": 0.8,
                        "volume": 0.7
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "3b38ff0265ed81718749b343af3341c434cdeec2",
                        "name": "block/candle/ambient5",
                        "pitch": 0.8,
                        "volume": 0.7
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "006dada2a21571fc27e6a3781a8c245ea2f0a7fc",
                        "name": "block/candle/ambient6",
                        "pitch": 0.8,
                        "volume": 0.7
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "55a1980f05271af3adaef0a0de95c7643dc30398",
                        "name": "block/candle/ambient7",
                        "pitch": 0.8,
                        "volume": 0.7
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "3a5861e32a704c97e0ac1418a7e4bdd6dd7df9b7",
                        "name": "block/candle/ambient8",
                        "pitch": 0.8,
                        "volume": 0.7
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "ffa959046f30befad6490dde4bed82e81fed2c97",
                        "name": "block/candle/ambient9",
                        "pitch": 0.8,
                        "volume": 0.7
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "01fc32d87db50d42e67519529c9e5b911652fcc7",
                        "name": "block/candle/ambient1",
                        "pitch": 0.9,
                        "volume": 0.8
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "aaf9d9bbea70c6ae1b6326d55a6bd31835d7ad58",
                        "name": "block/candle/ambient2",
                        "pitch": 0.9,
                        "volume": 0.8
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "cea8d7528eb11e1b804f43c1fc96db8e20a5270c",
                        "name": "block/candle/ambient3",
                        "pitch": 0.9,
                        "volume": 0.8
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "0a682ccf59ee55c4c318540cb1c1796b89544725",
                        "name": "block/candle/ambient4",
                        "pitch": 0.9,
                        "volume": 0.8
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "3b38ff0265ed81718749b343af3341c434cdeec2",
                        "name": "block/candle/ambient5",
                        "pitch": 0.9,
                        "volume": 0.8
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "006dada2a21571fc27e6a3781a8c245ea2f0a7fc",
                        "name": "block/candle/ambient6",
                        "pitch": 0.9,
                        "volume": 0.8
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "55a1980f05271af3adaef0a0de95c7643dc30398",
                        "name": "block/candle/ambient7",
                        "pitch": 0.9,
                        "volume": 0.8
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "3a5861e32a704c97e0ac1418a7e4bdd6dd7df9b7",
                        "name": "block/candle/ambient8",
                        "pitch": 0.9,
                        "volume": 0.8
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "ffa959046f30befad6490dde4bed82e81fed2c97",
                        "name": "block/candle/ambient9",
                        "pitch": 0.9,
                        "volume": 0.8
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "01fc32d87db50d42e67519529c9e5b911652fcc7",
                        "name": "block/candle/ambient1",
                        "pitch": 1,
                        "volume": 1
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "aaf9d9bbea70c6ae1b6326d55a6bd31835d7ad58",
                        "name": "block/candle/ambient2",
                        "pitch": 1,
                        "volume": 1
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "cea8d7528eb11e1b804f43c1fc96db8e20a5270c",
                        "name": "block/candle/ambient3",
                        "pitch": 1,
                        "volume": 1
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "0a682ccf59ee55c4c318540cb1c1796b89544725",
                        "name": "block/candle/ambient4",
                        "pitch": 1,
                        "volume": 1
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "3b38ff0265ed81718749b343af3341c434cdeec2",
                        "name": "block/candle/ambient5",
                        "pitch": 1,
                        "volume": 1
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "006dada2a21571fc27e6a3781a8c245ea2f0a7fc",
                        "name": "block/candle/ambient6",
                        "pitch": 1,
                        "volume": 1
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "55a1980f05271af3adaef0a0de95c7643dc30398",
                        "name": "block/candle/ambient7",
                        "pitch": 1,
                        "volume": 1
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "3a5861e32a704c97e0ac1418a7e4bdd6dd7df9b7",
                        "name": "block/candle/ambient8",
                        "pitch": 1,
                        "volume": 1
                    },
                    {
                        "attenuation_distance": 3,
                        "hash": "ffa959046f30befad6490dde4bed82e81fed2c97",
                        "name": "block/candle/ambient9",
                        "pitch": 1,
                        "volume": 1
                    }
                ],
                "subtitle": "Candle crackles",
                "subtitle_key": "subtitles.block.candle.crackle"
            },
            null
        ],
        "block.candle.break": [
            {
                "field": "bT",
                "id": 149,
                "name": "block.candle.break",
                "sounds": [
                    {
                        "hash": "2af699202676471bec82845a4accbf9c1bb27244",
                        "name": "block/candle/break1"
                    },
                    {
                        "hash": "41c2c9723623b40a00511dc6263a7057c27b50dd",
                        "name": "block/candle/break2"
                    },
                    {
                        "hash": "201900635070f841f7de6c9575339ea219eb94c2",
                        "name": "block/candle/break3"
                    },
                    {
                        "hash": "f286216f203d49fa09567c41f6fcd2ad6e496d68",
                        "name": "block/candle/break4"
                    },
                    {
                        "hash": "a298905155e571b0175bd9fe1159b55a978f1161",
                        "name": "block/candle/break5"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            },
            null
        ],
        "block.candle.extinguish": [
            {
                "field": "bU",
                "id": 150,
                "name": "block.candle.extinguish",
                "sounds": [
                    {
                        "attenuation_distance": 8,
                        "hash": "f82b1154b34cd0a93533b3384d820db37174bc2e",
                        "name": "block/candle/extinguish1",
                        "pitch": 1,
                        "volume": 1
                    },
                    {
                        "attenuation_distance": 8,
                        "hash": "7fbf93d76f4ba55b144d902f50416e5e97ae3166",
                        "name": "block/candle/extinguish2",
                        "pitch": 1,
                        "volume": 1
                    },
                    {
                        "attenuation_distance": 8,
                        "hash": "44a9a68dd718bedbd11b1f895277b648c18c5e0d",
                        "name": "block/candle/extinguish3",
                        "pitch": 1,
                        "volume": 1
                    },
                    {
                        "attenuation_distance": 8,
                        "hash": "f82b1154b34cd0a93533b3384d820db37174bc2e",
                        "name": "block/candle/extinguish1",
                        "pitch": 0.9,
                        "volume": 1
                    },
                    {
                        "attenuation_distance": 8,
                        "hash": "7fbf93d76f4ba55b144d902f50416e5e97ae3166",
                        "name": "block/candle/extinguish2",
                        "pitch": 0.9,
                        "volume": 1
                    },
                    {
                        "attenuation_distance": 8,
                        "hash": "44a9a68dd718bedbd11b1f895277b648c18c5e0d",
                        "name": "block/candle/extinguish3",
                        "pitch": 0.9,
                        "volume": 1
                    },
                    {
                        "attenuation_distance": 8,
                        "hash": "f82b1154b34cd0a93533b3384d820db37174bc2e",
                        "name": "block/candle/extinguish1",
                        "pitch": 1.1,
                        "volume": 1
                    },
                    {
                        "attenuation_distance": 8,
                        "hash": "7fbf93d76f4ba55b144d902f50416e5e97ae3166",
                        "name": "block/candle/extinguish2",
                        "pitch": 1.1,
                        "volume": 1
                    },
                    {
                        "attenuation_distance": 8,
                        "hash": "44a9a68dd718bedbd11b1f895277b648c18c5e0d",
                        "name": "block/candle/extinguish3",
                        "pitch": 1.1,
                        "volume": 1
                    },
                    {
                        "attenuation_distance": 8,
                        "hash": "f82b1154b34cd0a93533b3384d820db37174bc2e",
                        "name": "block/candle/extinguish1",
                        "pitch": 0.9,
                        "volume": 0.9
                    },
                    {
                        "attenuation_distance": 8,
                        "hash": "7fbf93d76f4ba55b144d902f50416e5e97ae3166",
                        "name": "block/candle/extinguish2",
                        "pitch": 0.9,
                        "volume": 0.9
                    },
                    {
                        "attenuation_distance": 8,
                        "hash": "44a9a68dd718bedbd11b1f895277b648c18c5e0d",
                        "name": "block/candle/extinguish3",
                        "pitch": 0.9,
                        "volume": 0.9
                    },
                    {
                        "attenuation_distance": 8,
                        "hash": "f82b1154b34cd0a93533b3384d820db37174bc2e",
                        "name": "block/candle/extinguish1",
                        "pitch": 1.1,
                        "volume": 0.9
                    },
                    {
                        "attenuation_distance": 8,
                        "hash": "7fbf93d76f4ba55b144d902f50416e5e97ae3166",
                        "name": "block/candle/extinguish2",
                        "pitch": 1.1,
                        "volume": 0.9
                    },
                    {
                        "attenuation_distance": 8,
                        "hash": "44a9a68dd718bedbd11b1f895277b648c18c5e0d",
                        "name": "block/candle/extinguish3",
                        "pitch": 1.1,
                        "volume": 0.9
                    },
                    {
                        "attenuation_distance": 8,
                        "hash": "f82b1154b34cd0a93533b3384d820db37174bc2e",
                        "name": "block/candle/extinguish1",
                        "pitch": 1,
                        "volume": 0.9
                    },
                    {
                        "attenuation_distance": 8,
                        "hash": "7fbf93d76f4ba55b144d902f50416e5e97ae3166",
                        "name": "block/candle/extinguish2",
                        "pitch": 1,
                        "volume": 0.9
                    },
                    {
                        "attenuation_distance": 8,
                        "hash": "44a9a68dd718bedbd11b1f895277b648c18c5e0d",
                        "name": "block/candle/extinguish3",
                        "pitch": 1,
                        "volume": 0.9
                    }
                ],
                "subtitle": "Fire extinguished",
                "subtitle_key": "subtitles.block.fire.extinguish"
            },
            null
        ],
        "block.candle.fall": [
            {
                "field": "bV",
                "id": 151,
                "name": "block.candle.fall",
                "sounds": [
                    {
                        "hash": "b49422cc89451a32776aca99100835af78e0b21a",
                        "name": "block/candle/step1"
                    },
                    {
                        "hash": "a57fc0da90f0b4ff1389293d267a00c3d4d87c75",
                        "name": "block/candle/step2"
                    },
                    {
                        "hash": "f1f54f19def2ac455fefac893ec6673316d02367",
                        "name": "block/candle/step3"
                    },
                    {
                        "hash": "92072eae22082c0f22148a74fba68ae45a688bf5",
                        "name": "block/candle/step4"
                    },
                    {
                        "hash": "770fcb86fb8fef3c74f6f2822e8a815a7aebdb34",
                        "name": "block/candle/step5"
                    }
                ]
            },
            null
        ],
        "block.candle.hit": [
            {
                "field": "bW",
                "id": 152,
                "name": "block.candle.hit",
                "sounds": [
                    {
                        "hash": "b49422cc89451a32776aca99100835af78e0b21a",
                        "name": "block/candle/step1"
                    },
                    {
                        "hash": "a57fc0da90f0b4ff1389293d267a00c3d4d87c75",
                        "name": "block/candle/step2"
                    },
                    {
                        "hash": "f1f54f19def2ac455fefac893ec6673316d02367",
                        "name": "block/candle/step3"
                    },
                    {
                        "hash": "92072eae22082c0f22148a74fba68ae45a688bf5",
                        "name": "block/candle/step4"
                    },
                    {
                        "hash": "770fcb86fb8fef3c74f6f2822e8a815a7aebdb34",
                        "name": "block/candle/step5"
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            },
            null
        ],
        "block.candle.place": [
            {
                "field": "bX",
                "id": 153,
                "name": "block.candle.place",
                "sounds": [
                    {
                        "hash": "2af699202676471bec82845a4accbf9c1bb27244",
                        "name": "block/candle/break1"
                    },
                    {
                        "hash": "41c2c9723623b40a00511dc6263a7057c27b50dd",
                        "name": "block/candle/break2"
                    },
                    {
                        "hash": "201900635070f841f7de6c9575339ea219eb94c2",
                        "name": "block/candle/break3"
                    },
                    {
                        "hash": "f286216f203d49fa09567c41f6fcd2ad6e496d68",
                        "name": "block/candle/break4"
                    },
                    {
                        "hash": "a298905155e571b0175bd9fe1159b55a978f1161",
                        "name": "block/candle/break5"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            },
            null
        ],
        "block.candle.step": [
            {
                "field": "bY",
                "id": 154,
                "name": "block.candle.step",
                "sounds": [
                    {
                        "hash": "b49422cc89451a32776aca99100835af78e0b21a",
                        "name": "block/candle/step1"
                    },
                    {
                        "hash": "a57fc0da90f0b4ff1389293d267a00c3d4d87c75",
                        "name": "block/candle/step2"
                    },
                    {
                        "hash": "f1f54f19def2ac455fefac893ec6673316d02367",
                        "name": "block/candle/step3"
                    },
                    {
                        "hash": "92072eae22082c0f22148a74fba68ae45a688bf5",
                        "name": "block/candle/step4"
                    },
                    {
                        "hash": "770fcb86fb8fef3c74f6f2822e8a815a7aebdb34",
                        "name": "block/candle/step5"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            },
            null
        ],
        "block.chest.close": [
            {
                "field": "cn",
                "id": 169,
                "name": "block.chest.close",
                "sounds": [
                    {
                        "hash": "eddb25d126a93fd0dd26e0dd9ac1c0ef094b79f6",
                        "name": "block/chest/close"
                    },
                    {
                        "hash": "8524cf7e2b56d165a1ff6e3a219d3d8c406e90b3",
                        "name": "block/chest/close2"
                    },
                    {
                        "hash": "19786806146a50a06d8dbd36a033aefbb8fefd8a",
                        "name": "block/chest/close3"
                    }
                ],
                "subtitle": "Chest closes",
                "subtitle_key": "subtitles.block.chest.close"
            },
            {
                "field": "bE",
                "id": 134,
                "name": "block.chest.close",
                "sounds": [
                    {
                        "hash": "a7d0d6f761c9a647cc0273bc016f2772b85f6d88",
                        "name": "block/chest/close"
                    },
                    {
                        "hash": "eaa2cfc2ca71f219930cc496d5316853364d3623",
                        "name": "block/chest/close2"
                    },
                    {
                        "hash": "fda6f8d1f1daabad0fd78903cd3c4b366f77a8e5",
                        "name": "block/chest/close3"
                    }
                ],
                "subtitle": "Chest closes",
                "subtitle_key": "subtitles.block.chest.close"
            }
        ],
        "block.copper.break": [
            {
                "field": "cM",
                "id": 194,
                "name": "block.copper.break",
                "sounds": [
                    {
                        "hash": "ea1c8d3e12caad4fffae0d696e12ea35863a7f0e",
                        "name": "block/copper/break1"
                    },
                    {
                        "hash": "747e06241f0959846b50cd4dd2309903f57e694f",
                        "name": "block/copper/break2"
                    },
                    {
                        "hash": "4a17b1adbdd910de67e2d812fcbad87f00a69912",
                        "name": "block/copper/break3"
                    },
                    {
                        "hash": "b721be4b544ac26e19a254830ffb6954cb40f67d",
                        "name": "block/copper/break4"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            },
            null
        ],
        "block.copper.fall": [
            {
                "field": "cQ",
                "id": 198,
                "name": "block.copper.fall",
                "sounds": [
                    {
                        "hash": "a37ad944694b98075cb5fc00b12da6bbcc600fc5",
                        "name": "block/copper/step1"
                    },
                    {
                        "hash": "d87ff5f9736c6b86f3445faccfdd20c595eadb32",
                        "name": "block/copper/step2"
                    },
                    {
                        "hash": "0abfb8f19f7bdc0dd211f4a46e392ca1dac2d531",
                        "name": "block/copper/step3"
                    },
                    {
                        "hash": "ce467337da42a96332befcdf961e2981e1c61682",
                        "name": "block/copper/step4"
                    },
                    {
                        "hash": "85ac3c677b8cba25063bf0c9575eea4dcd669d8e",
                        "name": "block/copper/step5"
                    },
                    {
                        "hash": "63417f028c4720bd91b1974ef67c93546ac4f3b6",
                        "name": "block/copper/step6"
                    }
                ]
            },
            null
        ],
        "block.copper.hit": [
            {
                "field": "cP",
                "id": 197,
                "name": "block.copper.hit",
                "sounds": [
                    {
                        "hash": "a37ad944694b98075cb5fc00b12da6bbcc600fc5",
                        "name": "block/copper/step1"
                    },
                    {
                        "hash": "d87ff5f9736c6b86f3445faccfdd20c595eadb32",
                        "name": "block/copper/step2"
                    },
                    {
                        "hash": "0abfb8f19f7bdc0dd211f4a46e392ca1dac2d531",
                        "name": "block/copper/step3"
                    },
                    {
                        "hash": "ce467337da42a96332befcdf961e2981e1c61682",
                        "name": "block/copper/step4"
                    },
                    {
                        "hash": "85ac3c677b8cba25063bf0c9575eea4dcd669d8e",
                        "name": "block/copper/step5"
                    },
                    {
                        "hash": "63417f028c4720bd91b1974ef67c93546ac4f3b6",
                        "name": "block/copper/step6"
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            },
            null
        ],
        "block.copper.place": [
            {
                "field": "cO",
                "id": 196,
                "name": "block.copper.place",
                "sounds": [
                    {
                        "hash": "ea1c8d3e12caad4fffae0d696e12ea35863a7f0e",
                        "name": "block/copper/break1"
                    },
                    {
                        "hash": "747e06241f0959846b50cd4dd2309903f57e694f",
                        "name": "block/copper/break2"
                    },
                    {
                        "hash": "4a17b1adbdd910de67e2d812fcbad87f00a69912",
                        "name": "block/copper/break3"
                    },
                    {
                        "hash": "b721be4b544ac26e19a254830ffb6954cb40f67d",
                        "name": "block/copper/break4"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            },
            null
        ],
        "block.copper.step": [
            {
                "field": "cN",
                "id": 195,
                "name": "block.copper.step",
                "sounds": [
                    {
                        "hash": "a37ad944694b98075cb5fc00b12da6bbcc600fc5",
                        "name": "block/copper/step1"
                    },
                    {
                        "hash": "d87ff5f9736c6b86f3445faccfdd20c595eadb32",
                        "name": "block/copper/step2"
                    },
                    {
                        "hash": "0abfb8f19f7bdc0dd211f4a46e392ca1dac2d531",
                        "name": "block/copper/step3"
                    },
                    {
                        "hash": "ce467337da42a96332befcdf961e2981e1c61682",
                        "name": "block/copper/step4"
                    },
                    {
                        "hash": "85ac3c677b8cba25063bf0c9575eea4dcd669d8e",
                        "name": "block/copper/step5"
                    },
                    {
                        "hash": "63417f028c4720bd91b1974ef67c93546ac4f3b6",
                        "name": "block/copper/step6"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            },
            null
        ],
        "block.dripstone_block.break": [
            {
                "field": "dH",
                "id": 241,
                "name": "block.dripstone_block.break",
                "sounds": [
                    {
                        "hash": "a2c219ad41db471213dd0d2306445d28bfa0151d",
                        "name": "block/dripstone/break1"
                    },
                    {
                        "hash": "7d4b4cf1f409ea746eec8d2066d262545469960d",
                        "name": "block/dripstone/break2"
                    },
                    {
                        "hash": "6c40ef98636487a1b7efb487e1615ebaf91928cd",
                        "name": "block/dripstone/break3"
                    },
                    {
                        "hash": "0e58e087ad105373cf75ca8043c567e88aeb048e",
                        "name": "block/dripstone/break4"
                    },
                    {
                        "hash": "0e497ca437eeac5cee56a91c43da2631092e7477",
                        "name": "block/dripstone/break5"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            },
            null
        ],
        "block.dripstone_block.fall": [
            {
                "field": "dL",
                "id": 245,
                "name": "block.dripstone_block.fall",
                "sounds": [
                    {
                        "hash": "2c114bff9b73abccb54f0aec7e09ad1ff4cb4dc6",
                        "name": "block/dripstone/step1"
                    },
                    {
                        "hash": "3a9a56e15aeb25ad049f0d64a343fabcc3ce4de0",
                        "name": "block/dripstone/step2"
                    },
                    {
                        "hash": "c13629f57d801f0938ceae15ec152ff79cc3a6a4",
                        "name": "block/dripstone/step3"
                    },
                    {
                        "hash": "67a35cb0a87ef67f252330d7b5b84df4e433fb59",
                        "name": "block/dripstone/step4"
                    },
                    {
                        "hash": "d71243817c63f4c27af938ec8750cf84f0531b06",
                        "name": "block/dripstone/step5"
                    },
                    {
                        "hash": "f7cd826d43ac13e7e84befb58a9ca42acef68402",
                        "name": "block/dripstone/step6"
                    }
                ]
            },
            null
        ],
        "block.dripstone_block.hit": [
            {
                "field": "dK",
                "id": 244,
                "name": "block.dripstone_block.hit",
                "sounds": [
                    {
                        "hash": "2c114bff9b73abccb54f0aec7e09ad1ff4cb4dc6",
                        "name": "block/dripstone/step1"
                    },
                    {
                        "hash": "3a9a56e15aeb25ad049f0d64a343fabcc3ce4de0",
                        "name": "block/dripstone/step2"
                    },
                    {
                        "hash": "c13629f57d801f0938ceae15ec152ff79cc3a6a4",
                        "name": "block/dripstone/step3"
                    },
                    {
                        "hash": "67a35cb0a87ef67f252330d7b5b84df4e433fb59",
                        "name": "block/dripstone/step4"
                    },
                    {
                        "hash": "d71243817c63f4c27af938ec8750cf84f0531b06",
                        "name": "block/dripstone/step5"
                    },
                    {
                        "hash": "f7cd826d43ac13e7e84befb58a9ca42acef68402",
                        "name": "block/dripstone/step6"
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            },
            null
        ],
        "block.dripstone_block.place": [
            {
                "field": "dJ",
                "id": 243,
                "name": "block.dripstone_block.place",
                "sounds": [
                    {
                        "hash": "a2c219ad41db471213dd0d2306445d28bfa0151d",
                        "name": "block/dripstone/break1"
                    },
                    {
                        "hash": "7d4b4cf1f409ea746eec8d2066d262545469960d",
                        "name": "block/dripstone/break2"
                    },
                    {
                        "hash": "6c40ef98636487a1b7efb487e1615ebaf91928cd",
                        "name": "block/dripstone/break3"
                    },
                    {
                        "hash": "0e58e087ad105373cf75ca8043c567e88aeb048e",
                        "name": "block/dripstone/break4"
                    },
                    {
                        "hash": "0e497ca437eeac5cee56a91c43da2631092e7477",
                        "name": "block/dripstone/break5"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            },
            null
        ],
        "block.dripstone_block.step": [
            {
                "field": "dI",
                "id": 242,
                "name": "block.dripstone_block.step",
                "sounds": [
                    {
                        "hash": "2c114bff9b73abccb54f0aec7e09ad1ff4cb4dc6",
                        "name": "block/dripstone/step1"
                    },
                    {
                        "hash": "3a9a56e15aeb25ad049f0d64a343fabcc3ce4de0",
                        "name": "block/dripstone/step2"
                    },
                    {
                        "hash": "c13629f57d801f0938ceae15ec152ff79cc3a6a4",
                        "name": "block/dripstone/step3"
                    },
                    {
                        "hash": "67a35cb0a87ef67f252330d7b5b84df4e433fb59",
                        "name": "block/dripstone/step4"
                    },
                    {
                        "hash": "d71243817c63f4c27af938ec8750cf84f0531b06",
                        "name": "block/dripstone/step5"
                    },
                    {
                        "hash": "f7cd826d43ac13e7e84befb58a9ca42acef68402",
                        "name": "block/dripstone/step6"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            },
            null
        ],
        "block.large_amethyst_bud.break": [
            {
                "field": "hZ",
                "id": 467,
                "name": "block.large_amethyst_bud.break",
                "sounds": [
                    {
                        "hash": "689be5af8ea7328e8e1b664561efff236ab87aee",
                        "name": "block/amethyst_cluster/break1",
                        "pitch": 0.85,
                        "volume": 0.7
                    },
                    {
                        "hash": "abaa4fb5b56b9110a2de7733d291338a6b0d4c3e",
                        "name": "block/amethyst_cluster/break2",
                        "pitch": 0.85,
                        "volume": 0.7
                    },
                    {
                        "hash": "a01ead89927917ea1817990c645c6fcee2018c8a",
                        "name": "block/amethyst_cluster/break3",
                        "pitch": 0.85,
                        "volume": 0.7
                    },
                    {
                        "hash": "c4380743ab08e60bafad7ff0dfd2aeb281fdfc3a",
                        "name": "block/amethyst_cluster/break4",
                        "pitch": 0.85,
                        "volume": 0.7
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            },
            null
        ],
        "block.large_amethyst_bud.place": [
            {
                "field": "ia",
                "id": 468,
                "name": "block.large_amethyst_bud.place",
                "sounds": [
                    {
                        "hash": "f57c74bb3b583bbbbb78529203ff8dee72f1052f",
                        "name": "block/amethyst_cluster/place1",
                        "volume": 0.75
                    },
                    {
                        "hash": "b57f215084d00503c884c327f2617ce563bf2e3c",
                        "name": "block/amethyst_cluster/place2",
                        "volume": 0.75
                    },
                    {
                        "hash": "4af9c72df6f67060c0dbff10feeb9aa13767b560",
                        "name": "block/amethyst_cluster/place3",
                        "volume": 0.75
                    },
                    {
                        "hash": "7f31942ce140138141d4873ff36acd9a51f4f496",
                        "name": "block/amethyst_cluster/place4",
                        "volume": 0.75
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            },
            null
        ],
        "block.medium_amethyst_bud.break": [
            {
                "field": "iG",
                "id": 500,
                "name": "block.medium_amethyst_bud.break",
                "sounds": [
                    {
                        "hash": "689be5af8ea7328e8e1b664561efff236ab87aee",
                        "name": "block/amethyst_cluster/break1",
                        "pitch": 0.95,
                        "volume": 0.55
                    },
                    {
                        "hash": "abaa4fb5b56b9110a2de7733d291338a6b0d4c3e",
                        "name": "block/amethyst_cluster/break2",
                        "pitch": 0.95,
                        "volume": 0.55
                    },
                    {
                        "hash": "a01ead89927917ea1817990c645c6fcee2018c8a",
                        "name": "block/amethyst_cluster/break3",
                        "pitch": 0.95,
                        "volume": 0.55
                    },
                    {
                        "hash": "c4380743ab08e60bafad7ff0dfd2aeb281fdfc3a",
                        "name": "block/amethyst_cluster/break4",
                        "pitch": 0.95,
                        "volume": 0.55
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            },
            null
        ],
        "block.medium_amethyst_bud.place": [
            {
                "field": "iH",
                "id": 501,
                "name": "block.medium_amethyst_bud.place",
                "sounds": [
                    {
                        "hash": "f57c74bb3b583bbbbb78529203ff8dee72f1052f",
                        "name": "block/amethyst_cluster/place1",
                        "pitch": 1.1,
                        "volume": 0.5
                    },
                    {
                        "hash": "b57f215084d00503c884c327f2617ce563bf2e3c",
                        "name": "block/amethyst_cluster/place2",
                        "pitch": 1.1,
                        "volume": 0.5
                    },
                    {
                        "hash": "4af9c72df6f67060c0dbff10feeb9aa13767b560",
                        "name": "block/amethyst_cluster/place3",
                        "pitch": 1.1,
                        "volume": 0.5
                    },
                    {
                        "hash": "7f31942ce140138141d4873ff36acd9a51f4f496",
                        "name": "block/amethyst_cluster/place4",
                        "pitch": 1.1,
                        "volume": 0.5
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            },
            null
        ],
        "block.pointed_dripstone.break": [
            {
                "field": "dM",
                "id": 246,
                "name": "block.pointed_dripstone.break",
                "sounds": [
                    {
                        "hash": "a2c219ad41db471213dd0d2306445d28bfa0151d",
                        "name": "block/dripstone/break1"
                    },
                    {
                        "hash": "7d4b4cf1f409ea746eec8d2066d262545469960d",
                        "name": "block/dripstone/break2"
                    },
                    {
                        "hash": "6c40ef98636487a1b7efb487e1615ebaf91928cd",
                        "name": "block/dripstone/break3"
                    },
                    {
                        "hash": "0e58e087ad105373cf75ca8043c567e88aeb048e",
                        "name": "block/dripstone/break4"
                    },
                    {
                        "hash": "0e497ca437eeac5cee56a91c43da2631092e7477",
                        "name": "block/dripstone/break5"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            },
            null
        ],
        "block.pointed_dripstone.drip_lava": [
            {
                "field": "dS",
                "id": 252,
                "name": "block.pointed_dripstone.drip_lava",
                "sounds": [
                    {
                        "hash": "3b6a7430672f147418d8aca9e8675d8e0e177b17",
                        "name": "block/pointed_dripstone/drip_lava1"
                    },
                    {
                        "hash": "bb1a4063cc55c6ddfab3fe6a68e60571bd144bc3",
                        "name": "block/pointed_dripstone/drip_lava2"
                    },
                    {
                        "hash": "bb1811bfcbbd11d511e0441e0e0452890a70d649",
                        "name": "block/pointed_dripstone/drip_lava3"
                    },
                    {
                        "hash": "050ee8116a49e7788e4191a22417b59b4eba8456",
                        "name": "block/pointed_dripstone/drip_lava4"
                    },
                    {
                        "hash": "ec4fae0ac795d755a69ce34557a558389f3ea7f7",
                        "name": "block/pointed_dripstone/drip_lava5"
                    },
                    {
                        "hash": "438be9806f4c2659055da51cdc593ab859a44492",
                        "name": "block/pointed_dripstone/drip_lava6"
                    }
                ],
                "subtitle": "Lava drips",
                "subtitle_key": "subtitles.block.pointed_dripstone.drip_lava"
            },
            null
        ],
        "block.pointed_dripstone.drip_lava_into_cauldron": [
            {
                "field": "dU",
                "id": 254,
                "name": "block.pointed_dripstone.drip_lava_into_cauldron",
                "sounds": [
                    {
                        "hash": "fec5940d535308fc8bf09a2e87bd604084e5c498",
                        "name": "block/pointed_dripstone/drip_lava_cauldron1"
                    },
                    {
                        "hash": "d3f4bded5a3b767734d44ccb005a65fecbe1c2b7",
                        "name": "block/pointed_dripstone/drip_lava_cauldron2"
                    },
                    {
                        "hash": "49a757b3ffaf7217809c553ef71b3f5386ff4289",
                        "name": "block/pointed_dripstone/drip_lava_cauldron3"
                    },
                    {
                        "hash": "e45eb4b5de8e5e7421e7dc5b5678ff45287c2caa",
                        "name": "block/pointed_dripstone/drip_lava_cauldron4"
                    }
                ],
                "subtitle": "Lava drips into cauldron",
                "subtitle_key": "subtitles.block.pointed_dripstone.drip_lava_into_cauldron"
            },
            null
        ],
        "block.pointed_dripstone.drip_water": [
            {
                "field": "dT",
                "id": 253,
                "name": "block.pointed_dripstone.drip_water",
                "sounds": [
                    {
                        "hash": "7308c68b2de502839f76488962bfd9c2d23603eb",
                        "name": "block/pointed_dripstone/drip_water1"
                    },
                    {
                        "hash": "f8f9052b3d06d7d1cc7a3820599fb3f0c9c0cadd",
                        "name": "block/pointed_dripstone/drip_water2"
                    },
                    {
                        "hash": "dfef8a5952395442311141496b6e780b1e12f4e2",
                        "name": "block/pointed_dripstone/drip_water3"
                    },
                    {
                        "hash": "9f3f75fcb30a6a033d672b9740ebe060c22965f1",
                        "name": "block/pointed_dripstone/drip_water4"
                    },
                    {
                        "hash": "9b92e54ca223e7026cfed9bcfa1c29b85555feb0",
                        "name": "block/pointed_dripstone/drip_water5"
                    },
                    {
                        "hash": "bbcda1114481f7f88f17af5ad65125972d2c44e6",
                        "name": "block/pointed_dripstone/drip_water6"
                    },
                    {
                        "hash": "f2c768a8566275d0e81d9e81955264110fc5e51c",
                        "name": "block/pointed_dripstone/drip_water7"
                    },
                    {
                        "hash": "5113d371aa9886c4e2804be55e30fc2ec16d3dcc",
                        "name": "block/pointed_dripstone/drip_water8"
                    },
                    {
                        "hash": "7d8ef0a1daf90b519666eab346e841794f167afe",
                        "name": "block/pointed_dripstone/drip_water9"
                    },
                    {
                        "hash": "4e408f2dff4386951d1240c316a975c84918e92d",
                        "name": "block/pointed_dripstone/drip_water10"
                    },
                    {
                        "hash": "ff76b763b28de8bdd0cba777213a05d0e365faba",
                        "name": "block/pointed_dripstone/drip_water11"
                    },
                    {
                        "hash": "c670a64d158a640ab1906772ff653ce55807ba10",
                        "name": "block/pointed_dripstone/drip_water12"
                    },
                    {
                        "hash": "2599920592fc8357252ac10b1cc8ff29346b0ede",
                        "name": "block/pointed_dripstone/drip_water13"
                    },
                    {
                        "hash": "2e630d9df93d600d90dca070c96e3aa89237afa9",
                        "name": "block/pointed_dripstone/drip_water14"
                    },
                    {
                        "hash": "8045b5c48dc9a1e23a420f0f3c7062d7946f2866",
                        "name": "block/pointed_dripstone/drip_water15"
                    }
                ],
                "subtitle": "Water drips",
                "subtitle_key": "subtitles.block.pointed_dripstone.drip_water"
            },
            null
        ],
        "block.pointed_dripstone.drip_water_into_cauldron": [
            {
                "field": "dV",
                "id": 255,
                "name": "block.pointed_dripstone.drip_water_into_cauldron",
                "sounds": [
                    {
                        "hash": "5f103967783fc87911fb2b4786d3b52510b0831c",
                        "name": "block/pointed_dripstone/drip_water_cauldron1"
                    },
                    {
                        "hash": "b0ee6371a3841e25d8141be3df08b95e55126f32",
                        "name": "block/pointed_dripstone/drip_water_cauldron2"
                    },
                    {
                        "hash": "c6d9302b7b3da70c0e7d7378a4ceb01ccbd2685c",
                        "name": "block/pointed_dripstone/drip_water_cauldron3"
                    },
                    {
                        "hash": "2e711c75eb8ab3440d0523364bd12947f858723a",
                        "name": "block/pointed_dripstone/drip_water_cauldron4"
                    },
                    {
                        "hash": "bf3ecbfc97a17c2f5e0e5f476053570afb0b1ed3",
                        "name": "block/pointed_dripstone/drip_water_cauldron5"
                    },
                    {
                        "hash": "09da9ef8864bb14ea888807a356710723b6bd7c7",
                        "name": "block/pointed_dripstone/drip_water_cauldron6"
                    },
                    {
                        "hash": "bfb09a99afd7e018e9285e36ad5d7504c684c2e8",
                        "name": "block/pointed_dripstone/drip_water_cauldron7"
                    },
                    {
                        "hash": "bdda3824c586d34156daccf5c4a76c0cb54221a6",
                        "name": "block/pointed_dripstone/drip_water_cauldron8"
                    }
                ],
                "subtitle": "Water drips into cauldron",
                "subtitle_key": "subtitles.block.pointed_dripstone.drip_water_into_cauldron"
            },
            null
        ],
        "block.pointed_dripstone.fall": [
            {
                "field": "dQ",
                "id": 250,
                "name": "block.pointed_dripstone.fall",
                "sounds": [
                    {
                        "hash": "2c114bff9b73abccb54f0aec7e09ad1ff4cb4dc6",
                        "name": "block/dripstone/step1"
                    },
                    {
                        "hash": "3a9a56e15aeb25ad049f0d64a343fabcc3ce4de0",
                        "name": "block/dripstone/step2"
                    },
                    {
                        "hash": "c13629f57d801f0938ceae15ec152ff79cc3a6a4",
                        "name": "block/dripstone/step3"
                    },
                    {
                        "hash": "67a35cb0a87ef67f252330d7b5b84df4e433fb59",
                        "name": "block/dripstone/step4"
                    },
                    {
                        "hash": "d71243817c63f4c27af938ec8750cf84f0531b06",
                        "name": "block/dripstone/step5"
                    },
                    {
                        "hash": "f7cd826d43ac13e7e84befb58a9ca42acef68402",
                        "name": "block/dripstone/step6"
                    }
                ]
            },
            null
        ],
        "block.pointed_dripstone.hit": [
            {
                "field": "dP",
                "id": 249,
                "name": "block.pointed_dripstone.hit",
                "sounds": [
                    {
                        "hash": "2c114bff9b73abccb54f0aec7e09ad1ff4cb4dc6",
                        "name": "block/dripstone/step1"
                    },
                    {
                        "hash": "3a9a56e15aeb25ad049f0d64a343fabcc3ce4de0",
                        "name": "block/dripstone/step2"
                    },
                    {
                        "hash": "c13629f57d801f0938ceae15ec152ff79cc3a6a4",
                        "name": "block/dripstone/step3"
                    },
                    {
                        "hash": "67a35cb0a87ef67f252330d7b5b84df4e433fb59",
                        "name": "block/dripstone/step4"
                    },
                    {
                        "hash": "d71243817c63f4c27af938ec8750cf84f0531b06",
                        "name": "block/dripstone/step5"
                    },
                    {
                        "hash": "f7cd826d43ac13e7e84befb58a9ca42acef68402",
                        "name": "block/dripstone/step6"
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            },
            null
        ],
        "block.pointed_dripstone.land": [
            {
                "field": "dR",
                "id": 251,
                "name": "block.pointed_dripstone.land",
                "sounds": [
                    {
                        "hash": "f347a46782e26249236fe5b0fe217d83c5e599ce",
                        "name": "block/pointed_dripstone/land1"
                    },
                    {
                        "hash": "cb64d40a6162f3115f40267f7d0fc3b1b50fea23",
                        "name": "block/pointed_dripstone/land2"
                    },
                    {
                        "hash": "aad67db8a70fbb9a44c9536a578f2ec408ebdde2",
                        "name": "block/pointed_dripstone/land3"
                    },
                    {
                        "hash": "5924db8c7a85e9eb03cc3bb2b2c297ef5930e521",
                        "name": "block/pointed_dripstone/land4"
                    },
                    {
                        "hash": "99c880b4441eec0e6ed25d022025b1bb7b9fd224",
                        "name": "block/pointed_dripstone/land5"
                    }
                ]
            },
            null
        ],
        "block.pointed_dripstone.place": [
            {
                "field": "dO",
                "id": 248,
                "name": "block.pointed_dripstone.place",
                "sounds": [
                    {
                        "hash": "a2c219ad41db471213dd0d2306445d28bfa0151d",
                        "name": "block/dripstone/break1"
                    },
                    {
                        "hash": "7d4b4cf1f409ea746eec8d2066d262545469960d",
                        "name": "block/dripstone/break2"
                    },
                    {
                        "hash": "6c40ef98636487a1b7efb487e1615ebaf91928cd",
                        "name": "block/dripstone/break3"
                    },
                    {
                        "hash": "0e58e087ad105373cf75ca8043c567e88aeb048e",
                        "name": "block/dripstone/break4"
                    },
                    {
                        "hash": "0e497ca437eeac5cee56a91c43da2631092e7477",
                        "name": "block/dripstone/break5"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            },
            null
        ],
        "block.pointed_dripstone.step": [
            {
                "field": "dN",
                "id": 247,
                "name": "block.pointed_dripstone.step",
                "sounds": [
                    {
                        "hash": "2c114bff9b73abccb54f0aec7e09ad1ff4cb4dc6",
                        "name": "block/dripstone/step1"
                    },
                    {
                        "hash": "3a9a56e15aeb25ad049f0d64a343fabcc3ce4de0",
                        "name": "block/dripstone/step2"
                    },
                    {
                        "hash": "c13629f57d801f0938ceae15ec152ff79cc3a6a4",
                        "name": "block/dripstone/step3"
                    },
                    {
                        "hash": "67a35cb0a87ef67f252330d7b5b84df4e433fb59",
                        "name": "block/dripstone/step4"
                    },
                    {
                        "hash": "d71243817c63f4c27af938ec8750cf84f0531b06",
                        "name": "block/dripstone/step5"
                    },
                    {
                        "hash": "f7cd826d43ac13e7e84befb58a9ca42acef68402",
                        "name": "block/dripstone/step6"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            },
            null
        ],
        "block.powder_snow.break": [
            {
                "field": "mZ",
                "id": 727,
                "name": "block.powder_snow.break",
                "sounds": [
                    {
                        "hash": "1e5627cdb081851d666923bb8aa92a29ca56dc36",
                        "name": "block/powder_snow/break1"
                    },
                    {
                        "hash": "9929be86fe1606d155e965d70c387f2b2cb8a326",
                        "name": "block/powder_snow/break2"
                    },
                    {
                        "hash": "b7e64d990e44daa87fc57808627c3f116ad12868",
                        "name": "block/powder_snow/break3"
                    },
                    {
                        "hash": "638b448f4f4298cdb65fe8d4b99fd90daaa672b1",
                        "name": "block/powder_snow/break4"
                    },
                    {
                        "hash": "0027d19bb0cd9c914d3ac148aeee6316d9786341",
                        "name": "block/powder_snow/break5"
                    },
                    {
                        "hash": "2ed2ba2403409c9eedda1b3bcbf49595e40f237a",
                        "name": "block/powder_snow/break6"
                    },
                    {
                        "hash": "50775dd4c91553d43b7c9c1d409002f3ee582354",
                        "name": "block/powder_snow/break7"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            },
            null
        ],
        "block.powder_snow.fall": [
            {
                "field": "na",
                "id": 728,
                "name": "block.powder_snow.fall",
                "sounds": [
                    {
                        "hash": "d86bd0068709f9bacdb694a1ea3f1b321dbd4e44",
                        "name": "block/powder_snow/step1"
                    },
                    {
                        "hash": "fd5a0ea09e1643206c9a33592440e0f87a556455",
                        "name": "block/powder_snow/step2"
                    },
                    {
                        "hash": "34bd6800e8fc87778b8aed0e3616566ad51d7ff5",
                        "name": "block/powder_snow/step3"
                    },
                    {
                        "hash": "d06ea8fa95da528b0113f6ad0ff50bc0a5d49cd9",
                        "name": "block/powder_snow/step4"
                    },
                    {
                        "hash": "f857fcb908528ca66c51b4b8608d7c76b178cb92",
                        "name": "block/powder_snow/step5"
                    },
                    {
                        "hash": "5628a7a3a5ce397716dc8f4bab5d2a998af0eff0",
                        "name": "block/powder_snow/step6"
                    },
                    {
                        "hash": "015f37d3f2adec2f62dfea46fa1cb9dc1262900d",
                        "name": "block/powder_snow/step7"
                    },
                    {
                        "hash": "4556ec1597a31dd58289580a933cbaa9375ad272",
                        "name": "block/powder_snow/step8"
                    },
                    {
                        "hash": "99edd889de4dabb9f4b7b92f548dfceb2c7d16c6",
                        "name": "block/powder_snow/step9"
                    },
                    {
                        "hash": "192e2f57b6d878465f7baa500493fb11a5ccb220",
                        "name": "block/powder_snow/step10"
                    }
                ]
            },
            null
        ],
        "block.powder_snow.hit": [
            {
                "field": "nb",
                "id": 729,
                "name": "block.powder_snow.hit",
                "sounds": [
                    {
                        "hash": "d86bd0068709f9bacdb694a1ea3f1b321dbd4e44",
                        "name": "block/powder_snow/step1",
                        "pitch": 1.3,
                        "volume": 0.83
                    },
                    {
                        "hash": "fd5a0ea09e1643206c9a33592440e0f87a556455",
                        "name": "block/powder_snow/step2",
                        "pitch": 1.3,
                        "volume": 0.83
                    },
                    {
                        "hash": "34bd6800e8fc87778b8aed0e3616566ad51d7ff5",
                        "name": "block/powder_snow/step3",
                        "pitch": 1.3,
                        "volume": 0.83
                    },
                    {
                        "hash": "d06ea8fa95da528b0113f6ad0ff50bc0a5d49cd9",
                        "name": "block/powder_snow/step4",
                        "pitch": 1.3,
                        "volume": 0.83
                    },
                    {
                        "hash": "f857fcb908528ca66c51b4b8608d7c76b178cb92",
                        "name": "block/powder_snow/step5",
                        "pitch": 1.3,
                        "volume": 0.83
                    },
                    {
                        "hash": "5628a7a3a5ce397716dc8f4bab5d2a998af0eff0",
                        "name": "block/powder_snow/step6",
                        "pitch": 1.3,
                        "volume": 0.83
                    },
                    {
                        "hash": "015f37d3f2adec2f62dfea46fa1cb9dc1262900d",
                        "name": "block/powder_snow/step7",
                        "pitch": 1.3,
                        "volume": 0.83
                    },
                    {
                        "hash": "4556ec1597a31dd58289580a933cbaa9375ad272",
                        "name": "block/powder_snow/step8",
                        "pitch": 1.3,
                        "volume": 0.83
                    },
                    {
                        "hash": "99edd889de4dabb9f4b7b92f548dfceb2c7d16c6",
                        "name": "block/powder_snow/step9",
                        "pitch": 1.3,
                        "volume": 0.83
                    },
                    {
                        "hash": "192e2f57b6d878465f7baa500493fb11a5ccb220",
                        "name": "block/powder_snow/step10",
                        "pitch": 1.3,
                        "volume": 0.83
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            },
            null
        ],
        "block.powder_snow.place": [
            {
                "field": "nc",
                "id": 730,
                "name": "block.powder_snow.place",
                "sounds": [
                    {
                        "hash": "1e5627cdb081851d666923bb8aa92a29ca56dc36",
                        "name": "block/powder_snow/break1"
                    },
                    {
                        "hash": "9929be86fe1606d155e965d70c387f2b2cb8a326",
                        "name": "block/powder_snow/break2"
                    },
                    {
                        "hash": "b7e64d990e44daa87fc57808627c3f116ad12868",
                        "name": "block/powder_snow/break3"
                    },
                    {
                        "hash": "638b448f4f4298cdb65fe8d4b99fd90daaa672b1",
                        "name": "block/powder_snow/break4"
                    },
                    {
                        "hash": "0027d19bb0cd9c914d3ac148aeee6316d9786341",
                        "name": "block/powder_snow/break5"
                    },
                    {
                        "hash": "2ed2ba2403409c9eedda1b3bcbf49595e40f237a",
                        "name": "block/powder_snow/break6"
                    },
                    {
                        "hash": "50775dd4c91553d43b7c9c1d409002f3ee582354",
                        "name": "block/powder_snow/break7"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            },
            null
        ],
        "block.powder_snow.step": [
            {
                "field": "nd",
                "id": 731,
                "name": "block.powder_snow.step",
                "sounds": [
                    {
                        "hash": "d86bd0068709f9bacdb694a1ea3f1b321dbd4e44",
                        "name": "block/powder_snow/step1"
                    },
                    {
                        "hash": "fd5a0ea09e1643206c9a33592440e0f87a556455",
                        "name": "block/powder_snow/step2"
                    },
                    {
                        "hash": "34bd6800e8fc87778b8aed0e3616566ad51d7ff5",
                        "name": "block/powder_snow/step3"
                    },
                    {
                        "hash": "d06ea8fa95da528b0113f6ad0ff50bc0a5d49cd9",
                        "name": "block/powder_snow/step4"
                    },
                    {
                        "hash": "f857fcb908528ca66c51b4b8608d7c76b178cb92",
                        "name": "block/powder_snow/step5"
                    },
                    {
                        "hash": "5628a7a3a5ce397716dc8f4bab5d2a998af0eff0",
                        "name": "block/powder_snow/step6"
                    },
                    {
                        "hash": "015f37d3f2adec2f62dfea46fa1cb9dc1262900d",
                        "name": "block/powder_snow/step7"
                    },
                    {
                        "hash": "4556ec1597a31dd58289580a933cbaa9375ad272",
                        "name": "block/powder_snow/step8"
                    },
                    {
                        "hash": "99edd889de4dabb9f4b7b92f548dfceb2c7d16c6",
                        "name": "block/powder_snow/step9"
                    },
                    {
                        "hash": "192e2f57b6d878465f7baa500493fb11a5ccb220",
                        "name": "block/powder_snow/step10"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            },
            null
        ],
        "block.sculk_sensor.break": [
            {
                "field": "of",
                "id": 785,
                "name": "block.sculk_sensor.break",
                "sounds": [
                    {
                        "hash": "6cd0ca85879d0ff4e81ca032f788c50094f67c1f",
                        "name": "block/sculk_sensor/break1",
                        "pitch": 1.2,
                        "volume": 0.9
                    },
                    {
                        "hash": "87ce1f5ccb92dd22d826637deaa1bae2b7e2244e",
                        "name": "block/sculk_sensor/break2",
                        "pitch": 1.2,
                        "volume": 0.9
                    },
                    {
                        "hash": "0d1862217e8aa9f56768053fa2dabb7956ba9b3a",
                        "name": "block/sculk_sensor/break3",
                        "pitch": 1.2,
                        "volume": 0.9
                    },
                    {
                        "hash": "a0d4e9ee0c1a5e3655c0d4b1671f489156ae3190",
                        "name": "block/sculk_sensor/break4",
                        "pitch": 1.2,
                        "volume": 0.9
                    },
                    {
                        "hash": "5b5b74b0cd579484d68b432ce9ae119f60dfdda2",
                        "name": "block/sculk_sensor/break5",
                        "pitch": 1.2,
                        "volume": 0.9
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            },
            null
        ],
        "block.sculk_sensor.clicking": [
            {
                "field": "od",
                "id": 783,
                "name": "block.sculk_sensor.clicking",
                "sounds": [
                    {
                        "hash": "1b5871a3af4dc425f20f9c1e06297f5fff2f3545",
                        "name": "block/sculk_sensor/sculk_clicking1",
                        "volume": 0.73
                    },
                    {
                        "hash": "ae5309997bb45581abda6f80b78c77648cef9313",
                        "name": "block/sculk_sensor/sculk_clicking2",
                        "volume": 0.73
                    },
                    {
                        "hash": "cba537acd887eb709d3fb44ff11dd2a370f64dc6",
                        "name": "block/sculk_sensor/sculk_clicking3",
                        "volume": 0.73
                    },
                    {
                        "hash": "0350aeae0132a9a0b08532250861fbe2208d9f78",
                        "name": "block/sculk_sensor/sculk_clicking4",
                        "volume": 0.73
                    },
                    {
                        "hash": "cd39ba3ef95ea55ccf82a164485fecab65f3cb69",
                        "name": "block/sculk_sensor/sculk_clicking5",
                        "volume": 0.73
                    },
                    {
                        "hash": "9c137787095596d770aa3e4f0fe4f9de1ed0b635",
                        "name": "block/sculk_sensor/sculk_clicking6",
                        "volume": 0.73
                    }
                ],
                "subtitle": "Sculk Sensor starts clicking",
                "subtitle_key": "subtitles.block.sculk_sensor.clicking"
            },
            null
        ],
        "block.sculk_sensor.clicking_stop": [
            {
                "field": "oe",
                "id": 784,
                "name": "block.sculk_sensor.clicking_stop",
                "sounds": [
                    {
                        "hash": "b389fbb5495a7275ac89f2485bf545da0baca471",
                        "name": "block/sculk_sensor/sculk_clicking_stop1",
                        "volume": 0.62
                    },
                    {
                        "hash": "4d6241f47eef81d850941f48d657244a4a5ebd64",
                        "name": "block/sculk_sensor/sculk_clicking_stop2",
                        "volume": 0.62
                    },
                    {
                        "hash": "5ab2c3c68f400aecbabf63706e39c5b9d2f9e012",
                        "name": "block/sculk_sensor/sculk_clicking_stop3",
                        "volume": 0.62
                    },
                    {
                        "hash": "2027da76b4b44d631391de86b885e134ae63d04e",
                        "name": "block/sculk_sensor/sculk_clicking_stop4",
                        "volume": 0.62
                    },
                    {
                        "hash": "bed999b618107791611f261ac3df0d59b1a18776",
                        "name": "block/sculk_sensor/sculk_clicking_stop5",
                        "volume": 0.62
                    }
                ],
                "subtitle": "Sculk Sensor stops clicking",
                "subtitle_key": "subtitles.block.sculk_sensor.clicking_stop"
            },
            null
        ],
        "block.sculk_sensor.fall": [
            {
                "field": "og",
                "id": 786,
                "name": "block.sculk_sensor.fall",
                "sounds": [
                    {
                        "hash": "85215b5e07584fa35121ffe4fd2fc876b4e42803",
                        "name": "block/sculk/step1",
                        "volume": 1
                    },
                    {
                        "hash": "93d7176f92d6525bb62bd75280047cf0eba04e24",
                        "name": "block/sculk/step2",
                        "volume": 1
                    },
                    {
                        "hash": "26c121371d00227c0ac280e5099957ec579e1d28",
                        "name": "block/sculk/step3",
                        "volume": 1
                    },
                    {
                        "hash": "7d3ffb5b997bccfe7d0a54c530ad56657085b066",
                        "name": "block/sculk/step4",
                        "volume": 1
                    },
                    {
                        "hash": "bfdacd3aba6b53aa62a5cb7491ce2f2ff8211ad7",
                        "name": "block/sculk/step5",
                        "volume": 1
                    },
                    {
                        "hash": "3aaf8dbe6d42d12e0219866bb47633b867b56b13",
                        "name": "block/sculk/step6",
                        "volume": 1
                    }
                ]
            },
            null
        ],
        "block.sculk_sensor.hit": [
            {
                "field": "oh",
                "id": 787,
                "name": "block.sculk_sensor.hit",
                "sounds": [
                    {
                        "hash": "85215b5e07584fa35121ffe4fd2fc876b4e42803",
                        "name": "block/sculk/step1",
                        "volume": 1
                    },
                    {
                        "hash": "93d7176f92d6525bb62bd75280047cf0eba04e24",
                        "name": "block/sculk/step2",
                        "volume": 1
                    },
                    {
                        "hash": "26c121371d00227c0ac280e5099957ec579e1d28",
                        "name": "block/sculk/step3",
                        "volume": 1
                    },
                    {
                        "hash": "7d3ffb5b997bccfe7d0a54c530ad56657085b066",
                        "name": "block/sculk/step4",
                        "volume": 1
                    },
                    {
                        "hash": "bfdacd3aba6b53aa62a5cb7491ce2f2ff8211ad7",
                        "name": "block/sculk/step5",
                        "volume": 1
                    },
                    {
                        "hash": "3aaf8dbe6d42d12e0219866bb47633b867b56b13",
                        "name": "block/sculk/step6",
                        "volume": 1
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            },
            null
        ],
        "block.sculk_sensor.place": [
            {
                "field": "oi",
                "id": 788,
                "name": "block.sculk_sensor.place",
                "sounds": [
                    {
                        "hash": "3106fd47b062fdab477a01396ab3a8810677accc",
                        "name": "block/sculk_sensor/place1",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "c4e06455711f94e95cf5a52c88a7e8c54f6983f3",
                        "name": "block/sculk_sensor/place2",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "f6e1fc1f51f91fe448cb8c921684df291e8ac839",
                        "name": "block/sculk_sensor/place3",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "95a86fe8ca3a26ac52951595703f87917488f045",
                        "name": "block/sculk_sensor/place4",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "97c713391b5c10222f7dffadda90a48ac472911d",
                        "name": "block/sculk_sensor/place5",
                        "pitch": 1.2,
                        "volume": 0.8
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            },
            null
        ],
        "block.sculk_sensor.step": [
            {
                "field": "oj",
                "id": 789,
                "name": "block.sculk_sensor.step",
                "sounds": [
                    {
                        "hash": "85215b5e07584fa35121ffe4fd2fc876b4e42803",
                        "name": "block/sculk/step1",
                        "volume": 1
                    },
                    {
                        "hash": "93d7176f92d6525bb62bd75280047cf0eba04e24",
                        "name": "block/sculk/step2",
                        "volume": 1
                    },
                    {
                        "hash": "26c121371d00227c0ac280e5099957ec579e1d28",
                        "name": "block/sculk/step3",
                        "volume": 1
                    },
                    {
                        "hash": "7d3ffb5b997bccfe7d0a54c530ad56657085b066",
                        "name": "block/sculk/step4",
                        "volume": 1
                    },
                    {
                        "hash": "bfdacd3aba6b53aa62a5cb7491ce2f2ff8211ad7",
                        "name": "block/sculk/step5",
                        "volume": 1
                    },
                    {
                        "hash": "3aaf8dbe6d42d12e0219866bb47633b867b56b13",
                        "name": "block/sculk/step6",
                        "volume": 1
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            },
            null
        ],
        "block.small_amethyst_bud.break": [
            {
                "field": "pk",
                "id": 842,
                "name": "block.small_amethyst_bud.break",
                "sounds": [
                    {
                        "hash": "689be5af8ea7328e8e1b664561efff236ab87aee",
                        "name": "block/amethyst_cluster/break1",
                        "volume": 0.4
                    },
                    {
                        "hash": "abaa4fb5b56b9110a2de7733d291338a6b0d4c3e",
                        "name": "block/amethyst_cluster/break2",
                        "volume": 0.4
                    },
                    {
                        "hash": "a01ead89927917ea1817990c645c6fcee2018c8a",
                        "name": "block/amethyst_cluster/break3",
                        "volume": 0.4
                    },
                    {
                        "hash": "c4380743ab08e60bafad7ff0dfd2aeb281fdfc3a",
                        "name": "block/amethyst_cluster/break4",
                        "volume": 0.4
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            },
            null
        ],
        "block.small_amethyst_bud.place": [
            {
                "field": "pl",
                "id": 843,
                "name": "block.small_amethyst_bud.place",
                "sounds": [
                    {
                        "hash": "f57c74bb3b583bbbbb78529203ff8dee72f1052f",
                        "name": "block/amethyst_cluster/place1",
                        "pitch:": 1.2,
                        "volume": 0.4
                    },
                    {
                        "hash": "b57f215084d00503c884c327f2617ce563bf2e3c",
                        "name": "block/amethyst_cluster/place2",
                        "pitch:": 1.2,
                        "volume": 0.4
                    },
                    {
                        "hash": "4af9c72df6f67060c0dbff10feeb9aa13767b560",
                        "name": "block/amethyst_cluster/place3",
                        "pitch:": 1.2,
                        "volume": 0.4
                    },
                    {
                        "hash": "7f31942ce140138141d4873ff36acd9a51f4f496",
                        "name": "block/amethyst_cluster/place4",
                        "pitch:": 1.2,
                        "volume": 0.4
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            },
            null
        ],
        "block.tuff.break": [
            {
                "field": "qS",
                "id": 928,
                "name": "block.tuff.break",
                "sounds": [
                    {
                        "hash": "a7f06223dd9eaaaba4f65ce00154016054a4fbe0",
                        "name": "block/tuff/break1",
                        "volume": 1
                    },
                    {
                        "hash": "06ce29eac0d1426bd490afca4cb29d6ce91b8b42",
                        "name": "block/tuff/break2",
                        "volume": 1
                    },
                    {
                        "hash": "00340157e51d29fdeba7258fd880780f766d77dc",
                        "name": "block/tuff/break3",
                        "volume": 1
                    },
                    {
                        "hash": "66c29d72ffad5692e16e25a370c2e9b675066a47",
                        "name": "block/tuff/break4",
                        "volume": 1
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            },
            null
        ],
        "block.tuff.fall": [
            {
                "field": "qW",
                "id": 932,
                "name": "block.tuff.fall",
                "sounds": [
                    {
                        "hash": "acb962fab25ea2603e55470515229618706b0678",
                        "name": "block/tuff/step1",
                        "volume": 1
                    },
                    {
                        "hash": "ccdef05d77b64977527003392c79eda2c2d34b3e",
                        "name": "block/tuff/step2",
                        "volume": 1
                    },
                    {
                        "hash": "b4ae183b16ad3445a38b84f339cf873251774675",
                        "name": "block/tuff/step3",
                        "volume": 1
                    },
                    {
                        "hash": "40c52cca876f216379e1bd2296984f0f0aae799a",
                        "name": "block/tuff/step4",
                        "volume": 1
                    },
                    {
                        "hash": "a77a05e8d23c7069faba39cd0b26f2b2cf0250f5",
                        "name": "block/tuff/step5",
                        "volume": 1
                    },
                    {
                        "hash": "206c9e28760fbb9667bf45185a44f86349a5d229",
                        "name": "block/tuff/step6",
                        "volume": 1
                    }
                ]
            },
            null
        ],
        "block.tuff.hit": [
            {
                "field": "qV",
                "id": 931,
                "name": "block.tuff.hit",
                "sounds": [
                    {
                        "hash": "acb962fab25ea2603e55470515229618706b0678",
                        "name": "block/tuff/step1",
                        "volume": 1
                    },
                    {
                        "hash": "ccdef05d77b64977527003392c79eda2c2d34b3e",
                        "name": "block/tuff/step2",
                        "volume": 1
                    },
                    {
                        "hash": "b4ae183b16ad3445a38b84f339cf873251774675",
                        "name": "block/tuff/step3",
                        "volume": 1
                    },
                    {
                        "hash": "40c52cca876f216379e1bd2296984f0f0aae799a",
                        "name": "block/tuff/step4",
                        "volume": 1
                    },
                    {
                        "hash": "a77a05e8d23c7069faba39cd0b26f2b2cf0250f5",
                        "name": "block/tuff/step5",
                        "volume": 1
                    },
                    {
                        "hash": "206c9e28760fbb9667bf45185a44f86349a5d229",
                        "name": "block/tuff/step6",
                        "volume": 1
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            },
            null
        ],
        "block.tuff.place": [
            {
                "field": "qU",
                "id": 930,
                "name": "block.tuff.place",
                "sounds": [
                    {
                        "hash": "a7f06223dd9eaaaba4f65ce00154016054a4fbe0",
                        "name": "block/tuff/break1",
                        "volume": 1
                    },
                    {
                        "hash": "06ce29eac0d1426bd490afca4cb29d6ce91b8b42",
                        "name": "block/tuff/break2",
                        "volume": 1
                    },
                    {
                        "hash": "00340157e51d29fdeba7258fd880780f766d77dc",
                        "name": "block/tuff/break3",
                        "volume": 1
                    },
                    {
                        "hash": "66c29d72ffad5692e16e25a370c2e9b675066a47",
                        "name": "block/tuff/break4",
                        "volume": 1
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            },
            null
        ],
        "block.tuff.step": [
            {
                "field": "qT",
                "id": 929,
                "name": "block.tuff.step",
                "sounds": [
                    {
                        "hash": "acb962fab25ea2603e55470515229618706b0678",
                        "name": "block/tuff/step1",
                        "volume": 1
                    },
                    {
                        "hash": "ccdef05d77b64977527003392c79eda2c2d34b3e",
                        "name": "block/tuff/step2",
                        "volume": 1
                    },
                    {
                        "hash": "b4ae183b16ad3445a38b84f339cf873251774675",
                        "name": "block/tuff/step3",
                        "volume": 1
                    },
                    {
                        "hash": "40c52cca876f216379e1bd2296984f0f0aae799a",
                        "name": "block/tuff/step4",
                        "volume": 1
                    },
                    {
                        "hash": "a77a05e8d23c7069faba39cd0b26f2b2cf0250f5",
                        "name": "block/tuff/step5",
                        "volume": 1
                    },
                    {
                        "hash": "206c9e28760fbb9667bf45185a44f86349a5d229",
                        "name": "block/tuff/step6",
                        "volume": 1
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            },
            null
        ],
        "entity.axolotl.attack": [
            {
                "field": "al",
                "id": 63,
                "name": "entity.axolotl.attack",
                "sounds": [
                    {
                        "hash": "16ea969a1db6ae466df28025bee90d704d81e969",
                        "name": "mob/axolotl/attack1",
                        "volume": 0.5
                    },
                    {
                        "hash": "ff6de6ba71b05e968b6c4f75c29bedc349d4a442",
                        "name": "mob/axolotl/attack2",
                        "volume": 0.5
                    },
                    {
                        "hash": "273bea0342e06591b3e2681f737571f1e002207a",
                        "name": "mob/axolotl/attack3",
                        "volume": 0.5
                    },
                    {
                        "hash": "75f4ba885bd66d43e9ff6499dd8d7997bfc50f91",
                        "name": "mob/axolotl/attack4",
                        "volume": 0.5
                    }
                ],
                "subtitle": "Axolotl attacks",
                "subtitle_key": "subtitles.entity.axolotl.attack"
            },
            null
        ],
        "entity.axolotl.death": [
            {
                "field": "am",
                "id": 64,
                "name": "entity.axolotl.death",
                "sounds": [
                    {
                        "hash": "02bd11acbb9717286afd8cd5e2042da90ed21998",
                        "name": "mob/axolotl/death1"
                    },
                    {
                        "hash": "6b225a6f8864f16ba774adbaf58a8bfd729bd334",
                        "name": "mob/axolotl/death2"
                    }
                ],
                "subtitle": "Axolotl dies",
                "subtitle_key": "subtitles.entity.axolotl.death"
            },
            null
        ],
        "entity.axolotl.hurt": [
            {
                "field": "an",
                "id": 65,
                "name": "entity.axolotl.hurt",
                "sounds": [
                    {
                        "hash": "0c42b94014a3b58e1ae24defb6beaeb84011f9b8",
                        "name": "mob/axolotl/hurt1"
                    },
                    {
                        "hash": "588db45a8132cda050dfa447345b7d1a46774818",
                        "name": "mob/axolotl/hurt2"
                    },
                    {
                        "hash": "cc2638df5c31944928d7cf9e13d9e824a5bb7768",
                        "name": "mob/axolotl/hurt3"
                    },
                    {
                        "hash": "1574c9e6ffd5748852b29951ecfab97e6135f98e",
                        "name": "mob/axolotl/hurt4"
                    }
                ],
                "subtitle": "Axolotl hurts",
                "subtitle_key": "subtitles.entity.axolotl.hurt"
            },
            null
        ],
        "entity.axolotl.idle_air": [
            {
                "field": "ao",
                "id": 66,
                "name": "entity.axolotl.idle_air",
                "sounds": [
                    {
                        "hash": "398bdfb1b7b64dc83706f0d6ad824b70ce1f9569",
                        "name": "mob/axolotl/idle_air1",
                        "volume": 1
                    },
                    {
                        "hash": "49ac74489b7a0463f8f08d54db100762ffbe2532",
                        "name": "mob/axolotl/idle_air2",
                        "volume": 1
                    },
                    {
                        "hash": "bc781ad9f0f2a4480dea4646952c7d7bb1949d3d",
                        "name": "mob/axolotl/idle_air3",
                        "pitch": 1.2,
                        "volume": 0.8
                    },
                    {
                        "hash": "26549ef538f7406fb870432f3fe11a807c16ef82",
                        "name": "mob/axolotl/idle_air4",
                        "volume": 1
                    },
                    {
                        "hash": "1c262c483a694704cfe7badd978a9eeb49a167a0",
                        "name": "mob/axolotl/idle_air5",
                        "pitch": 1
                    }
                ],
                "subtitle": "Axolotl chirps",
                "subtitle_key": "subtitles.entity.axolotl.idle_air"
            },
            null
        ],
        "entity.axolotl.idle_water": [
            {
                "field": "ap",
                "id": 67,
                "name": "entity.axolotl.idle_water",
                "sounds": [
                    {
                        "hash": "79b636ffca3ff472de7e1d7c8cfb46a77874417a",
                        "name": "mob/axolotl/idle1"
                    },
                    {
                        "hash": "03f59217fa2f8ca8820b1ee13187cedfd42d86ce",
                        "name": "mob/axolotl/idle2"
                    },
                    {
                        "hash": "15cdf2534718e12a55668a6ededb358a86fa26c5",
                        "name": "mob/axolotl/idle3"
                    },
                    {
                        "hash": "9f7359689f083bc4184a632ea6169b7a6d95f86c",
                        "name": "mob/axolotl/idle4"
                    },
                    {
                        "hash": "cb1848fdfc37c5ebefd65e29fbefc2d3495f11fc",
                        "name": "mob/axolotl/idle5"
                    }
                ],
                "subtitle": "Axolotl chirps",
                "subtitle_key": "subtitles.entity.axolotl.idle_water"
            },
            null
        ],
        "entity.axolotl.splash": [
            {
                "field": "aq",
                "id": 68,
                "name": "entity.axolotl.splash",
                "sounds": [
                    {
                        "hash": "1125cbb42bed5ce7d91ff530d543c844ac80f735",
                        "name": "mob/dolphin/splash1",
                        "pitch": 1.2,
                        "volume": 0.9
                    },
                    {
                        "hash": "ea6877421607da5668fe07debac455f054868809",
                        "name": "mob/dolphin/splash2",
                        "pitch": 1.2,
                        "volume": 0.9
                    },
                    {
                        "hash": "487dd072ac3d62348c57e255a9d800bd06f505af",
                        "name": "mob/dolphin/splash3",
                        "pitch": 1.2,
                        "volume": 0.9
                    }
                ],
                "subtitle": "Axolotl splashes",
                "subtitle_key": "subtitles.entity.axolotl.splash"
            },
            null
        ],
        "entity.axolotl.swim": [
            {
                "field": "ar",
                "id": 69,
                "name": "entity.axolotl.swim",
                "sounds": [
                    {
                        "hash": "5c46b478067d883d19756255b7fb132c686389b7",
                        "name": "mob/dolphin/swim1"
                    },
                    {
                        "hash": "5f4b4f79c04df853893c38c64f40d625e5e96929",
                        "name": "mob/dolphin/swim2"
                    },
                    {
                        "hash": "c2ec60b2cdcda5725fbe192c9a4832d322551ee4",
                        "name": "mob/dolphin/swim3"
                    },
                    {
                        "hash": "13beba907bd219f3b2d3f50e716805fa63124cbf",
                        "name": "mob/dolphin/swim4"
                    },
                    {
                        "hash": "2fc54a0a9f4946c4df344399dcb8872e79d1c379",
                        "name": "entity/fish/swim5"
                    },
                    {
                        "hash": "4c51f308cb42bc51779a5461d317d5415c07b294",
                        "name": "entity/fish/swim6"
                    },
                    {
                        "hash": "b4af31228aaf97aa8f83260ca90f64ce6fbc3d9b",
                        "name": "entity/fish/swim7"
                    }
                ],
                "subtitle": "Axolotl swims",
                "subtitle_key": "subtitles.entity.axolotl.swim"
            },
            null
        ],
        "entity.minecart.inside.underwater": [
            {
                "field": "iP",
                "id": 509,
                "name": "entity.minecart.inside.underwater",
                "sounds": [
                    {
                        "hash": "7a75f9d7e19f94dc8c6e9ae60d79afe4841cef01",
                        "name": "minecart/inside_underwater1"
                    },
                    {
                        "hash": "a186f91dfbf06ed65aea35ec1b71f2ebdf11d2b8",
                        "name": "minecart/inside_underwater2"
                    },
                    {
                        "hash": "8a1716b95bce4b17cd95d3530ea4a99b92c94a86",
                        "name": "minecart/inside_underwater3"
                    }
                ]
            },
            null
        ],
        "entity.player.hurt_freeze": [
            {
                "field": "mI",
                "id": 710,
                "name": "entity.player.hurt_freeze",
                "sounds": [
                    {
                        "hash": "e7b80d7e20d07be914d7361b5ff71a3c3193ef4c",
                        "name": "entity/player/hurt/freeze_hurt1"
                    },
                    {
                        "hash": "67cee209f2c06f4bc08d7e165fa7371557d4e261",
                        "name": "entity/player/hurt/freeze_hurt2"
                    },
                    {
                        "hash": "c2d7c39f05beb02e6e6ea7bc703925fa3b965b76",
                        "name": "entity/player/hurt/freeze_hurt3"
                    },
                    {
                        "hash": "50b8c5f86880ac8ae12edf9e5ca21c857c187589",
                        "name": "entity/player/hurt/freeze_hurt4"
                    },
                    {
                        "hash": "3240aaa8b43d759b40c41b7f6c0d7dcc5ef7a77f",
                        "name": "entity/player/hurt/freeze_hurt5"
                    }
                ],
                "subtitle": "Player freezes",
                "subtitle_key": "subtitles.entity.player.freeze_hurt"
            },
            null
        ],
        "item.bucket.empty_axolotl": [
            {
                "field": "bC",
                "id": 132,
                "name": "item.bucket.empty_axolotl",
                "sounds": [
                    {
                        "hash": "ce9704faf305ae2ef170a315ff929067f9ac923c",
                        "name": "item/bucket/empty_fish1"
                    },
                    {
                        "hash": "8fa72261eea571314273ddaf73032b1c9944130c",
                        "name": "item/bucket/empty_fish2"
                    },
                    {
                        "hash": "eb4ef46ee676b18c8bd853188e3ad6a53b37d7c1",
                        "name": "item/bucket/empty_fish3"
                    }
                ],
                "subtitle": "Bucket empties",
                "subtitle_key": "subtitles.item.bucket.empty"
            },
            null
        ],
        "item.bucket.empty_powder_snow": [
            {
                "field": "bF",
                "id": 135,
                "name": "item.bucket.empty_powder_snow",
                "sounds": [
                    {
                        "hash": "0cb553eb257614ee1a58e57f8d1c292e9cd393c2",
                        "name": "item/bucket/empty_powder_snow1",
                        "pitch": 1
                    },
                    {
                        "hash": "54ab71a9e53979af80cbfbfdb3d542ae14b66d0a",
                        "name": "item/bucket/empty_powder_snow2",
                        "pitch": 1
                    },
                    {
                        "hash": "0cb553eb257614ee1a58e57f8d1c292e9cd393c2",
                        "name": "item/bucket/empty_powder_snow1",
                        "pitch": 0.95
                    },
                    {
                        "hash": "54ab71a9e53979af80cbfbfdb3d542ae14b66d0a",
                        "name": "item/bucket/empty_powder_snow2",
                        "pitch": 0.95
                    },
                    {
                        "hash": "0cb553eb257614ee1a58e57f8d1c292e9cd393c2",
                        "name": "item/bucket/empty_powder_snow1",
                        "pitch": 1.1
                    },
                    {
                        "hash": "54ab71a9e53979af80cbfbfdb3d542ae14b66d0a",
                        "name": "item/bucket/empty_powder_snow2",
                        "pitch": 1.1
                    }
                ],
                "subtitle": "Bucket empties",
                "subtitle_key": "subtitles.item.bucket.empty"
            },
            null
        ],
        "item.bucket.fill_axolotl": [
            {
                "field": "bH",
                "id": 137,
                "name": "item.bucket.fill_axolotl",
                "sounds": [
                    {
                        "hash": "d36b56ae93d86b47d5d99e9540c2718b826fa2ae",
                        "name": "item/bucket/fill_axolotl1",
                        "pitch": 1
                    },
                    {
                        "hash": "41a44dadfb327a146be5898b715bad6eec86adc7",
                        "name": "item/bucket/fill_axolotl2",
                        "pitch": 1
                    },
                    {
                        "hash": "cddd681bfba010f8de2616d2a7ecf95d69f5d0d8",
                        "name": "item/bucket/fill_axolotl3",
                        "pitch": 1
                    }
                ],
                "subtitle": "Axolotl scooped",
                "subtitle_key": "subtitles.item.bucket.fill_axolotl"
            },
            null
        ],
        "item.bucket.fill_powder_snow": [
            {
                "field": "bK",
                "id": 140,
                "name": "item.bucket.fill_powder_snow",
                "sounds": [
                    {
                        "hash": "bfdeec56755e5c566fa045a678d3fd1c062065f3",
                        "name": "item/bucket/fill_powder_snow1",
                        "pitch": 1.0
                    },
                    {
                        "hash": "fba31761b635d23b80a9c48c1bfc5556f7441679",
                        "name": "item/bucket/fill_powder_snow2",
                        "pitch": 1.0
                    },
                    {
                        "hash": "bfdeec56755e5c566fa045a678d3fd1c062065f3",
                        "name": "item/bucket/fill_powder_snow1",
                        "pitch": 0.9
                    },
                    {
                        "hash": "fba31761b635d23b80a9c48c1bfc5556f7441679",
                        "name": "item/bucket/fill_powder_snow2",
                        "pitch": 0.9
                    },
                    {
                        "hash": "bfdeec56755e5c566fa045a678d3fd1c062065f3",
                        "name": "item/bucket/fill_powder_snow1",
                        "pitch": 1.1
                    },
                    {
                        "hash": "fba31761b635d23b80a9c48c1bfc5556f7441679",
                        "name": "item/bucket/fill_powder_snow2",
                        "pitch": 1.1
                    }
                ],
                "subtitle": "Bucket fills",
                "subtitle_key": "subtitles.item.bucket.fill"
            },
            null
        ],
        "item.spyglass.stop_using": [
            {
                "field": "qe",
                "id": 888,
                "name": "item.spyglass.stop_using",
                "sounds": [
                    {
                        "hash": "3ad88a819efd0d1e1eaff1a24b08a9fe4caacb65",
                        "name": "item/spyglass/stop",
                        "pitch": 1,
                        "volume": 0.5
                    },
                    {
                        "hash": "3ad88a819efd0d1e1eaff1a24b08a9fe4caacb65",
                        "name": "item/spyglass/stop",
                        "pitch": 0.9,
                        "volume": 0.5
                    },
                    {
                        "hash": "3ad88a819efd0d1e1eaff1a24b08a9fe4caacb65",
                        "name": "item/spyglass/stop",
                        "pitch": 0.8,
                        "volume": 0.5
                    }
                ],
                "subtitle": "Spyglass retracts",
                "subtitle_key": "subtitles.item.spyglass.stop_using"
            },
            null
        ],
        "item.spyglass.use": [
            {
                "field": "qd",
                "id": 887,
                "name": "item.spyglass.use",
                "sounds": [
                    {
                        "hash": "7ce2d8b2748ebef2e1492e7712631fe6746f2afd",
                        "name": "item/spyglass/use",
                        "pitch": 1.33,
                        "volume": 0.5
                    },
                    {
                        "hash": "7ce2d8b2748ebef2e1492e7712631fe6746f2afd",
                        "name": "item/spyglass/use",
                        "pitch": 1.15,
                        "volume": 0.5
                    },
                    {
                        "hash": "7ce2d8b2748ebef2e1492e7712631fe6746f2afd",
                        "name": "item/spyglass/use",
                        "pitch": 1.4,
                        "volume": 0.5
                    },
                    {
                        "hash": "7ce2d8b2748ebef2e1492e7712631fe6746f2afd",
                        "name": "item/spyglass/use",
                        "pitch": 1.55,
                        "volume": 0.5
                    }
                ],
                "subtitle": "Spyglass expands",
                "subtitle_key": "subtitles.item.spyglass.use"
            },
            null
        ],
        "item.sweet_berries.pick_from_bush": [
            {
                "field": "qy",
                "id": 908,
                "name": "item.sweet_berries.pick_from_bush"
            },
            {
                "field": "oZ",
                "id": 831,
                "name": "item.sweet_berries.pick_from_bush",
                "sounds": [
                    {
                        "hash": "46f39e069bda986e13f1e249abb7fbe40ab6d670",
                        "name": "item/sweet_berries/pick_from_bush1"
                    },
                    {
                        "hash": "6b43c008ee6f0bfdb830a10a960e366e8d6fc17c",
                        "name": "item/sweet_berries/pick_from_bush2"
                    }
                ],
                "subtitle": "Berries pop",
                "subtitle_key": "subtitles.item.berries.pick"
            }
        ]
    },
    "stats": {},
    "tags": {
        "blocks/candle_cakes": [
            {
                "name": "candle_cakes",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:candle_cake",
                    "minecraft:white_candle_cake",
                    "minecraft:orange_candle_cake",
                    "minecraft:magenta_candle_cake",
                    "minecraft:light_blue_candle_cake",
                    "minecraft:yellow_candle_cake",
                    "minecraft:lime_candle_cake",
                    "minecraft:pink_candle_cake",
                    "minecraft:gray_candle_cake",
                    "minecraft:light_gray_candle_cake",
                    "minecraft:cyan_candle_cake",
                    "minecraft:purple_candle_cake",
                    "minecraft:blue_candle_cake",
                    "minecraft:brown_candle_cake",
                    "minecraft:green_candle_cake",
                    "minecraft:red_candle_cake",
                    "minecraft:black_candle_cake"
                ]
            },
            null
        ],
        "blocks/candles": [
            {
                "name": "candles",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:candle",
                    "minecraft:white_candle",
                    "minecraft:orange_candle",
                    "minecraft:magenta_candle",
                    "minecraft:light_blue_candle",
                    "minecraft:yellow_candle",
                    "minecraft:lime_candle",
                    "minecraft:pink_candle",
                    "minecraft:gray_candle",
                    "minecraft:light_gray_candle",
                    "minecraft:cyan_candle",
                    "minecraft:purple_candle",
                    "minecraft:blue_candle",
                    "minecraft:brown_candle",
                    "minecraft:green_candle",
                    "minecraft:red_candle",
                    "minecraft:black_candle"
                ]
            },
            null
        ],
        "blocks/cauldrons": [
            {
                "name": "cauldrons",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:cauldron",
                    "minecraft:water_cauldron",
                    "minecraft:lava_cauldron",
                    "minecraft:powder_snow_cauldron"
                ]
            },
            null
        ],
        "blocks/crystal_sound_blocks": [
            {
                "name": "crystal_sound_blocks",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:amethyst_block",
                    "minecraft:budding_amethyst"
                ]
            },
            null
        ],
        "blocks/dripstone_replaceable_blocks": [
            {
                "name": "dripstone_replaceable_blocks",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:stone",
                    "minecraft:granite",
                    "minecraft:diorite",
                    "minecraft:andesite",
                    "minecraft:dirt"
                ]
            },
            null
        ],
        "blocks/inside_step_sound_blocks": [
            {
                "name": "inside_step_sound_blocks",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:snow",
                    "minecraft:powder_snow"
                ]
            },
            null
        ],
        "blocks/occludes_vibration_signals": [
            {
                "name": "occludes_vibration_signals",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:white_wool",
                    "minecraft:orange_wool",
                    "minecraft:magenta_wool",
                    "minecraft:light_blue_wool",
                    "minecraft:yellow_wool",
                    "minecraft:lime_wool",
                    "minecraft:pink_wool",
                    "minecraft:gray_wool",
                    "minecraft:light_gray_wool",
                    "minecraft:cyan_wool",
                    "minecraft:purple_wool",
                    "minecraft:blue_wool",
                    "minecraft:brown_wool",
                    "minecraft:green_wool",
                    "minecraft:red_wool",
                    "minecraft:black_wool"
                ]
            },
            null
        ],
        "entity_types/axolotl_always_hostiles": [
            {
                "name": "axolotl_always_hostiles",
                "replace": false,
                "type": "entity_types",
                "values": [
                    "minecraft:tropical_fish",
                    "minecraft:pufferfish",
                    "minecraft:salmon",
                    "minecraft:cod",
                    "minecraft:squid"
                ]
            },
            null
        ],
        "entity_types/axolotl_tempted_hostiles": [
            {
                "name": "axolotl_tempted_hostiles",
                "replace": false,
                "type": "entity_types",
                "values": [
                    "minecraft:drowned",
                    "minecraft:guardian"
                ]
            },
            null
        ],
        "entity_types/powder_snow_walkable_mobs": [
            {
                "name": "powder_snow_walkable_mobs",
                "replace": false,
                "type": "entity_types",
                "values": [
                    "minecraft:rabbit",
                    "minecraft:endermite",
                    "minecraft:silverfish"
                ]
            },
            null
        ],
        "game_events/ignore_vibrations_stepping_carefully": [
            {
                "name": "ignore_vibrations_stepping_carefully",
                "replace": false,
                "type": "game_events",
                "values": [
                    "minecraft:step",
                    "minecraft:hit_ground",
                    "minecraft:projectile_shoot"
                ]
            },
            null
        ],
        "game_events/vibrations": [
            {
                "name": "vibrations",
                "replace": false,
                "type": "game_events",
                "values": [
                    "minecraft:step",
                    "minecraft:swim",
                    "minecraft:flap",
                    "minecraft:elytra_free_fall",
                    "minecraft:hit_ground",
                    "minecraft:splash",
                    "minecraft:projectile_shoot",
                    "minecraft:projectile_land",
                    "minecraft:entity_hit",
                    "minecraft:block_place",
                    "minecraft:block_destroy",
                    "minecraft:fluid_place",
                    "minecraft:fluid_pickup",
                    "minecraft:block_open",
                    "minecraft:block_close",
                    "minecraft:block_switch",
                    "minecraft:block_unswitch",
                    "minecraft:block_attach",
                    "minecraft:block_detach",
                    "minecraft:block_press",
                    "minecraft:block_unpress",
                    "minecraft:container_open",
                    "minecraft:container_close",
                    "minecraft:explode",
                    "minecraft:armor_stand_add_item",
                    "minecraft:wolf_shaking",
                    "minecraft:dispense_fail",
                    "minecraft:fishing_rod_cast",
                    "minecraft:fishing_rod_reel_in",
                    "minecraft:piston_extend",
                    "minecraft:piston_contract",
                    "minecraft:flint_and_steel_use",
                    "minecraft:eating_finish",
                    "minecraft:lightning_strike"
                ]
            },
            null
        ],
        "items/axolotl_tempt_items": [
            {
                "name": "axolotl_tempt_items",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:tropical_fish",
                    "minecraft:tropical_fish_bucket"
                ]
            },
            null
        ],
        "items/candles": [
            {
                "name": "candles",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:candle",
                    "minecraft:white_candle",
                    "minecraft:orange_candle",
                    "minecraft:magenta_candle",
                    "minecraft:light_blue_candle",
                    "minecraft:yellow_candle",
                    "minecraft:lime_candle",
                    "minecraft:pink_candle",
                    "minecraft:gray_candle",
                    "minecraft:light_gray_candle",
                    "minecraft:cyan_candle",
                    "minecraft:purple_candle",
                    "minecraft:blue_candle",
                    "minecraft:brown_candle",
                    "minecraft:green_candle",
                    "minecraft:red_candle",
                    "minecraft:black_candle"
                ]
            },
            null
        ],
        "items/freeze_immune_wearables": [
            {
                "name": "freeze_immune_wearables",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:leather_boots",
                    "minecraft:leather_leggings",
                    "minecraft:leather_chestplate",
                    "minecraft:leather_helmet"
                ]
            },
            null
        ],
        "items/ignored_by_piglin_babies": [
            {
                "name": "ignored_by_piglin_babies",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:leather"
                ]
            },
            null
        ],
        "items/occludes_vibration_signals": [
            {
                "name": "occludes_vibration_signals",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:white_wool",
                    "minecraft:orange_wool",
                    "minecraft:magenta_wool",
                    "minecraft:light_blue_wool",
                    "minecraft:yellow_wool",
                    "minecraft:lime_wool",
                    "minecraft:pink_wool",
                    "minecraft:gray_wool",
                    "minecraft:light_gray_wool",
                    "minecraft:cyan_wool",
                    "minecraft:purple_wool",
                    "minecraft:blue_wool",
                    "minecraft:brown_wool",
                    "minecraft:green_wool",
                    "minecraft:red_wool",
                    "minecraft:black_wool"
                ]
            },
            null
        ],
        "items/piglin_food": [
            {
                "name": "piglin_food",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:porkchop",
                    "minecraft:cooked_porkchop"
                ]
            },
            null
        ]
    },
    "tileentity": {
        "tileentities": {
            "sculk_sensor": [
                {
                    "blocks": [
                        "sculk_sensor"
                    ],
                    "class": "cfw",
                    "name": "sculk_sensor"
                },
                null
            ]
        }
    },
    "version": {
        "data": [
            2687,
            2585
        ],
        "id": [
            "20w51a",
            "1.16.5-rc1"
        ],
        "name": [
            "20w51a",
            "1.16.5 Release Candidate 1"
        ],
        "protocol": [
            1073741833,
            1073741834
        ]
    }
}