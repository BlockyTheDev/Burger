{
    "achievements": {},
    "blocks": {
        "block": {
            "black_candle_cake": [
                {
                    "class": "bzj",
                    "display_name": "Black Candle Cake",
                    "field": "oE",
                    "max_state_id": 17536,
                    "min_state_id": 17535,
                    "num_states": 2,
                    "numeric_id": 810,
                    "states": [
                        {
                            "declared_in": "ckp",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "black_candle_cake"
                },
                {
                    "class": "bzk",
                    "display_name": "Cake with Black Candle",
                    "field": "oE",
                    "max_state_id": 17536,
                    "min_state_id": 17535,
                    "num_states": 2,
                    "numeric_id": 810,
                    "states": [
                        {
                            "declared_in": "ckq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "black_candle_cake"
                }
            ],
            "blue_candle_cake": [
                {
                    "class": "bzj",
                    "display_name": "Blue Candle Cake",
                    "field": "oA",
                    "max_state_id": 17528,
                    "min_state_id": 17527,
                    "num_states": 2,
                    "numeric_id": 806,
                    "states": [
                        {
                            "declared_in": "ckp",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "blue_candle_cake"
                },
                {
                    "class": "bzk",
                    "display_name": "Cake with Blue Candle",
                    "field": "oA",
                    "max_state_id": 17528,
                    "min_state_id": 17527,
                    "num_states": 2,
                    "numeric_id": 806,
                    "states": [
                        {
                            "declared_in": "ckq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "blue_candle_cake"
                }
            ],
            "brown_candle_cake": [
                {
                    "class": "bzj",
                    "display_name": "Brown Candle Cake",
                    "field": "oB",
                    "max_state_id": 17530,
                    "min_state_id": 17529,
                    "num_states": 2,
                    "numeric_id": 807,
                    "states": [
                        {
                            "declared_in": "ckp",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "brown_candle_cake"
                },
                {
                    "class": "bzk",
                    "display_name": "Cake with Brown Candle",
                    "field": "oB",
                    "max_state_id": 17530,
                    "min_state_id": 17529,
                    "num_states": 2,
                    "numeric_id": 807,
                    "states": [
                        {
                            "declared_in": "ckq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "brown_candle_cake"
                }
            ],
            "cyan_candle_cake": [
                {
                    "class": "bzj",
                    "display_name": "Cyan Candle Cake",
                    "field": "oy",
                    "max_state_id": 17524,
                    "min_state_id": 17523,
                    "num_states": 2,
                    "numeric_id": 804,
                    "states": [
                        {
                            "declared_in": "ckp",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "cyan_candle_cake"
                },
                {
                    "class": "bzk",
                    "display_name": "Cake with Cyan Candle",
                    "field": "oy",
                    "max_state_id": 17524,
                    "min_state_id": 17523,
                    "num_states": 2,
                    "numeric_id": 804,
                    "states": [
                        {
                            "declared_in": "ckq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "cyan_candle_cake"
                }
            ],
            "gray_candle_cake": [
                {
                    "class": "bzj",
                    "display_name": "Gray Candle Cake",
                    "field": "ow",
                    "max_state_id": 17520,
                    "min_state_id": 17519,
                    "num_states": 2,
                    "numeric_id": 802,
                    "states": [
                        {
                            "declared_in": "ckp",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "gray_candle_cake"
                },
                {
                    "class": "bzk",
                    "display_name": "Cake with Gray Candle",
                    "field": "ow",
                    "max_state_id": 17520,
                    "min_state_id": 17519,
                    "num_states": 2,
                    "numeric_id": 802,
                    "states": [
                        {
                            "declared_in": "ckq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "gray_candle_cake"
                }
            ],
            "green_candle_cake": [
                {
                    "class": "bzj",
                    "display_name": "Green Candle Cake",
                    "field": "oC",
                    "max_state_id": 17532,
                    "min_state_id": 17531,
                    "num_states": 2,
                    "numeric_id": 808,
                    "states": [
                        {
                            "declared_in": "ckp",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "green_candle_cake"
                },
                {
                    "class": "bzk",
                    "display_name": "Cake with Green Candle",
                    "field": "oC",
                    "max_state_id": 17532,
                    "min_state_id": 17531,
                    "num_states": 2,
                    "numeric_id": 808,
                    "states": [
                        {
                            "declared_in": "ckq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "green_candle_cake"
                }
            ],
            "light_blue_candle_cake": [
                {
                    "class": "bzj",
                    "display_name": "Light Blue Candle Cake",
                    "field": "os",
                    "max_state_id": 17512,
                    "min_state_id": 17511,
                    "num_states": 2,
                    "numeric_id": 798,
                    "states": [
                        {
                            "declared_in": "ckp",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "light_blue_candle_cake"
                },
                {
                    "class": "bzk",
                    "display_name": "Cake with Light Blue Candle",
                    "field": "os",
                    "max_state_id": 17512,
                    "min_state_id": 17511,
                    "num_states": 2,
                    "numeric_id": 798,
                    "states": [
                        {
                            "declared_in": "ckq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "light_blue_candle_cake"
                }
            ],
            "light_gray_candle_cake": [
                {
                    "class": "bzj",
                    "display_name": "Light Gray Candle Cake",
                    "field": "ox",
                    "max_state_id": 17522,
                    "min_state_id": 17521,
                    "num_states": 2,
                    "numeric_id": 803,
                    "states": [
                        {
                            "declared_in": "ckp",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "light_gray_candle_cake"
                },
                {
                    "class": "bzk",
                    "display_name": "Cake with Light Gray Candle",
                    "field": "ox",
                    "max_state_id": 17522,
                    "min_state_id": 17521,
                    "num_states": 2,
                    "numeric_id": 803,
                    "states": [
                        {
                            "declared_in": "ckq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "light_gray_candle_cake"
                }
            ],
            "lime_candle_cake": [
                {
                    "class": "bzj",
                    "display_name": "Lime Candle Cake",
                    "field": "ou",
                    "max_state_id": 17516,
                    "min_state_id": 17515,
                    "num_states": 2,
                    "numeric_id": 800,
                    "states": [
                        {
                            "declared_in": "ckp",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "lime_candle_cake"
                },
                {
                    "class": "bzk",
                    "display_name": "Cake with Lime Candle",
                    "field": "ou",
                    "max_state_id": 17516,
                    "min_state_id": 17515,
                    "num_states": 2,
                    "numeric_id": 800,
                    "states": [
                        {
                            "declared_in": "ckq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "lime_candle_cake"
                }
            ],
            "magenta_candle_cake": [
                {
                    "class": "bzj",
                    "display_name": "Magenta Candle Cake",
                    "field": "or",
                    "max_state_id": 17510,
                    "min_state_id": 17509,
                    "num_states": 2,
                    "numeric_id": 797,
                    "states": [
                        {
                            "declared_in": "ckp",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "magenta_candle_cake"
                },
                {
                    "class": "bzk",
                    "display_name": "Cake with Magenta Candle",
                    "field": "or",
                    "max_state_id": 17510,
                    "min_state_id": 17509,
                    "num_states": 2,
                    "numeric_id": 797,
                    "states": [
                        {
                            "declared_in": "ckq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "magenta_candle_cake"
                }
            ],
            "orange_candle_cake": [
                {
                    "class": "bzj",
                    "display_name": "Orange Candle Cake",
                    "field": "oq",
                    "max_state_id": 17508,
                    "min_state_id": 17507,
                    "num_states": 2,
                    "numeric_id": 796,
                    "states": [
                        {
                            "declared_in": "ckp",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "orange_candle_cake"
                },
                {
                    "class": "bzk",
                    "display_name": "Cake with Orange Candle",
                    "field": "oq",
                    "max_state_id": 17508,
                    "min_state_id": 17507,
                    "num_states": 2,
                    "numeric_id": 796,
                    "states": [
                        {
                            "declared_in": "ckq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "orange_candle_cake"
                }
            ],
            "pink_candle_cake": [
                {
                    "class": "bzj",
                    "display_name": "Pink Candle Cake",
                    "field": "ov",
                    "max_state_id": 17518,
                    "min_state_id": 17517,
                    "num_states": 2,
                    "numeric_id": 801,
                    "states": [
                        {
                            "declared_in": "ckp",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "pink_candle_cake"
                },
                {
                    "class": "bzk",
                    "display_name": "Cake with Pink Candle",
                    "field": "ov",
                    "max_state_id": 17518,
                    "min_state_id": 17517,
                    "num_states": 2,
                    "numeric_id": 801,
                    "states": [
                        {
                            "declared_in": "ckq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "pink_candle_cake"
                }
            ],
            "purple_candle_cake": [
                {
                    "class": "bzj",
                    "display_name": "Purple Candle Cake",
                    "field": "oz",
                    "max_state_id": 17526,
                    "min_state_id": 17525,
                    "num_states": 2,
                    "numeric_id": 805,
                    "states": [
                        {
                            "declared_in": "ckp",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "purple_candle_cake"
                },
                {
                    "class": "bzk",
                    "display_name": "Cake with Purple Candle",
                    "field": "oz",
                    "max_state_id": 17526,
                    "min_state_id": 17525,
                    "num_states": 2,
                    "numeric_id": 805,
                    "states": [
                        {
                            "declared_in": "ckq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "purple_candle_cake"
                }
            ],
            "red_candle_cake": [
                {
                    "class": "bzj",
                    "display_name": "Red Candle Cake",
                    "field": "oD",
                    "max_state_id": 17534,
                    "min_state_id": 17533,
                    "num_states": 2,
                    "numeric_id": 809,
                    "states": [
                        {
                            "declared_in": "ckp",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "red_candle_cake"
                },
                {
                    "class": "bzk",
                    "display_name": "Cake with Red Candle",
                    "field": "oD",
                    "max_state_id": 17534,
                    "min_state_id": 17533,
                    "num_states": 2,
                    "numeric_id": 809,
                    "states": [
                        {
                            "declared_in": "ckq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "red_candle_cake"
                }
            ],
            "white_candle_cake": [
                {
                    "class": "bzj",
                    "display_name": "White Candle Cake",
                    "field": "op",
                    "max_state_id": 17506,
                    "min_state_id": 17505,
                    "num_states": 2,
                    "numeric_id": 795,
                    "states": [
                        {
                            "declared_in": "ckp",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "white_candle_cake"
                },
                {
                    "class": "bzk",
                    "display_name": "Cake with White Candle",
                    "field": "op",
                    "max_state_id": 17506,
                    "min_state_id": 17505,
                    "num_states": 2,
                    "numeric_id": 795,
                    "states": [
                        {
                            "declared_in": "ckq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "white_candle_cake"
                }
            ],
            "yellow_candle_cake": [
                {
                    "class": "bzj",
                    "display_name": "Yellow Candle Cake",
                    "field": "ot",
                    "max_state_id": 17514,
                    "min_state_id": 17513,
                    "num_states": 2,
                    "numeric_id": 799,
                    "states": [
                        {
                            "declared_in": "ckp",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "yellow_candle_cake"
                },
                {
                    "class": "bzk",
                    "display_name": "Cake with Yellow Candle",
                    "field": "ot",
                    "max_state_id": 17514,
                    "min_state_id": 17513,
                    "num_states": 2,
                    "numeric_id": 799,
                    "states": [
                        {
                            "declared_in": "ckq",
                            "field_name": "c",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "yellow_candle_cake"
                }
            ]
        }
    },
    "entities": {
        "dataserializers": {},
        "entity": {}
    },
    "items": {
        "item": {}
    },
    "language": {
        "block": {
            "minecraft.black_candle_cake": [
                "Black Candle Cake",
                "Cake with Black Candle"
            ],
            "minecraft.blue_candle_cake": [
                "Blue Candle Cake",
                "Cake with Blue Candle"
            ],
            "minecraft.brown_candle_cake": [
                "Brown Candle Cake",
                "Cake with Brown Candle"
            ],
            "minecraft.cyan_candle_cake": [
                "Cyan Candle Cake",
                "Cake with Cyan Candle"
            ],
            "minecraft.gray_candle_cake": [
                "Gray Candle Cake",
                "Cake with Gray Candle"
            ],
            "minecraft.green_candle_cake": [
                "Green Candle Cake",
                "Cake with Green Candle"
            ],
            "minecraft.light_blue_candle_cake": [
                "Light Blue Candle Cake",
                "Cake with Light Blue Candle"
            ],
            "minecraft.light_gray_candle_cake": [
                "Light Gray Candle Cake",
                "Cake with Light Gray Candle"
            ],
            "minecraft.lime_candle_cake": [
                "Lime Candle Cake",
                "Cake with Lime Candle"
            ],
            "minecraft.magenta_candle_cake": [
                "Magenta Candle Cake",
                "Cake with Magenta Candle"
            ],
            "minecraft.orange_candle_cake": [
                "Orange Candle Cake",
                "Cake with Orange Candle"
            ],
            "minecraft.pink_candle_cake": [
                "Pink Candle Cake",
                "Cake with Pink Candle"
            ],
            "minecraft.purple_candle_cake": [
                "Purple Candle Cake",
                "Cake with Purple Candle"
            ],
            "minecraft.red_candle_cake": [
                "Red Candle Cake",
                "Cake with Red Candle"
            ],
            "minecraft.white_candle_cake": [
                "White Candle Cake",
                "Cake with White Candle"
            ],
            "minecraft.yellow_candle_cake": [
                "Yellow Candle Cake",
                "Cake with Yellow Candle"
            ]
        },
        "disconnect": {
            "unknownHost": [
                null,
                "Unknown host"
            ]
        }
    },
    "packets": {
        "packet": {
            "PLAY_CLIENTBOUND_30": [
                {
                    "class": "rd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 48,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 48,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_31": [
                {
                    "class": "re.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 49,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "e",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 4))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "h",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 0x8))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "re.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 49,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_32": [
                {
                    "class": "rf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 50,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 50,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "e",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 4))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "h",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 0x8))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_33": [
                {
                    "class": "rg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 51,
                    "instructions": [],
                    "state": "PLAY"
                },
                {
                    "class": "rg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 51,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_34": [
                {
                    "class": "rh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 52,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 52,
                    "instructions": [],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_35": [
                {
                    "class": "ri.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 53,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ri$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "args": "packetbuffer, itv",
                                    "field": "a",
                                    "method": "a(Lob;Lri$b;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "ri$a",
                                    "type": "abstract"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ri.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 53,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_36": [
                {
                    "class": "rj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 54,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 54,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "rj$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "args": "packetbuffer, itv",
                                    "field": "a",
                                    "method": "a(Lob;Lrj$b;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "rj$a",
                                    "type": "abstract"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_37": [
                {
                    "class": "rk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 55,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "rk$a.a(f)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 55,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_38": [
                {
                    "class": "rl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 56,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "bnb.values()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((afa$a)this.d.b.get(var5))",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6 == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "afa$a.a(var6)",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "afa$a.b(var6)",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "wp",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "condition": "a == rl$a.a",
                            "instructions": [
                                {
                                    "field": "c.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.c.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "wp",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 56,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "rl$a.a(f)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_39": [
                {
                    "class": "rm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 57,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 57,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "bnc.values()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((afc$a)this.d.b.get(var5))",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6 == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "var6.a",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var6.b",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "wr",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "condition": "a == rm$a.a",
                            "instructions": [
                                {
                                    "field": "c.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.c.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "wr",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3A": [
                {
                    "class": "rn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 58,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "asg.a(b)",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 58,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3B": [
                {
                    "class": "ro.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 59,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "1",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "boolean"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ro.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 59,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "ash.a(b)",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3C": [
                {
                    "class": "rp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 60,
                    "instructions": [
                        {
                            "field": "cnb.s.encode(rp::j)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "bvu.a(e)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 60,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "1",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "boolean"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3D": [
                {
                    "class": "rq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 61,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 61,
                    "instructions": [
                        {
                            "field": "cnc.s.encode(rq::j)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "bvv.a(e)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3E": [
                {
                    "class": "rr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 62,
                    "instructions": [
                        {
                            "field": "b.s()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < c.length",
                            "instructions": [
                                {
                                    "field": "(long)((byw.i(d[var2]) << 0xc) | c[var2])",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 62,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3F": [
                {
                    "class": "rs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 63,
                    "instructions": [
                        {
                            "field": "(a != null) ? 1 : 0",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a != null",
                            "instructions": [
                                {
                                    "field": "a",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 63,
                    "instructions": [
                        {
                            "field": "b.s()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < c.length",
                            "instructions": [
                                {
                                    "field": "(long)((byx.i(d[var2]) << 0xc) | c[var2])",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_40": [
                {
                    "class": "rt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 64,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 64,
                    "instructions": [
                        {
                            "field": "(a != null) ? 1 : 0",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a != null",
                            "instructions": [
                                {
                                    "field": "a",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_41": [
                {
                    "class": "ru.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 65,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ru.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 65,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_42": [
                {
                    "class": "rv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 66,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 66,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_43": [
                {
                    "class": "rw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 67,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 67,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_44": [
                {
                    "class": "rx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 68,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 68,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_47": [
                {
                    "class": "sa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 71,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 71,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_48": [
                {
                    "class": "sb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 72,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 72,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_49": [
                {
                    "class": "sc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 73,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 73,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4A": [
                {
                    "class": "sd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 74,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 74,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4B": [
                {
                    "class": "se.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 75,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "se.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 75,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4C": [
                {
                    "class": "sf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 76,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "metadata"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 76,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4D": [
                {
                    "class": "sg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 77,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 77,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "metadata"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4E": [
                {
                    "class": "sh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 78,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 78,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4F": [
                {
                    "class": "si.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 79,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.c.size()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var3"
                        },
                        {
                            "condition": "var3 < var2",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.datafixers.util.Pair)this.c.get(var3))",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((ast)var4.getFirst())",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((var3 != (var2 - 1)) ? 1 : 0)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var5.ordinal()",
                                    "var": "var7"
                                },
                                {
                                    "field": "(var6) ? (var7 | -128) : var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "(bpx)var4.getSecond()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "amount": "1",
                                    "field": "var3",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "si.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 79,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_50": [
                {
                    "class": "sj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 80,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 80,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.c.size()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var3"
                        },
                        {
                            "condition": "var3 < var2",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.datafixers.util.Pair)this.c.get(var3))",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((asu)var4.getFirst())",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((var3 != (var2 - 1)) ? 1 : 0)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var5.ordinal()",
                                    "var": "var7"
                                },
                                {
                                    "field": "(var6) ? (var7 | -128) : var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "(bpy)var4.getSecond()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "amount": "1",
                                    "field": "var3",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_51": [
                {
                    "class": "sk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 81,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 81,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_52": [
                {
                    "class": "sl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 82,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 82,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_53": [
                {
                    "class": "sm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 83,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 83,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_54": [
                {
                    "class": "sn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 84,
                    "instructions": [
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "sn.b(h)",
                            "instructions": [
                                {
                                    "field": "((sn$b)k.orElseThrow(sn::g)).a",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((sn$b)k.orElseThrow(sn::g)).g",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "((sn$b)k.orElseThrow(sn::g)).d",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((sn$b)k.orElseThrow(sn::g)).e",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((sn$b)k.orElseThrow(sn::g)).f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "((sn$b)k.orElseThrow(sn::g)).b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((sn$b)k.orElseThrow(sn::g)).c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "sn.a(h)",
                            "instructions": [
                                {
                                    "field": "j.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.j.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "java.lang.String",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 84,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint[]"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_55": [
                {
                    "class": "so.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 85,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "(b == null) ? \"\" : b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "condition": "d != xe$a.b",
                            "instructions": [
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "so.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 85,
                    "instructions": [
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "so.b(h)",
                            "instructions": [
                                {
                                    "field": "((so$b)k.orElseThrow(so::g)).a",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((so$b)k.orElseThrow(so::g)).g",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "((so$b)k.orElseThrow(so::g)).d",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((so$b)k.orElseThrow(so::g)).e",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((so$b)k.orElseThrow(so::g)).f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "((so$b)k.orElseThrow(so::g)).b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((so$b)k.orElseThrow(so::g)).c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "so.a(h)",
                            "instructions": [
                                {
                                    "field": "j.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.j.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "java.lang.String",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_56": [
                {
                    "class": "sp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 86,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 86,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "(b == null) ? \"\" : b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "condition": "d != xg$a.b",
                            "instructions": [
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_57": [
                {
                    "class": "sq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 87,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 87,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_58": [
                {
                    "class": "sr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 88,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 88,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_59": [
                {
                    "class": "ss.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 89,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ss.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 89,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5A": [
                {
                    "class": "st.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 90,
                    "instructions": [
                        {
                            "field": "gr.T.a(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "st.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 90,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5B": [
                {
                    "class": "su.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 91,
                    "instructions": [
                        {
                            "field": "gr.T.a(b)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "su.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 91,
                    "instructions": [
                        {
                            "field": "gr.T.a(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5C": [
                {
                    "class": "sv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 92,
                    "instructions": [
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "condition": "c != null",
                                    "instructions": [
                                        {
                                            "field": "3",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "c",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "c != null",
                                            "instructions": [
                                                {
                                                    "field": "2",
                                                    "operation": "write",
                                                    "type": "byte"
                                                },
                                                {
                                                    "field": "c",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "byte"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 92,
                    "instructions": [
                        {
                            "field": "gr.T.a(b)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5D": [
                {
                    "class": "sw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 93,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 93,
                    "instructions": [
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "condition": "c != null",
                                    "instructions": [
                                        {
                                            "field": "3",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "c",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "c != null",
                                            "instructions": [
                                                {
                                                    "field": "2",
                                                    "operation": "write",
                                                    "type": "byte"
                                                },
                                                {
                                                    "field": "c",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "byte"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5E": [
                {
                    "class": "sx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 94,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 94,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5F": [
                {
                    "class": "sy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 95,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 95,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_60": [
                {
                    "class": "sz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 96,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 96,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_61": [
                {
                    "class": "ta.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 97,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<wp, ad$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "condition": "itv.getValue().a == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "itv.getValue().a",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "condition": "itv.getValue().c == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "itv.getValue().c.a",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.b",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.c",
                                            "operation": "write",
                                            "type": "itemstack"
                                        },
                                        {
                                            "field": "itv.getValue().c.e",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 1)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.f",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 2)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.h",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 4)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().c.d",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "itv.getValue().c.i",
                                            "operation": "write",
                                            "type": "float"
                                        },
                                        {
                                            "field": "itv.getValue().c.j",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "field": "itv.getValue().e.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().e.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, ai>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "itv.getValue().f.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "itv.getValue().f",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.length",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5",
                                            "var": "var6"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "var6.length",
                                            "var": "var7"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var8"
                                        },
                                        {
                                            "condition": "var8 < var7",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "var6[var8]",
                                                    "var": "var9"
                                                },
                                                {
                                                    "field": "var9",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "amount": "1",
                                                    "field": "var8",
                                                    "operation": "increment"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "wp",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<wp, af>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, aj>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "(itv.getValue().b != null) ? 1 : 0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.getValue().b != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().b.getTime()",
                                                    "operation": "write",
                                                    "type": "long"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ta.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 97,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_62": [
                {
                    "class": "tb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 98,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "tb$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "gr.al.b(itv.a())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "itv.c().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.c().iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "aua",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.a()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "double"
                                        },
                                        {
                                            "field": "itv.c().a()",
                                            "operation": "write",
                                            "type": "byte"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "tb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 98,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<wr, ad$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "condition": "itv.getValue().a == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "itv.getValue().a",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "condition": "itv.getValue().c == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "itv.getValue().c.a",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.b",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.c",
                                            "operation": "write",
                                            "type": "itemstack"
                                        },
                                        {
                                            "field": "itv.getValue().c.e",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 1)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.f",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 2)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.h",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 4)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().c.d",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "itv.getValue().c.i",
                                            "operation": "write",
                                            "type": "float"
                                        },
                                        {
                                            "field": "itv.getValue().c.j",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "field": "itv.getValue().e.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().e.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, ai>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "itv.getValue().f.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "itv.getValue().f",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.length",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5",
                                            "var": "var6"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "var6.length",
                                            "var": "var7"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var8"
                                        },
                                        {
                                            "condition": "var8 < var7",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "var6[var8]",
                                                    "var": "var9"
                                                },
                                                {
                                                    "field": "var9",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "amount": "1",
                                                    "field": "var8",
                                                    "operation": "increment"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "wr",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<wr, af>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, aj>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "(itv.getValue().b != null) ? 1 : 0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.getValue().b != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().b.getTime()",
                                                    "operation": "write",
                                                    "type": "long"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_63": [
                {
                    "class": "tc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 99,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "tc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 99,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "tc$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "gr.al.b(itv.a())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "itv.c().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.c().iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "aub",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.a()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "double"
                                        },
                                        {
                                            "field": "itv.c().a()",
                                            "operation": "write",
                                            "type": "byte"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_64": [
                {
                    "class": "td.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 100,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "bsp",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "gr.ak.b(itv.ai_())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.f()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "args": "packetbuffer, itv",
                                    "field": "itv.ai_()",
                                    "method": "a(Lob;Lbsp;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "bsr",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "td.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 100,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_65": [
                {
                    "class": "te.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 101,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<wo, aft$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<wp, it.unimi.dsi.fastutil.ints.IntList>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "field": "itv.getValue().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.getValue().iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "te.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 101,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "bsq",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "gr.ak.b(itv.R_())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.f()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "args": "packetbuffer, itv",
                                    "field": "itv.R_()",
                                    "method": "a(Lob;Lbsq;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "bss",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_66": [
                null,
                {
                    "class": "tf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 102,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<wq, afv$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<wr, it.unimi.dsi.fastutil.ints.IntList>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "field": "itv.getValue().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.getValue().iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1D": [
                {
                    "class": "ui.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "uj.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1E": [
                {
                    "class": "uj.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "uk.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1F": [
                {
                    "class": "uk.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ul.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_20": [
                {
                    "class": "ul.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "um.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_21": [
                {
                    "class": "um.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "a == um$a.a",
                            "instructions": [
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "un.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_22": [
                {
                    "class": "un.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "uo.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "a == uo$a.a",
                            "instructions": [
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_23": [
                {
                    "class": "uo.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "up.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_24": [
                {
                    "class": "up.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "uq.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_25": [
                {
                    "class": "uq.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 1)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 2)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "h",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 4)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ur.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_26": [
                {
                    "class": "ur.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "us.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 1)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 2)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "h",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 4)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_27": [
                {
                    "class": "us.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ut.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_28": [
                {
                    "class": "ut.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "f.c()",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "uu.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_29": [
                {
                    "class": "uu.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h.u()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "h.v()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "h.w()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i.u()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i.v()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i.w()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "l",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "p",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "q",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "m",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 1)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "n",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 2)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "o",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 4)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "uv.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "f.c()",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_2A": [
                {
                    "class": "uv.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < 4",
                            "instructions": [
                                {
                                    "field": "c[var2]",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "uw.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h.u()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "h.v()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "h.w()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i.u()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i.v()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i.w()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "l",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "p",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "q",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "m",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 1)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "n",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 2)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "o",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 4)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_2B": [
                {
                    "class": "uw.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ux.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < 4",
                            "instructions": [
                                {
                                    "field": "c[var2]",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_2C": [
                {
                    "class": "ux.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "uuid"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "uy.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_2D": [
                {
                    "class": "uy.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.a()",
                            "var": "var2"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "a.b()",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.e()",
                            "var": "var3"
                        },
                        {
                            "field": "(float)(var3.b - ((double)var2.u()))",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)(var3.c - ((double)var2.v()))",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)(var3.d - ((double)var2.w()))",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "a.d()",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "uz.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "uuid"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_2E": [
                {
                    "class": "uz.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "va.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.a()",
                            "var": "var2"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "a.b()",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.e()",
                            "var": "var3"
                        },
                        {
                            "field": "(float)(var3.b - ((double)var2.u()))",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)(var3.c - ((double)var2.v()))",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)(var3.d - ((double)var2.w()))",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "a.d()",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_2F": [
                null,
                {
                    "class": "vb.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 47,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                }
            ]
        }
    },
    "recipes": {
        "black_candle": [
            [
                {
                    "group": "dyed_candle",
                    "id": "minecraft:black_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "black_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "black_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "blue_candle": [
            [
                {
                    "group": "dyed_candle",
                    "id": "minecraft:blue_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "blue_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "blue_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "brown_candle": [
            [
                {
                    "group": "dyed_candle",
                    "id": "minecraft:brown_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "brown_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "brown_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "bundle": [
            [
                {
                    "id": "minecraft:bundle",
                    "makes": {
                        "count": 1,
                        "name": "bundle",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "-#-",
                            "# #",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "rabbit_hide",
                                "type": "item"
                            },
                            "-": {
                                "name": "string",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "string",
                                "type": "item"
                            },
                            {
                                "name": "rabbit_hide",
                                "type": "item"
                            },
                            {
                                "name": "string",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "rabbit_hide",
                                "type": "item"
                            },
                            null,
                            {
                                "name": "rabbit_hide",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "rabbit_hide",
                                "type": "item"
                            },
                            {
                                "name": "rabbit_hide",
                                "type": "item"
                            },
                            {
                                "name": "rabbit_hide",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "candle": [
            [
                {
                    "id": "minecraft:candle",
                    "makes": {
                        "count": 1,
                        "name": "candle",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "S",
                            "H"
                        ],
                        "subs": {
                            "H": {
                                "name": "honeycomb",
                                "type": "item"
                            },
                            "S": {
                                "name": "string",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "string",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "honeycomb",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "cyan_candle": [
            [
                {
                    "group": "dyed_candle",
                    "id": "minecraft:cyan_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "cyan_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "cyan_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "gray_candle": [
            [
                {
                    "group": "dyed_candle",
                    "id": "minecraft:gray_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "gray_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "gray_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "green_candle": [
            [
                {
                    "group": "dyed_candle",
                    "id": "minecraft:green_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "green_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "green_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "light_blue_candle": [
            [
                {
                    "group": "dyed_candle",
                    "id": "minecraft:light_blue_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "light_blue_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "light_blue_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "light_gray_candle": [
            [
                {
                    "group": "dyed_candle",
                    "id": "minecraft:light_gray_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "light_gray_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "light_gray_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "lime_candle": [
            [
                {
                    "group": "dyed_candle",
                    "id": "minecraft:lime_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "lime_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "lime_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "magenta_candle": [
            [
                {
                    "group": "dyed_candle",
                    "id": "minecraft:magenta_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "magenta_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "magenta_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "orange_candle": [
            [
                {
                    "group": "dyed_candle",
                    "id": "minecraft:orange_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "orange_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "orange_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "pink_candle": [
            [
                {
                    "group": "dyed_candle",
                    "id": "minecraft:pink_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "pink_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "pink_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "purple_candle": [
            [
                {
                    "group": "dyed_candle",
                    "id": "minecraft:purple_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "purple_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "purple_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "red_candle": [
            [
                {
                    "group": "dyed_candle",
                    "id": "minecraft:red_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "red_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "red_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "white_candle": [
            [
                {
                    "group": "dyed_candle",
                    "id": "minecraft:white_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "white_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "white_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ],
        "yellow_candle": [
            [
                {
                    "group": "dyed_candle",
                    "id": "minecraft:yellow_candle",
                    "ingredients": [
                        {
                            "name": "candle",
                            "type": "item"
                        },
                        {
                            "name": "yellow_dye",
                            "type": "item"
                        }
                    ],
                    "makes": {
                        "count": 1,
                        "name": "yellow_candle",
                        "type": "item"
                    },
                    "type": "shapeless"
                }
            ],
            null
        ]
    },
    "sounds": {},
    "stats": {},
    "tags": {
        "blocks/bee_growables": [
            {
                "name": "bee_growables",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:beetroots",
                    "minecraft:carrots",
                    "minecraft:potatoes",
                    "minecraft:wheat",
                    "minecraft:melon_stem",
                    "minecraft:pumpkin_stem",
                    "minecraft:sweet_berry_bush"
                ]
            },
            {
                "name": "bee_growables",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:beetroots",
                    "minecraft:carrots",
                    "minecraft:potatoes",
                    "minecraft:wheat",
                    "minecraft:melon_stem",
                    "minecraft:pumpkin_stem",
                    "minecraft:sweet_berry_bush",
                    "minecraft:cave_vines"
                ]
            }
        ],
        "blocks/lush_ground_replaceable": [
            {
                "name": "lush_ground_replaceable",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:stone",
                    "minecraft:granite",
                    "minecraft:diorite",
                    "minecraft:andesite",
                    "minecraft:tuff",
                    "minecraft:deepslate",
                    "minecraft:cave_vines_plant",
                    "minecraft:cave_vines",
                    "minecraft:dirt",
                    "minecraft:grass_block",
                    "minecraft:podzol",
                    "minecraft:coarse_dirt",
                    "minecraft:mycelium",
                    "minecraft:rooted_dirt",
                    "minecraft:moss_block",
                    "minecraft:clay",
                    "minecraft:gravel",
                    "minecraft:moss_block",
                    "minecraft:sand"
                ]
            },
            {
                "name": "lush_ground_replaceable",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:stone",
                    "minecraft:granite",
                    "minecraft:diorite",
                    "minecraft:andesite",
                    "minecraft:tuff",
                    "minecraft:deepslate",
                    "minecraft:cave_vines_plant",
                    "minecraft:cave_vines",
                    "minecraft:dirt",
                    "minecraft:grass_block",
                    "minecraft:podzol",
                    "minecraft:coarse_dirt",
                    "minecraft:mycelium",
                    "minecraft:rooted_dirt",
                    "minecraft:moss_block",
                    "minecraft:clay",
                    "minecraft:gravel",
                    "minecraft:sand"
                ]
            }
        ],
        "blocks/mineable/axe": [
            null,
            {
                "name": "mineable/axe",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:note_block",
                    "minecraft:attached_melon_stem",
                    "minecraft:attached_pumpkin_stem",
                    "minecraft:azalea",
                    "minecraft:bamboo",
                    "minecraft:barrel",
                    "minecraft:bee_nest",
                    "minecraft:beehive",
                    "minecraft:beetroots",
                    "minecraft:big_dripleaf_stem",
                    "minecraft:big_dripleaf",
                    "minecraft:bookshelf",
                    "minecraft:brown_mushroom_block",
                    "minecraft:brown_mushroom",
                    "minecraft:campfire",
                    "minecraft:carrots",
                    "minecraft:cartography_table",
                    "minecraft:carved_pumpkin",
                    "minecraft:cave_vines_plant",
                    "minecraft:cave_vines",
                    "minecraft:chest",
                    "minecraft:chorus_flower",
                    "minecraft:chorus_plant",
                    "minecraft:cocoa",
                    "minecraft:composter",
                    "minecraft:crafting_table",
                    "minecraft:crimson_fungus",
                    "minecraft:daylight_detector",
                    "minecraft:dead_bush",
                    "minecraft:fern",
                    "minecraft:fletching_table",
                    "minecraft:glow_lichen",
                    "minecraft:grass",
                    "minecraft:hanging_roots",
                    "minecraft:jack_o_lantern",
                    "minecraft:jukebox",
                    "minecraft:ladder",
                    "minecraft:large_fern",
                    "minecraft:lectern",
                    "minecraft:lily_pad",
                    "minecraft:loom",
                    "minecraft:melon_stem",
                    "minecraft:melon",
                    "minecraft:moss_carpet",
                    "minecraft:mushroom_stem",
                    "minecraft:nether_wart",
                    "minecraft:potatoes",
                    "minecraft:pumpkin_stem",
                    "minecraft:pumpkin",
                    "minecraft:red_mushroom_block",
                    "minecraft:red_mushroom",
                    "minecraft:scaffolding",
                    "minecraft:small_dripleaf",
                    "minecraft:smithing_table",
                    "minecraft:soul_campfire",
                    "minecraft:spore_blossom",
                    "minecraft:sugar_cane",
                    "minecraft:sweet_berry_bush",
                    "minecraft:tall_grass",
                    "minecraft:trapped_chest",
                    "minecraft:twisting_vines_plant",
                    "minecraft:twisting_vines",
                    "minecraft:vine",
                    "minecraft:warped_fungus",
                    "minecraft:weeping_vines_plant",
                    "minecraft:weeping_vines",
                    "minecraft:wheat",
                    "minecraft:white_banner",
                    "minecraft:orange_banner",
                    "minecraft:magenta_banner",
                    "minecraft:light_blue_banner",
                    "minecraft:yellow_banner",
                    "minecraft:lime_banner",
                    "minecraft:pink_banner",
                    "minecraft:gray_banner",
                    "minecraft:light_gray_banner",
                    "minecraft:cyan_banner",
                    "minecraft:purple_banner",
                    "minecraft:blue_banner",
                    "minecraft:brown_banner",
                    "minecraft:green_banner",
                    "minecraft:red_banner",
                    "minecraft:black_banner",
                    "minecraft:white_wall_banner",
                    "minecraft:orange_wall_banner",
                    "minecraft:magenta_wall_banner",
                    "minecraft:light_blue_wall_banner",
                    "minecraft:yellow_wall_banner",
                    "minecraft:lime_wall_banner",
                    "minecraft:pink_wall_banner",
                    "minecraft:gray_wall_banner",
                    "minecraft:light_gray_wall_banner",
                    "minecraft:cyan_wall_banner",
                    "minecraft:purple_wall_banner",
                    "minecraft:blue_wall_banner",
                    "minecraft:brown_wall_banner",
                    "minecraft:green_wall_banner",
                    "minecraft:red_wall_banner",
                    "minecraft:black_wall_banner",
                    "minecraft:acacia_fence_gate",
                    "minecraft:birch_fence_gate",
                    "minecraft:dark_oak_fence_gate",
                    "minecraft:jungle_fence_gate",
                    "minecraft:oak_fence_gate",
                    "minecraft:spruce_fence_gate",
                    "minecraft:crimson_fence_gate",
                    "minecraft:warped_fence_gate",
                    "minecraft:dandelion",
                    "minecraft:poppy",
                    "minecraft:blue_orchid",
                    "minecraft:allium",
                    "minecraft:azure_bluet",
                    "minecraft:red_tulip",
                    "minecraft:orange_tulip",
                    "minecraft:white_tulip",
                    "minecraft:pink_tulip",
                    "minecraft:oxeye_daisy",
                    "minecraft:cornflower",
                    "minecraft:lily_of_the_valley",
                    "minecraft:wither_rose",
                    "minecraft:azalea_leaves_flowers",
                    "minecraft:flowering_azalea",
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:peony",
                    "minecraft:rose_bush",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae",
                    "minecraft:oak_planks",
                    "minecraft:spruce_planks",
                    "minecraft:birch_planks",
                    "minecraft:jungle_planks",
                    "minecraft:acacia_planks",
                    "minecraft:dark_oak_planks",
                    "minecraft:crimson_planks",
                    "minecraft:warped_planks",
                    "minecraft:oak_sapling",
                    "minecraft:spruce_sapling",
                    "minecraft:birch_sapling",
                    "minecraft:jungle_sapling",
                    "minecraft:acacia_sapling",
                    "minecraft:dark_oak_sapling",
                    "minecraft:azalea",
                    "minecraft:flowering_azalea",
                    "minecraft:oak_sign",
                    "minecraft:spruce_sign",
                    "minecraft:birch_sign",
                    "minecraft:acacia_sign",
                    "minecraft:jungle_sign",
                    "minecraft:dark_oak_sign",
                    "minecraft:crimson_sign",
                    "minecraft:warped_sign",
                    "minecraft:oak_wall_sign",
                    "minecraft:spruce_wall_sign",
                    "minecraft:birch_wall_sign",
                    "minecraft:acacia_wall_sign",
                    "minecraft:jungle_wall_sign",
                    "minecraft:dark_oak_wall_sign",
                    "minecraft:crimson_wall_sign",
                    "minecraft:warped_wall_sign",
                    "minecraft:oak_button",
                    "minecraft:spruce_button",
                    "minecraft:birch_button",
                    "minecraft:jungle_button",
                    "minecraft:acacia_button",
                    "minecraft:dark_oak_button",
                    "minecraft:crimson_button",
                    "minecraft:warped_button",
                    "minecraft:oak_door",
                    "minecraft:spruce_door",
                    "minecraft:birch_door",
                    "minecraft:jungle_door",
                    "minecraft:acacia_door",
                    "minecraft:dark_oak_door",
                    "minecraft:crimson_door",
                    "minecraft:warped_door",
                    "minecraft:oak_fence",
                    "minecraft:acacia_fence",
                    "minecraft:dark_oak_fence",
                    "minecraft:spruce_fence",
                    "minecraft:birch_fence",
                    "minecraft:jungle_fence",
                    "minecraft:crimson_fence",
                    "minecraft:warped_fence",
                    "minecraft:oak_pressure_plate",
                    "minecraft:spruce_pressure_plate",
                    "minecraft:birch_pressure_plate",
                    "minecraft:jungle_pressure_plate",
                    "minecraft:acacia_pressure_plate",
                    "minecraft:dark_oak_pressure_plate",
                    "minecraft:crimson_pressure_plate",
                    "minecraft:warped_pressure_plate",
                    "minecraft:oak_slab",
                    "minecraft:spruce_slab",
                    "minecraft:birch_slab",
                    "minecraft:jungle_slab",
                    "minecraft:acacia_slab",
                    "minecraft:dark_oak_slab",
                    "minecraft:crimson_slab",
                    "minecraft:warped_slab",
                    "minecraft:oak_stairs",
                    "minecraft:spruce_stairs",
                    "minecraft:birch_stairs",
                    "minecraft:jungle_stairs",
                    "minecraft:acacia_stairs",
                    "minecraft:dark_oak_stairs",
                    "minecraft:crimson_stairs",
                    "minecraft:warped_stairs",
                    "minecraft:acacia_trapdoor",
                    "minecraft:birch_trapdoor",
                    "minecraft:dark_oak_trapdoor",
                    "minecraft:jungle_trapdoor",
                    "minecraft:oak_trapdoor",
                    "minecraft:spruce_trapdoor",
                    "minecraft:crimson_trapdoor",
                    "minecraft:warped_trapdoor"
                ]
            }
        ],
        "blocks/mineable/hoe": [
            null,
            {
                "name": "mineable/hoe",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:nether_wart_block",
                    "minecraft:warped_wart_block",
                    "minecraft:hay_block",
                    "minecraft:dried_kelp_block",
                    "minecraft:target",
                    "minecraft:shroomlight",
                    "minecraft:sponge",
                    "minecraft:wet_sponge",
                    "minecraft:jungle_leaves",
                    "minecraft:oak_leaves",
                    "minecraft:spruce_leaves",
                    "minecraft:dark_oak_leaves",
                    "minecraft:acacia_leaves",
                    "minecraft:birch_leaves",
                    "minecraft:azalea_leaves",
                    "minecraft:azalea_leaves_flowers",
                    "minecraft:sculk_sensor",
                    "minecraft:moss_block",
                    "minecraft:moss_carpet"
                ]
            }
        ],
        "blocks/mineable/pickaxe": [
            null,
            {
                "name": "mineable/pickaxe",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:stone",
                    "minecraft:granite",
                    "minecraft:polished_granite",
                    "minecraft:diorite",
                    "minecraft:polished_diorite",
                    "minecraft:andesite",
                    "minecraft:polished_andesite",
                    "minecraft:cobblestone",
                    "minecraft:gold_ore",
                    "minecraft:deepslate_gold_ore",
                    "minecraft:iron_ore",
                    "minecraft:deepslate_iron_ore",
                    "minecraft:coal_ore",
                    "minecraft:deepslate_coal_ore",
                    "minecraft:nether_gold_ore",
                    "minecraft:lapis_ore",
                    "minecraft:deepslate_lapis_ore",
                    "minecraft:lapis_block",
                    "minecraft:dispenser",
                    "minecraft:sandstone",
                    "minecraft:chiseled_sandstone",
                    "minecraft:cut_sandstone",
                    "minecraft:gold_block",
                    "minecraft:iron_block",
                    "minecraft:bricks",
                    "minecraft:mossy_cobblestone",
                    "minecraft:obsidian",
                    "minecraft:spawner",
                    "minecraft:diamond_ore",
                    "minecraft:deepslate_diamond_ore",
                    "minecraft:diamond_block",
                    "minecraft:furnace",
                    "minecraft:cobblestone_stairs",
                    "minecraft:stone_pressure_plate",
                    "minecraft:iron_door",
                    "minecraft:redstone_ore",
                    "minecraft:deepslate_redstone_ore",
                    "minecraft:netherrack",
                    "minecraft:basalt",
                    "minecraft:polished_basalt",
                    "minecraft:stone_bricks",
                    "minecraft:mossy_stone_bricks",
                    "minecraft:cracked_stone_bricks",
                    "minecraft:chiseled_stone_bricks",
                    "minecraft:iron_bars",
                    "minecraft:chain",
                    "minecraft:brick_stairs",
                    "minecraft:stone_brick_stairs",
                    "minecraft:nether_bricks",
                    "minecraft:nether_brick_fence",
                    "minecraft:nether_brick_stairs",
                    "minecraft:enchanting_table",
                    "minecraft:brewing_stand",
                    "minecraft:end_stone",
                    "minecraft:sandstone_stairs",
                    "minecraft:emerald_ore",
                    "minecraft:deepslate_emerald_ore",
                    "minecraft:ender_chest",
                    "minecraft:emerald_block",
                    "minecraft:light_weighted_pressure_plate",
                    "minecraft:heavy_weighted_pressure_plate",
                    "minecraft:redstone_block",
                    "minecraft:nether_quartz_ore",
                    "minecraft:hopper",
                    "minecraft:quartz_block",
                    "minecraft:chiseled_quartz_block",
                    "minecraft:quartz_pillar",
                    "minecraft:quartz_stairs",
                    "minecraft:dropper",
                    "minecraft:white_terracotta",
                    "minecraft:orange_terracotta",
                    "minecraft:magenta_terracotta",
                    "minecraft:light_blue_terracotta",
                    "minecraft:yellow_terracotta",
                    "minecraft:lime_terracotta",
                    "minecraft:pink_terracotta",
                    "minecraft:gray_terracotta",
                    "minecraft:light_gray_terracotta",
                    "minecraft:cyan_terracotta",
                    "minecraft:purple_terracotta",
                    "minecraft:blue_terracotta",
                    "minecraft:brown_terracotta",
                    "minecraft:green_terracotta",
                    "minecraft:red_terracotta",
                    "minecraft:black_terracotta",
                    "minecraft:iron_trapdoor",
                    "minecraft:prismarine",
                    "minecraft:prismarine_bricks",
                    "minecraft:dark_prismarine",
                    "minecraft:prismarine_stairs",
                    "minecraft:prismarine_brick_stairs",
                    "minecraft:dark_prismarine_stairs",
                    "minecraft:prismarine_slab",
                    "minecraft:prismarine_brick_slab",
                    "minecraft:dark_prismarine_slab",
                    "minecraft:terracotta",
                    "minecraft:coal_block",
                    "minecraft:red_sandstone",
                    "minecraft:chiseled_red_sandstone",
                    "minecraft:cut_red_sandstone",
                    "minecraft:red_sandstone_stairs",
                    "minecraft:stone_slab",
                    "minecraft:smooth_stone_slab",
                    "minecraft:sandstone_slab",
                    "minecraft:cut_sandstone_slab",
                    "minecraft:petrified_oak_slab",
                    "minecraft:cobblestone_slab",
                    "minecraft:brick_slab",
                    "minecraft:stone_brick_slab",
                    "minecraft:nether_brick_slab",
                    "minecraft:quartz_slab",
                    "minecraft:red_sandstone_slab",
                    "minecraft:cut_red_sandstone_slab",
                    "minecraft:purpur_slab",
                    "minecraft:smooth_stone",
                    "minecraft:smooth_sandstone",
                    "minecraft:smooth_quartz",
                    "minecraft:smooth_red_sandstone",
                    "minecraft:purpur_block",
                    "minecraft:purpur_pillar",
                    "minecraft:purpur_stairs",
                    "minecraft:end_stone_bricks",
                    "minecraft:magma_block",
                    "minecraft:red_nether_bricks",
                    "minecraft:bone_block",
                    "minecraft:observer",
                    "minecraft:white_glazed_terracotta",
                    "minecraft:orange_glazed_terracotta",
                    "minecraft:magenta_glazed_terracotta",
                    "minecraft:light_blue_glazed_terracotta",
                    "minecraft:yellow_glazed_terracotta",
                    "minecraft:lime_glazed_terracotta",
                    "minecraft:pink_glazed_terracotta",
                    "minecraft:gray_glazed_terracotta",
                    "minecraft:light_gray_glazed_terracotta",
                    "minecraft:cyan_glazed_terracotta",
                    "minecraft:purple_glazed_terracotta",
                    "minecraft:blue_glazed_terracotta",
                    "minecraft:brown_glazed_terracotta",
                    "minecraft:green_glazed_terracotta",
                    "minecraft:red_glazed_terracotta",
                    "minecraft:black_glazed_terracotta",
                    "minecraft:white_concrete",
                    "minecraft:orange_concrete",
                    "minecraft:magenta_concrete",
                    "minecraft:light_blue_concrete",
                    "minecraft:yellow_concrete",
                    "minecraft:lime_concrete",
                    "minecraft:pink_concrete",
                    "minecraft:gray_concrete",
                    "minecraft:light_gray_concrete",
                    "minecraft:cyan_concrete",
                    "minecraft:purple_concrete",
                    "minecraft:blue_concrete",
                    "minecraft:brown_concrete",
                    "minecraft:green_concrete",
                    "minecraft:red_concrete",
                    "minecraft:black_concrete",
                    "minecraft:dead_tube_coral_block",
                    "minecraft:dead_brain_coral_block",
                    "minecraft:dead_bubble_coral_block",
                    "minecraft:dead_fire_coral_block",
                    "minecraft:dead_horn_coral_block",
                    "minecraft:tube_coral_block",
                    "minecraft:brain_coral_block",
                    "minecraft:bubble_coral_block",
                    "minecraft:fire_coral_block",
                    "minecraft:horn_coral_block",
                    "minecraft:dead_tube_coral",
                    "minecraft:dead_brain_coral",
                    "minecraft:dead_bubble_coral",
                    "minecraft:dead_fire_coral",
                    "minecraft:dead_horn_coral",
                    "minecraft:dead_tube_coral_fan",
                    "minecraft:dead_brain_coral_fan",
                    "minecraft:dead_bubble_coral_fan",
                    "minecraft:dead_fire_coral_fan",
                    "minecraft:dead_horn_coral_fan",
                    "minecraft:dead_tube_coral_wall_fan",
                    "minecraft:dead_brain_coral_wall_fan",
                    "minecraft:dead_bubble_coral_wall_fan",
                    "minecraft:dead_fire_coral_wall_fan",
                    "minecraft:dead_horn_coral_wall_fan",
                    "minecraft:polished_granite_stairs",
                    "minecraft:smooth_red_sandstone_stairs",
                    "minecraft:mossy_stone_brick_stairs",
                    "minecraft:polished_diorite_stairs",
                    "minecraft:mossy_cobblestone_stairs",
                    "minecraft:end_stone_brick_stairs",
                    "minecraft:stone_stairs",
                    "minecraft:smooth_sandstone_stairs",
                    "minecraft:smooth_quartz_stairs",
                    "minecraft:granite_stairs",
                    "minecraft:andesite_stairs",
                    "minecraft:red_nether_brick_stairs",
                    "minecraft:polished_andesite_stairs",
                    "minecraft:diorite_stairs",
                    "minecraft:polished_granite_slab",
                    "minecraft:smooth_red_sandstone_slab",
                    "minecraft:mossy_stone_brick_slab",
                    "minecraft:polished_diorite_slab",
                    "minecraft:mossy_cobblestone_slab",
                    "minecraft:end_stone_brick_slab",
                    "minecraft:smooth_sandstone_slab",
                    "minecraft:smooth_quartz_slab",
                    "minecraft:granite_slab",
                    "minecraft:andesite_slab",
                    "minecraft:red_nether_brick_slab",
                    "minecraft:polished_andesite_slab",
                    "minecraft:diorite_slab",
                    "minecraft:smoker",
                    "minecraft:blast_furnace",
                    "minecraft:grindstone",
                    "minecraft:stonecutter",
                    "minecraft:bell",
                    "minecraft:lantern",
                    "minecraft:soul_lantern",
                    "minecraft:warped_nylium",
                    "minecraft:crimson_nylium",
                    "minecraft:netherite_block",
                    "minecraft:ancient_debris",
                    "minecraft:crying_obsidian",
                    "minecraft:respawn_anchor",
                    "minecraft:lodestone",
                    "minecraft:blackstone",
                    "minecraft:blackstone_stairs",
                    "minecraft:blackstone_slab",
                    "minecraft:polished_blackstone",
                    "minecraft:polished_blackstone_bricks",
                    "minecraft:cracked_polished_blackstone_bricks",
                    "minecraft:chiseled_polished_blackstone",
                    "minecraft:polished_blackstone_brick_slab",
                    "minecraft:polished_blackstone_brick_stairs",
                    "minecraft:gilded_blackstone",
                    "minecraft:polished_blackstone_stairs",
                    "minecraft:polished_blackstone_slab",
                    "minecraft:polished_blackstone_pressure_plate",
                    "minecraft:chiseled_nether_bricks",
                    "minecraft:cracked_nether_bricks",
                    "minecraft:quartz_bricks",
                    "minecraft:tuff",
                    "minecraft:calcite",
                    "minecraft:oxidized_copper",
                    "minecraft:weathered_copper",
                    "minecraft:exposed_copper",
                    "minecraft:copper_block",
                    "minecraft:copper_ore",
                    "minecraft:deepslate_copper_ore",
                    "minecraft:oxidized_cut_copper",
                    "minecraft:weathered_cut_copper",
                    "minecraft:exposed_cut_copper",
                    "minecraft:cut_copper",
                    "minecraft:oxidized_cut_copper_stairs",
                    "minecraft:weathered_cut_copper_stairs",
                    "minecraft:exposed_cut_copper_stairs",
                    "minecraft:cut_copper_stairs",
                    "minecraft:oxidized_cut_copper_slab",
                    "minecraft:weathered_cut_copper_slab",
                    "minecraft:exposed_cut_copper_slab",
                    "minecraft:cut_copper_slab",
                    "minecraft:waxed_copper_block",
                    "minecraft:waxed_weathered_copper",
                    "minecraft:waxed_exposed_copper",
                    "minecraft:waxed_oxidized_copper",
                    "minecraft:waxed_oxidized_cut_copper",
                    "minecraft:waxed_weathered_cut_copper",
                    "minecraft:waxed_exposed_cut_copper",
                    "minecraft:waxed_cut_copper",
                    "minecraft:waxed_oxidized_cut_copper_stairs",
                    "minecraft:waxed_weathered_cut_copper_stairs",
                    "minecraft:waxed_exposed_cut_copper_stairs",
                    "minecraft:waxed_cut_copper_stairs",
                    "minecraft:waxed_oxidized_cut_copper_slab",
                    "minecraft:waxed_weathered_cut_copper_slab",
                    "minecraft:waxed_exposed_cut_copper_slab",
                    "minecraft:waxed_cut_copper_slab",
                    "minecraft:lightning_rod",
                    "minecraft:pointed_dripstone",
                    "minecraft:dripstone_block",
                    "minecraft:deepslate",
                    "minecraft:cobbled_deepslate",
                    "minecraft:cobbled_deepslate_stairs",
                    "minecraft:cobbled_deepslate_slab",
                    "minecraft:polished_deepslate",
                    "minecraft:polished_deepslate_stairs",
                    "minecraft:polished_deepslate_slab",
                    "minecraft:deepslate_tiles",
                    "minecraft:deepslate_tile_stairs",
                    "minecraft:deepslate_tile_slab",
                    "minecraft:deepslate_bricks",
                    "minecraft:deepslate_brick_stairs",
                    "minecraft:deepslate_brick_slab",
                    "minecraft:chiseled_deepslate",
                    "minecraft:cracked_deepslate_bricks",
                    "minecraft:cracked_deepslate_tiles",
                    "minecraft:smooth_basalt",
                    "minecraft:raw_iron_block",
                    "minecraft:raw_copper_block",
                    "minecraft:raw_gold_block",
                    "minecraft:ice",
                    "minecraft:packed_ice",
                    "minecraft:blue_ice",
                    "minecraft:stone_button",
                    "minecraft:piston",
                    "minecraft:sticky_piston",
                    "minecraft:piston_head",
                    "minecraft:amethyst_cluster",
                    "minecraft:small_amethyst_bud",
                    "minecraft:medium_amethyst_bud",
                    "minecraft:large_amethyst_bud",
                    "minecraft:amethyst_block",
                    "minecraft:budding_amethyst",
                    "minecraft:infested_cobblestone",
                    "minecraft:infested_chiseled_stone_bricks",
                    "minecraft:infested_cracked_stone_bricks",
                    "minecraft:infested_deepslate",
                    "minecraft:infested_stone",
                    "minecraft:infested_mossy_stone_bricks",
                    "minecraft:infested_stone_bricks",
                    "minecraft:cobblestone_wall",
                    "minecraft:mossy_cobblestone_wall",
                    "minecraft:brick_wall",
                    "minecraft:prismarine_wall",
                    "minecraft:red_sandstone_wall",
                    "minecraft:mossy_stone_brick_wall",
                    "minecraft:granite_wall",
                    "minecraft:stone_brick_wall",
                    "minecraft:nether_brick_wall",
                    "minecraft:andesite_wall",
                    "minecraft:red_nether_brick_wall",
                    "minecraft:sandstone_wall",
                    "minecraft:end_stone_brick_wall",
                    "minecraft:diorite_wall",
                    "minecraft:blackstone_wall",
                    "minecraft:polished_blackstone_brick_wall",
                    "minecraft:polished_blackstone_wall",
                    "minecraft:cobbled_deepslate_wall",
                    "minecraft:polished_deepslate_wall",
                    "minecraft:deepslate_tile_wall",
                    "minecraft:deepslate_brick_wall",
                    "minecraft:shulker_box",
                    "minecraft:black_shulker_box",
                    "minecraft:blue_shulker_box",
                    "minecraft:brown_shulker_box",
                    "minecraft:cyan_shulker_box",
                    "minecraft:gray_shulker_box",
                    "minecraft:green_shulker_box",
                    "minecraft:light_blue_shulker_box",
                    "minecraft:light_gray_shulker_box",
                    "minecraft:lime_shulker_box",
                    "minecraft:magenta_shulker_box",
                    "minecraft:orange_shulker_box",
                    "minecraft:pink_shulker_box",
                    "minecraft:purple_shulker_box",
                    "minecraft:red_shulker_box",
                    "minecraft:white_shulker_box",
                    "minecraft:yellow_shulker_box",
                    "minecraft:anvil",
                    "minecraft:chipped_anvil",
                    "minecraft:damaged_anvil",
                    "minecraft:cauldron",
                    "minecraft:water_cauldron",
                    "minecraft:lava_cauldron",
                    "minecraft:powder_snow_cauldron",
                    "minecraft:rail",
                    "minecraft:powered_rail",
                    "minecraft:detector_rail",
                    "minecraft:activator_rail"
                ]
            }
        ],
        "blocks/mineable/shovel": [
            null,
            {
                "name": "mineable/shovel",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:clay",
                    "minecraft:dirt",
                    "minecraft:coarse_dirt",
                    "minecraft:podzol",
                    "minecraft:farmland",
                    "minecraft:grass_block",
                    "minecraft:gravel",
                    "minecraft:mycelium",
                    "minecraft:sand",
                    "minecraft:red_sand",
                    "minecraft:snow_block",
                    "minecraft:snow",
                    "minecraft:soul_sand",
                    "minecraft:dirt_path",
                    "minecraft:white_concrete_powder",
                    "minecraft:orange_concrete_powder",
                    "minecraft:magenta_concrete_powder",
                    "minecraft:light_blue_concrete_powder",
                    "minecraft:yellow_concrete_powder",
                    "minecraft:lime_concrete_powder",
                    "minecraft:pink_concrete_powder",
                    "minecraft:gray_concrete_powder",
                    "minecraft:light_gray_concrete_powder",
                    "minecraft:cyan_concrete_powder",
                    "minecraft:purple_concrete_powder",
                    "minecraft:blue_concrete_powder",
                    "minecraft:brown_concrete_powder",
                    "minecraft:green_concrete_powder",
                    "minecraft:red_concrete_powder",
                    "minecraft:black_concrete_powder",
                    "minecraft:soul_soil",
                    "minecraft:rooted_dirt"
                ]
            }
        ],
        "blocks/needs_diamond_tool": [
            null,
            {
                "name": "needs_diamond_tool",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:obsidian",
                    "minecraft:crying_obsidian",
                    "minecraft:netherite_block",
                    "minecraft:respawn_anchor",
                    "minecraft:ancient_debris"
                ]
            }
        ],
        "blocks/needs_iron_tool": [
            null,
            {
                "name": "needs_iron_tool",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:diamond_block",
                    "minecraft:diamond_ore",
                    "minecraft:deepslate_diamond_ore",
                    "minecraft:emerald_ore",
                    "minecraft:deepslate_emerald_ore",
                    "minecraft:emerald_block",
                    "minecraft:gold_block",
                    "minecraft:raw_gold_block",
                    "minecraft:gold_ore",
                    "minecraft:deepslate_gold_ore",
                    "minecraft:redstone_ore",
                    "minecraft:deepslate_redstone_ore"
                ]
            }
        ],
        "blocks/needs_stone_tool": [
            null,
            {
                "name": "needs_stone_tool",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:iron_block",
                    "minecraft:raw_iron_block",
                    "minecraft:iron_ore",
                    "minecraft:deepslate_iron_ore",
                    "minecraft:lapis_block",
                    "minecraft:lapis_ore",
                    "minecraft:deepslate_lapis_ore",
                    "minecraft:copper_block",
                    "minecraft:raw_copper_block",
                    "minecraft:copper_ore",
                    "minecraft:deepslate_copper_ore",
                    "minecraft:cut_copper_slab",
                    "minecraft:cut_copper_stairs",
                    "minecraft:cut_copper",
                    "minecraft:weathered_copper",
                    "minecraft:weathered_cut_copper_slab",
                    "minecraft:weathered_cut_copper_stairs",
                    "minecraft:weathered_cut_copper",
                    "minecraft:weathered_copper",
                    "minecraft:weathered_cut_copper_slab",
                    "minecraft:weathered_cut_copper_stairs",
                    "minecraft:weathered_cut_copper",
                    "minecraft:exposed_copper",
                    "minecraft:exposed_cut_copper_slab",
                    "minecraft:exposed_cut_copper_stairs",
                    "minecraft:exposed_cut_copper",
                    "minecraft:waxed_copper_block",
                    "minecraft:waxed_cut_copper_slab",
                    "minecraft:waxed_cut_copper_stairs",
                    "minecraft:waxed_cut_copper",
                    "minecraft:waxed_weathered_copper",
                    "minecraft:waxed_weathered_cut_copper_slab",
                    "minecraft:waxed_weathered_cut_copper_stairs",
                    "minecraft:waxed_weathered_cut_copper",
                    "minecraft:waxed_exposed_copper",
                    "minecraft:waxed_exposed_cut_copper_slab",
                    "minecraft:waxed_exposed_cut_copper_stairs",
                    "minecraft:waxed_exposed_cut_copper",
                    "minecraft:waxed_oxidized_copper",
                    "minecraft:waxed_oxidized_cut_copper_slab",
                    "minecraft:waxed_oxidized_cut_copper_stairs",
                    "minecraft:waxed_oxidized_cut_copper",
                    "minecraft:lightning_rod"
                ]
            }
        ],
        "blocks/saplings": [
            {
                "name": "saplings",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:oak_sapling",
                    "minecraft:spruce_sapling",
                    "minecraft:birch_sapling",
                    "minecraft:jungle_sapling",
                    "minecraft:acacia_sapling",
                    "minecraft:dark_oak_sapling"
                ]
            },
            {
                "name": "saplings",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:oak_sapling",
                    "minecraft:spruce_sapling",
                    "minecraft:birch_sapling",
                    "minecraft:jungle_sapling",
                    "minecraft:acacia_sapling",
                    "minecraft:dark_oak_sapling",
                    "minecraft:azalea",
                    "minecraft:flowering_azalea"
                ]
            }
        ],
        "items/saplings": [
            {
                "name": "saplings",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:oak_sapling",
                    "minecraft:spruce_sapling",
                    "minecraft:birch_sapling",
                    "minecraft:jungle_sapling",
                    "minecraft:acacia_sapling",
                    "minecraft:dark_oak_sapling"
                ]
            },
            {
                "name": "saplings",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:oak_sapling",
                    "minecraft:spruce_sapling",
                    "minecraft:birch_sapling",
                    "minecraft:jungle_sapling",
                    "minecraft:acacia_sapling",
                    "minecraft:dark_oak_sapling",
                    "minecraft:azalea",
                    "minecraft:flowering_azalea"
                ]
            }
        ]
    },
    "tileentity": {
        "tileentities": {}
    },
    "version": {
        "data": [
            2713,
            2714
        ],
        "id": [
            "21w18a",
            "21w19a"
        ],
        "name": [
            "21w18a",
            "21w19a"
        ],
        "protocol": [
            1073741850,
            1073741851
        ]
    }
}