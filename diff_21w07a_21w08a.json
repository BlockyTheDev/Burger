{
    "achievements": {},
    "blocks": {
        "block": {
            "chiseled_deepslate": [
                null,
                {
                    "class": "bxn",
                    "display_name": "Chiseled Deepslate",
                    "field": "pW",
                    "hardness": 1.5,
                    "max_state_id": 20369,
                    "min_state_id": 20369,
                    "num_states": 1,
                    "numeric_id": 880,
                    "resistance": 6.0,
                    "states": [],
                    "text_id": "chiseled_deepslate"
                }
            ],
            "chiseled_grimstone": [
                {
                    "class": "bww",
                    "display_name": "Chiseled Grimstone",
                    "field": "pQ",
                    "hardness": 1.5,
                    "max_state_id": 20362,
                    "min_state_id": 20362,
                    "num_states": 1,
                    "numeric_id": 874,
                    "resistance": 6.0,
                    "states": [],
                    "text_id": "chiseled_grimstone"
                },
                null
            ],
            "cobbled_deepslate": [
                null,
                {
                    "class": "bxn",
                    "display_name": "Cobbled Deepslate",
                    "field": "pG",
                    "max_state_id": 18725,
                    "min_state_id": 18725,
                    "num_states": 1,
                    "numeric_id": 864,
                    "states": [],
                    "text_id": "cobbled_deepslate"
                }
            ],
            "cobbled_deepslate_slab": [
                null,
                {
                    "class": "cdq",
                    "display_name": "Cobbled Deepslate Slab",
                    "field": "pI",
                    "hardness": 3.5,
                    "max_state_id": 18811,
                    "min_state_id": 18806,
                    "num_states": 6,
                    "numeric_id": 866,
                    "resistance": 6.0,
                    "states": [
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjt",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "cobbled_deepslate_slab"
                }
            ],
            "cobbled_deepslate_stairs": [
                null,
                {
                    "class": "ceg",
                    "display_name": "Cobbled Deepslate Stairs",
                    "field": "pH",
                    "max_state_id": 18805,
                    "min_state_id": 18726,
                    "num_states": 80,
                    "numeric_id": 865,
                    "states": [
                        {
                            "declared_in": "cjc",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjl",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cju",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "cobbled_deepslate_stairs"
                }
            ],
            "cobbled_deepslate_wall": [
                null,
                {
                    "class": "cfh",
                    "display_name": "Cobbled Deepslate Wall",
                    "field": "pJ",
                    "max_state_id": 19135,
                    "min_state_id": 18812,
                    "num_states": 324,
                    "numeric_id": 867,
                    "states": [
                        {
                            "declared_in": "cjc",
                            "field_name": "a",
                            "name": "up",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjx",
                            "field_name": "c",
                            "name": "north",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjx",
                            "field_name": "b",
                            "name": "east",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjx",
                            "field_name": "e",
                            "name": "west",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjx",
                            "field_name": "d",
                            "name": "south",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "field_name": "f",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "cobbled_deepslate_wall"
                }
            ],
            "deepslate": [
                null,
                {
                    "class": "bxn",
                    "display_name": "Deepslate",
                    "field": "pF",
                    "hardness": 3.0,
                    "max_state_id": 18724,
                    "min_state_id": 18724,
                    "num_states": 1,
                    "numeric_id": 863,
                    "resistance": 6.0,
                    "states": [],
                    "text_id": "deepslate"
                }
            ],
            "deepslate_brick_slab": [
                null,
                {
                    "class": "cdq",
                    "display_name": "Deepslate Brick Slab",
                    "field": "pU",
                    "max_state_id": 20044,
                    "min_state_id": 20039,
                    "num_states": 6,
                    "numeric_id": 878,
                    "states": [
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjt",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "deepslate_brick_slab"
                }
            ],
            "deepslate_brick_stairs": [
                null,
                {
                    "class": "ceg",
                    "display_name": "Deepslate Brick Stairs",
                    "field": "pT",
                    "max_state_id": 20038,
                    "min_state_id": 19959,
                    "num_states": 80,
                    "numeric_id": 877,
                    "states": [
                        {
                            "declared_in": "cjc",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjl",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cju",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "deepslate_brick_stairs"
                }
            ],
            "deepslate_brick_wall": [
                null,
                {
                    "class": "cfh",
                    "display_name": "Deepslate Brick Wall",
                    "field": "pV",
                    "max_state_id": 20368,
                    "min_state_id": 20045,
                    "num_states": 324,
                    "numeric_id": 879,
                    "states": [
                        {
                            "declared_in": "cjc",
                            "field_name": "a",
                            "name": "up",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjx",
                            "field_name": "c",
                            "name": "north",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjx",
                            "field_name": "b",
                            "name": "east",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjx",
                            "field_name": "e",
                            "name": "west",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjx",
                            "field_name": "d",
                            "name": "south",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "field_name": "f",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "deepslate_brick_wall"
                }
            ],
            "deepslate_bricks": [
                null,
                {
                    "class": "bxn",
                    "display_name": "Deepslate Bricks",
                    "field": "pS",
                    "hardness": 1.5,
                    "max_state_id": 19958,
                    "min_state_id": 19958,
                    "num_states": 1,
                    "numeric_id": 876,
                    "resistance": 6.0,
                    "states": [],
                    "text_id": "deepslate_bricks"
                }
            ],
            "deepslate_diamond_ore": [
                null,
                {
                    "class": "cch",
                    "display_name": "Deepslate Diamond Ore",
                    "field": "bZ",
                    "hardness": 4.5,
                    "max_state_id": 3410,
                    "min_state_id": 3410,
                    "num_states": 1,
                    "numeric_id": 155,
                    "resistance": 3.0,
                    "states": [],
                    "text_id": "deepslate_diamond_ore"
                }
            ],
            "deepslate_gold_ore": [
                null,
                {
                    "class": "cch",
                    "display_name": "Deepslate Gold Ore",
                    "field": "G",
                    "hardness": 4.5,
                    "max_state_id": 70,
                    "min_state_id": 70,
                    "num_states": 1,
                    "numeric_id": 32,
                    "resistance": 3.0,
                    "states": [],
                    "text_id": "deepslate_gold_ore"
                }
            ],
            "deepslate_iron_ore": [
                null,
                {
                    "class": "cch",
                    "display_name": "Deepslate Iron Ore",
                    "field": "I",
                    "hardness": 4.5,
                    "max_state_id": 72,
                    "min_state_id": 72,
                    "num_states": 1,
                    "numeric_id": 34,
                    "resistance": 3.0,
                    "states": [],
                    "text_id": "deepslate_iron_ore"
                }
            ],
            "deepslate_lapis_ore": [
                null,
                {
                    "class": "cch",
                    "display_name": "Deepslate Lapis Lazuli Ore",
                    "field": "av",
                    "hardness": 4.5,
                    "max_state_id": 263,
                    "min_state_id": 263,
                    "num_states": 1,
                    "numeric_id": 73,
                    "resistance": 3.0,
                    "states": [],
                    "text_id": "deepslate_lapis_ore"
                }
            ],
            "deepslate_redstone_ore": [
                null,
                {
                    "class": "ccu",
                    "display_name": "Deepslate Redstone Ore",
                    "field": "cF",
                    "hardness": 4.5,
                    "max_state_id": 4194,
                    "min_state_id": 4193,
                    "num_states": 2,
                    "numeric_id": 187,
                    "resistance": 3.0,
                    "states": [
                        {
                            "declared_in": "cjc",
                            "field_name": "a",
                            "name": "lit",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "deepslate_redstone_ore"
                }
            ],
            "deepslate_tile_slab": [
                null,
                {
                    "class": "cdq",
                    "display_name": "Deepslate Tile Slab",
                    "field": "pQ",
                    "max_state_id": 19633,
                    "min_state_id": 19628,
                    "num_states": 6,
                    "numeric_id": 874,
                    "states": [
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjt",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "deepslate_tile_slab"
                }
            ],
            "deepslate_tile_stairs": [
                null,
                {
                    "class": "ceg",
                    "display_name": "Deepslate Tile Stairs",
                    "field": "pP",
                    "max_state_id": 19627,
                    "min_state_id": 19548,
                    "num_states": 80,
                    "numeric_id": 873,
                    "states": [
                        {
                            "declared_in": "cjc",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjl",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cju",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "deepslate_tile_stairs"
                }
            ],
            "deepslate_tile_wall": [
                null,
                {
                    "class": "cfh",
                    "display_name": "Deepslate Tile Wall",
                    "field": "pR",
                    "max_state_id": 19957,
                    "min_state_id": 19634,
                    "num_states": 324,
                    "numeric_id": 875,
                    "states": [
                        {
                            "declared_in": "cjc",
                            "field_name": "a",
                            "name": "up",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjx",
                            "field_name": "c",
                            "name": "north",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjx",
                            "field_name": "b",
                            "name": "east",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjx",
                            "field_name": "e",
                            "name": "west",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjx",
                            "field_name": "d",
                            "name": "south",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "field_name": "f",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "deepslate_tile_wall"
                }
            ],
            "deepslate_tiles": [
                null,
                {
                    "class": "bxn",
                    "display_name": "Deepslate Tiles",
                    "field": "pO",
                    "hardness": 1.5,
                    "max_state_id": 19547,
                    "min_state_id": 19547,
                    "num_states": 1,
                    "numeric_id": 872,
                    "resistance": 6.0,
                    "states": [],
                    "text_id": "deepslate_tiles"
                }
            ],
            "grimstone": [
                {
                    "class": "bww",
                    "display_name": "Grimstone",
                    "field": "pA",
                    "hardness": 3.0,
                    "max_state_id": 18718,
                    "min_state_id": 18718,
                    "num_states": 1,
                    "numeric_id": 858,
                    "resistance": 6.0,
                    "states": [],
                    "text_id": "grimstone"
                },
                null
            ],
            "grimstone_brick_slab": [
                {
                    "class": "ccz",
                    "display_name": "Grimstone Brick Slab",
                    "field": "pO",
                    "max_state_id": 20037,
                    "min_state_id": 20032,
                    "num_states": 6,
                    "numeric_id": 872,
                    "states": [
                        {
                            "declared_in": "cil",
                            "enum_class": "cjc",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "grimstone_brick_slab"
                },
                null
            ],
            "grimstone_brick_stairs": [
                {
                    "class": "cdp",
                    "display_name": "Grimstone Brick Stairs",
                    "field": "pN",
                    "max_state_id": 20031,
                    "min_state_id": 19952,
                    "num_states": 80,
                    "numeric_id": 871,
                    "states": [
                        {
                            "declared_in": "cil",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "ciu",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjd",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "grimstone_brick_stairs"
                },
                null
            ],
            "grimstone_brick_wall": [
                {
                    "class": "ceq",
                    "display_name": "Grimstone Brick Wall",
                    "field": "pP",
                    "max_state_id": 20361,
                    "min_state_id": 20038,
                    "num_states": 324,
                    "numeric_id": 873,
                    "states": [
                        {
                            "declared_in": "cil",
                            "field_name": "a",
                            "name": "up",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjg",
                            "field_name": "c",
                            "name": "north",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjg",
                            "field_name": "b",
                            "name": "east",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjg",
                            "field_name": "e",
                            "name": "west",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjg",
                            "field_name": "d",
                            "name": "south",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "field_name": "f",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "grimstone_brick_wall"
                },
                null
            ],
            "grimstone_bricks": [
                {
                    "class": "bww",
                    "display_name": "Grimstone Bricks",
                    "field": "pM",
                    "hardness": 1.5,
                    "max_state_id": 19951,
                    "min_state_id": 19951,
                    "num_states": 1,
                    "numeric_id": 870,
                    "resistance": 6.0,
                    "states": [],
                    "text_id": "grimstone_bricks"
                },
                null
            ],
            "grimstone_slab": [
                {
                    "class": "ccz",
                    "display_name": "Grimstone Slab",
                    "field": "pC",
                    "hardness": 3.5,
                    "max_state_id": 18804,
                    "min_state_id": 18799,
                    "num_states": 6,
                    "numeric_id": 860,
                    "resistance": 6.0,
                    "states": [
                        {
                            "declared_in": "cil",
                            "enum_class": "cjc",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "grimstone_slab"
                },
                null
            ],
            "grimstone_stairs": [
                {
                    "class": "cdp",
                    "display_name": "Grimstone Stairs",
                    "field": "pB",
                    "max_state_id": 18798,
                    "min_state_id": 18719,
                    "num_states": 80,
                    "numeric_id": 859,
                    "states": [
                        {
                            "declared_in": "cil",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "ciu",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjd",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "grimstone_stairs"
                },
                null
            ],
            "grimstone_tile_slab": [
                {
                    "class": "ccz",
                    "display_name": "Grimstone Tile Slab",
                    "field": "pK",
                    "max_state_id": 19626,
                    "min_state_id": 19621,
                    "num_states": 6,
                    "numeric_id": 868,
                    "states": [
                        {
                            "declared_in": "cil",
                            "enum_class": "cjc",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "grimstone_tile_slab"
                },
                null
            ],
            "grimstone_tile_stairs": [
                {
                    "class": "cdp",
                    "display_name": "Grimstone Tile Stairs",
                    "field": "pJ",
                    "max_state_id": 19620,
                    "min_state_id": 19541,
                    "num_states": 80,
                    "numeric_id": 867,
                    "states": [
                        {
                            "declared_in": "cil",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "ciu",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjd",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "grimstone_tile_stairs"
                },
                null
            ],
            "grimstone_tile_wall": [
                {
                    "class": "ceq",
                    "display_name": "Grimstone Tile Wall",
                    "field": "pL",
                    "max_state_id": 19950,
                    "min_state_id": 19627,
                    "num_states": 324,
                    "numeric_id": 869,
                    "states": [
                        {
                            "declared_in": "cil",
                            "field_name": "a",
                            "name": "up",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjg",
                            "field_name": "c",
                            "name": "north",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjg",
                            "field_name": "b",
                            "name": "east",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjg",
                            "field_name": "e",
                            "name": "west",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjg",
                            "field_name": "d",
                            "name": "south",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "field_name": "f",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "grimstone_tile_wall"
                },
                null
            ],
            "grimstone_tiles": [
                {
                    "class": "bww",
                    "display_name": "Grimstone Tiles",
                    "field": "pI",
                    "hardness": 1.5,
                    "max_state_id": 19540,
                    "min_state_id": 19540,
                    "num_states": 1,
                    "numeric_id": 866,
                    "resistance": 6.0,
                    "states": [],
                    "text_id": "grimstone_tiles"
                },
                null
            ],
            "grimstone_wall": [
                {
                    "class": "ceq",
                    "display_name": "Grimstone Wall",
                    "field": "pD",
                    "max_state_id": 19128,
                    "min_state_id": 18805,
                    "num_states": 324,
                    "numeric_id": 861,
                    "states": [
                        {
                            "declared_in": "cil",
                            "field_name": "a",
                            "name": "up",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjg",
                            "field_name": "c",
                            "name": "north",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjg",
                            "field_name": "b",
                            "name": "east",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjg",
                            "field_name": "e",
                            "name": "west",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjg",
                            "field_name": "d",
                            "name": "south",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "field_name": "f",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "grimstone_wall"
                },
                null
            ],
            "polished_deepslate": [
                null,
                {
                    "class": "bxn",
                    "display_name": "Polished Deepslate",
                    "field": "pK",
                    "hardness": 3.5,
                    "max_state_id": 19136,
                    "min_state_id": 19136,
                    "num_states": 1,
                    "numeric_id": 868,
                    "resistance": 6.0,
                    "states": [],
                    "text_id": "polished_deepslate"
                }
            ],
            "polished_deepslate_slab": [
                null,
                {
                    "class": "cdq",
                    "display_name": "Polished Deepslate Slab",
                    "field": "pM",
                    "max_state_id": 19222,
                    "min_state_id": 19217,
                    "num_states": 6,
                    "numeric_id": 870,
                    "states": [
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjt",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "polished_deepslate_slab"
                }
            ],
            "polished_deepslate_stairs": [
                null,
                {
                    "class": "ceg",
                    "display_name": "Polished Deepslate Stairs",
                    "field": "pL",
                    "max_state_id": 19216,
                    "min_state_id": 19137,
                    "num_states": 80,
                    "numeric_id": 869,
                    "states": [
                        {
                            "declared_in": "cjc",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjl",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cju",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "polished_deepslate_stairs"
                }
            ],
            "polished_deepslate_wall": [
                null,
                {
                    "class": "cfh",
                    "display_name": "Polished Deepslate Wall",
                    "field": "pN",
                    "max_state_id": 19546,
                    "min_state_id": 19223,
                    "num_states": 324,
                    "numeric_id": 871,
                    "states": [
                        {
                            "declared_in": "cjc",
                            "field_name": "a",
                            "name": "up",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjx",
                            "field_name": "c",
                            "name": "north",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjx",
                            "field_name": "b",
                            "name": "east",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjx",
                            "field_name": "e",
                            "name": "west",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "enum_class": "cjx",
                            "field_name": "d",
                            "name": "south",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cjc",
                            "field_name": "f",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "polished_deepslate_wall"
                }
            ],
            "polished_grimstone": [
                {
                    "class": "bww",
                    "display_name": "Polished Grimstone",
                    "field": "pE",
                    "hardness": 3.5,
                    "max_state_id": 19129,
                    "min_state_id": 19129,
                    "num_states": 1,
                    "numeric_id": 862,
                    "resistance": 6.0,
                    "states": [],
                    "text_id": "polished_grimstone"
                },
                null
            ],
            "polished_grimstone_slab": [
                {
                    "class": "ccz",
                    "display_name": "Polished Grimstone Slab",
                    "field": "pG",
                    "max_state_id": 19215,
                    "min_state_id": 19210,
                    "num_states": 6,
                    "numeric_id": 864,
                    "states": [
                        {
                            "declared_in": "cil",
                            "enum_class": "cjc",
                            "field_name": "a",
                            "name": "type",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM",
                                "DOUBLE"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "field_name": "b",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "polished_grimstone_slab"
                },
                null
            ],
            "polished_grimstone_stairs": [
                {
                    "class": "cdp",
                    "display_name": "Polished Grimstone Stairs",
                    "field": "pF",
                    "max_state_id": 19209,
                    "min_state_id": 19130,
                    "num_states": 80,
                    "numeric_id": 863,
                    "states": [
                        {
                            "declared_in": "cil",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "ciu",
                            "field_name": "b",
                            "name": "half",
                            "num_values": 2,
                            "type": "enum",
                            "values": [
                                "TOP",
                                "BOTTOM"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjd",
                            "field_name": "c",
                            "name": "shape",
                            "num_values": 5,
                            "type": "enum",
                            "values": [
                                "STRAIGHT",
                                "INNER_LEFT",
                                "INNER_RIGHT",
                                "OUTER_LEFT",
                                "OUTER_RIGHT"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "field_name": "d",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "polished_grimstone_stairs"
                },
                null
            ],
            "polished_grimstone_wall": [
                {
                    "class": "ceq",
                    "display_name": "Polished Grimstone Wall",
                    "field": "pH",
                    "max_state_id": 19539,
                    "min_state_id": 19216,
                    "num_states": 324,
                    "numeric_id": 865,
                    "states": [
                        {
                            "declared_in": "cil",
                            "field_name": "a",
                            "name": "up",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjg",
                            "field_name": "c",
                            "name": "north",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjg",
                            "field_name": "b",
                            "name": "east",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjg",
                            "field_name": "e",
                            "name": "west",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "enum_class": "cjg",
                            "field_name": "d",
                            "name": "south",
                            "num_values": 3,
                            "type": "enum",
                            "values": [
                                "NONE",
                                "LOW",
                                "TALL"
                            ]
                        },
                        {
                            "declared_in": "cil",
                            "field_name": "f",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "text_id": "polished_grimstone_wall"
                },
                null
            ],
            "smooth_basalt": [
                null,
                {
                    "class": "bxn",
                    "display_name": "Smooth Basalt",
                    "field": "pX",
                    "max_state_id": 20370,
                    "min_state_id": 20370,
                    "num_states": 1,
                    "numeric_id": 881,
                    "states": [],
                    "text_id": "smooth_basalt"
                }
            ]
        }
    },
    "entities": {
        "dataserializers": {},
        "entity": {}
    },
    "items": {
        "item": {
            "chiseled_deepslate": [
                null,
                {
                    "display_name": "Chiseled Deepslate",
                    "field": "dL",
                    "max_stack_size": 64,
                    "numeric_id": 245,
                    "text_id": "chiseled_deepslate"
                }
            ],
            "chiseled_grimstone": [
                {
                    "display_name": "Chiseled Grimstone",
                    "field": "dE",
                    "max_stack_size": 64,
                    "numeric_id": 238,
                    "text_id": "chiseled_grimstone"
                },
                null
            ],
            "cobbled_deepslate": [
                null,
                {
                    "display_name": "Cobbled Deepslate",
                    "field": "j",
                    "max_stack_size": 64,
                    "numeric_id": 9,
                    "text_id": "cobbled_deepslate"
                }
            ],
            "cobbled_deepslate_slab": [
                null,
                {
                    "display_name": "Cobbled Deepslate Slab",
                    "field": "js",
                    "max_stack_size": 64,
                    "numeric_id": 538,
                    "text_id": "cobbled_deepslate_slab"
                }
            ],
            "cobbled_deepslate_stairs": [
                null,
                {
                    "display_name": "Cobbled Deepslate Stairs",
                    "field": "ja",
                    "max_stack_size": 64,
                    "numeric_id": 520,
                    "text_id": "cobbled_deepslate_stairs"
                }
            ],
            "cobbled_deepslate_wall": [
                null,
                {
                    "display_name": "Cobbled Deepslate Wall",
                    "field": "eL",
                    "max_stack_size": 64,
                    "numeric_id": 297,
                    "text_id": "cobbled_deepslate_wall"
                }
            ],
            "deepslate": [
                null,
                {
                    "display_name": "Deepslate",
                    "field": "i",
                    "max_stack_size": 64,
                    "numeric_id": 8,
                    "text_id": "deepslate"
                }
            ],
            "deepslate_brick_slab": [
                null,
                {
                    "display_name": "Deepslate Brick Slab",
                    "field": "ju",
                    "max_stack_size": 64,
                    "numeric_id": 540,
                    "text_id": "deepslate_brick_slab"
                }
            ],
            "deepslate_brick_stairs": [
                null,
                {
                    "display_name": "Deepslate Brick Stairs",
                    "field": "jd",
                    "max_stack_size": 64,
                    "numeric_id": 523,
                    "text_id": "deepslate_brick_stairs"
                }
            ],
            "deepslate_brick_wall": [
                null,
                {
                    "display_name": "Deepslate Brick Wall",
                    "field": "eO",
                    "max_stack_size": 64,
                    "numeric_id": 300,
                    "text_id": "deepslate_brick_wall"
                }
            ],
            "deepslate_bricks": [
                null,
                {
                    "display_name": "Deepslate Bricks",
                    "field": "dJ",
                    "max_stack_size": 64,
                    "numeric_id": 243,
                    "text_id": "deepslate_bricks"
                }
            ],
            "deepslate_diamond_ore": [
                null,
                {
                    "display_name": "Deepslate Diamond Ore",
                    "field": "cQ",
                    "max_stack_size": 64,
                    "numeric_id": 198,
                    "text_id": "deepslate_diamond_ore"
                }
            ],
            "deepslate_gold_ore": [
                null,
                {
                    "display_name": "Deepslate Gold Ore",
                    "field": "N",
                    "max_stack_size": 64,
                    "numeric_id": 39,
                    "text_id": "deepslate_gold_ore"
                }
            ],
            "deepslate_iron_ore": [
                null,
                {
                    "display_name": "Deepslate Iron Ore",
                    "field": "P",
                    "max_stack_size": 64,
                    "numeric_id": 41,
                    "text_id": "deepslate_iron_ore"
                }
            ],
            "deepslate_lapis_ore": [
                null,
                {
                    "display_name": "Deepslate Lapis Lazuli Ore",
                    "field": "aM",
                    "max_stack_size": 64,
                    "numeric_id": 90,
                    "text_id": "deepslate_lapis_ore"
                }
            ],
            "deepslate_redstone_ore": [
                null,
                {
                    "display_name": "Deepslate Redstone Ore",
                    "field": "cZ",
                    "max_stack_size": 64,
                    "numeric_id": 207,
                    "text_id": "deepslate_redstone_ore"
                }
            ],
            "deepslate_tile_slab": [
                null,
                {
                    "display_name": "Deepslate Tile Slab",
                    "field": "jt",
                    "max_stack_size": 64,
                    "numeric_id": 539,
                    "text_id": "deepslate_tile_slab"
                }
            ],
            "deepslate_tile_stairs": [
                null,
                {
                    "display_name": "Deepslate Tile Stairs",
                    "field": "jc",
                    "max_stack_size": 64,
                    "numeric_id": 522,
                    "text_id": "deepslate_tile_stairs"
                }
            ],
            "deepslate_tile_wall": [
                null,
                {
                    "display_name": "Deepslate Tile Wall",
                    "field": "eN",
                    "max_stack_size": 64,
                    "numeric_id": 299,
                    "text_id": "deepslate_tile_wall"
                }
            ],
            "deepslate_tiles": [
                null,
                {
                    "display_name": "Deepslate Tiles",
                    "field": "dK",
                    "max_stack_size": 64,
                    "numeric_id": 244,
                    "text_id": "deepslate_tiles"
                }
            ],
            "grimstone": [
                {
                    "display_name": "Grimstone",
                    "field": "i",
                    "max_stack_size": 64,
                    "numeric_id": 8,
                    "text_id": "grimstone"
                },
                null
            ],
            "grimstone_brick_slab": [
                {
                    "display_name": "Grimstone Brick Slab",
                    "field": "jo",
                    "max_stack_size": 64,
                    "numeric_id": 534,
                    "text_id": "grimstone_brick_slab"
                },
                null
            ],
            "grimstone_brick_stairs": [
                {
                    "display_name": "Grimstone Brick Stairs",
                    "field": "iX",
                    "max_stack_size": 64,
                    "numeric_id": 517,
                    "text_id": "grimstone_brick_stairs"
                },
                null
            ],
            "grimstone_brick_wall": [
                {
                    "display_name": "Grimstone Brick Wall",
                    "field": "eH",
                    "max_stack_size": 64,
                    "numeric_id": 293,
                    "text_id": "grimstone_brick_wall"
                },
                null
            ],
            "grimstone_bricks": [
                {
                    "display_name": "Grimstone Bricks",
                    "field": "dC",
                    "max_stack_size": 64,
                    "numeric_id": 236,
                    "text_id": "grimstone_bricks"
                },
                null
            ],
            "grimstone_slab": [
                {
                    "display_name": "Grimstone Slab",
                    "field": "jm",
                    "max_stack_size": 64,
                    "numeric_id": 532,
                    "text_id": "grimstone_slab"
                },
                null
            ],
            "grimstone_stairs": [
                {
                    "display_name": "Grimstone Stairs",
                    "field": "iU",
                    "max_stack_size": 64,
                    "numeric_id": 514,
                    "text_id": "grimstone_stairs"
                },
                null
            ],
            "grimstone_tile_slab": [
                {
                    "display_name": "Grimstone Tile Slab",
                    "field": "jn",
                    "max_stack_size": 64,
                    "numeric_id": 533,
                    "text_id": "grimstone_tile_slab"
                },
                null
            ],
            "grimstone_tile_stairs": [
                {
                    "display_name": "Grimstone Tile Stairs",
                    "field": "iW",
                    "max_stack_size": 64,
                    "numeric_id": 516,
                    "text_id": "grimstone_tile_stairs"
                },
                null
            ],
            "grimstone_tile_wall": [
                {
                    "display_name": "Grimstone Tile Wall",
                    "field": "eG",
                    "max_stack_size": 64,
                    "numeric_id": 292,
                    "text_id": "grimstone_tile_wall"
                },
                null
            ],
            "grimstone_tiles": [
                {
                    "display_name": "Grimstone Tiles",
                    "field": "dD",
                    "max_stack_size": 64,
                    "numeric_id": 237,
                    "text_id": "grimstone_tiles"
                },
                null
            ],
            "grimstone_wall": [
                {
                    "display_name": "Grimstone Wall",
                    "field": "eE",
                    "max_stack_size": 64,
                    "numeric_id": 290,
                    "text_id": "grimstone_wall"
                },
                null
            ],
            "polished_deepslate": [
                null,
                {
                    "display_name": "Polished Deepslate",
                    "field": "k",
                    "max_stack_size": 64,
                    "numeric_id": 10,
                    "text_id": "polished_deepslate"
                }
            ],
            "polished_deepslate_slab": [
                null,
                {
                    "display_name": "Polished Deepslate Slab",
                    "field": "ji",
                    "max_stack_size": 64,
                    "numeric_id": 528,
                    "text_id": "polished_deepslate_slab"
                }
            ],
            "polished_deepslate_stairs": [
                null,
                {
                    "display_name": "Polished Deepslate Stairs",
                    "field": "jb",
                    "max_stack_size": 64,
                    "numeric_id": 521,
                    "text_id": "polished_deepslate_stairs"
                }
            ],
            "polished_deepslate_wall": [
                null,
                {
                    "display_name": "Polished Deepslate Wall",
                    "field": "eM",
                    "max_stack_size": 64,
                    "numeric_id": 298,
                    "text_id": "polished_deepslate_wall"
                }
            ],
            "polished_grimstone": [
                {
                    "display_name": "Polished Grimstone",
                    "field": "j",
                    "max_stack_size": 64,
                    "numeric_id": 9,
                    "text_id": "polished_grimstone"
                },
                null
            ],
            "polished_grimstone_slab": [
                {
                    "display_name": "Polished Grimstone Slab",
                    "field": "jc",
                    "max_stack_size": 64,
                    "numeric_id": 522,
                    "text_id": "polished_grimstone_slab"
                },
                null
            ],
            "polished_grimstone_stairs": [
                {
                    "display_name": "Polished Grimstone Stairs",
                    "field": "iV",
                    "max_stack_size": 64,
                    "numeric_id": 515,
                    "text_id": "polished_grimstone_stairs"
                },
                null
            ],
            "polished_grimstone_wall": [
                {
                    "display_name": "Polished Grimstone Wall",
                    "field": "eF",
                    "max_stack_size": 64,
                    "numeric_id": 291,
                    "text_id": "polished_grimstone_wall"
                },
                null
            ],
            "smooth_basalt": [
                null,
                {
                    "display_name": "Smooth Basalt",
                    "field": "dw",
                    "max_stack_size": 64,
                    "numeric_id": 230,
                    "text_id": "smooth_basalt"
                }
            ]
        }
    },
    "language": {
        "block": {
            "minecraft.chiseled_deepslate": [
                null,
                "Chiseled Deepslate"
            ],
            "minecraft.chiseled_grimstone": [
                "Chiseled Grimstone",
                null
            ],
            "minecraft.cobbled_deepslate": [
                null,
                "Cobbled Deepslate"
            ],
            "minecraft.cobbled_deepslate_slab": [
                null,
                "Cobbled Deepslate Slab"
            ],
            "minecraft.cobbled_deepslate_stairs": [
                null,
                "Cobbled Deepslate Stairs"
            ],
            "minecraft.cobbled_deepslate_wall": [
                null,
                "Cobbled Deepslate Wall"
            ],
            "minecraft.deepslate": [
                null,
                "Deepslate"
            ],
            "minecraft.deepslate_brick_slab": [
                null,
                "Deepslate Brick Slab"
            ],
            "minecraft.deepslate_brick_stairs": [
                null,
                "Deepslate Brick Stairs"
            ],
            "minecraft.deepslate_brick_wall": [
                null,
                "Deepslate Brick Wall"
            ],
            "minecraft.deepslate_bricks": [
                null,
                "Deepslate Bricks"
            ],
            "minecraft.deepslate_diamond_ore": [
                null,
                "Deepslate Diamond Ore"
            ],
            "minecraft.deepslate_gold_ore": [
                null,
                "Deepslate Gold Ore"
            ],
            "minecraft.deepslate_iron_ore": [
                null,
                "Deepslate Iron Ore"
            ],
            "minecraft.deepslate_lapis_ore": [
                null,
                "Deepslate Lapis Lazuli Ore"
            ],
            "minecraft.deepslate_redstone_ore": [
                null,
                "Deepslate Redstone Ore"
            ],
            "minecraft.deepslate_tile_slab": [
                null,
                "Deepslate Tile Slab"
            ],
            "minecraft.deepslate_tile_stairs": [
                null,
                "Deepslate Tile Stairs"
            ],
            "minecraft.deepslate_tile_wall": [
                null,
                "Deepslate Tile Wall"
            ],
            "minecraft.deepslate_tiles": [
                null,
                "Deepslate Tiles"
            ],
            "minecraft.grimstone": [
                "Grimstone",
                null
            ],
            "minecraft.grimstone_brick_slab": [
                "Grimstone Brick Slab",
                null
            ],
            "minecraft.grimstone_brick_stairs": [
                "Grimstone Brick Stairs",
                null
            ],
            "minecraft.grimstone_brick_wall": [
                "Grimstone Brick Wall",
                null
            ],
            "minecraft.grimstone_bricks": [
                "Grimstone Bricks",
                null
            ],
            "minecraft.grimstone_slab": [
                "Grimstone Slab",
                null
            ],
            "minecraft.grimstone_stairs": [
                "Grimstone Stairs",
                null
            ],
            "minecraft.grimstone_tile_slab": [
                "Grimstone Tile Slab",
                null
            ],
            "minecraft.grimstone_tile_stairs": [
                "Grimstone Tile Stairs",
                null
            ],
            "minecraft.grimstone_tile_wall": [
                "Grimstone Tile Wall",
                null
            ],
            "minecraft.grimstone_tiles": [
                "Grimstone Tiles",
                null
            ],
            "minecraft.grimstone_wall": [
                "Grimstone Wall",
                null
            ],
            "minecraft.polished_deepslate": [
                null,
                "Polished Deepslate"
            ],
            "minecraft.polished_deepslate_slab": [
                null,
                "Polished Deepslate Slab"
            ],
            "minecraft.polished_deepslate_stairs": [
                null,
                "Polished Deepslate Stairs"
            ],
            "minecraft.polished_deepslate_wall": [
                null,
                "Polished Deepslate Wall"
            ],
            "minecraft.polished_grimstone": [
                "Polished Grimstone",
                null
            ],
            "minecraft.polished_grimstone_slab": [
                "Polished Grimstone Slab",
                null
            ],
            "minecraft.polished_grimstone_stairs": [
                "Polished Grimstone Stairs",
                null
            ],
            "minecraft.polished_grimstone_wall": [
                "Polished Grimstone Wall",
                null
            ],
            "minecraft.smooth_basalt": [
                null,
                "Smooth Basalt"
            ]
        }
    },
    "packets": {
        "packet": {
            "PLAY_CLIENTBOUND_07": [
                {
                    "class": "pl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.object2IntEntrySet().iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((it.unimi.dsi.fastutil.objects.Object2IntMap$Entry)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((aeo)var3.getKey())",
                                    "var": "var4"
                                },
                                {
                                    "field": "gn.an.a(var4.a())",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "a(var4)",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "var3.getIntValue()",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<afa, int>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "gn.an.a(itv.getKey().a())",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.getValue()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "a(itv.getKey())",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0D": [
                {
                    "class": "pr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "pr$1.a[this.b.ordinal()]",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "1"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "k()",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "2"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "3"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "4"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "5"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "6"
                                },
                                {
                                    "field": "k()",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "switch"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ps.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "b",
                            "method": "a(Lnx;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "ps$c",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_10": [
                {
                    "class": "pu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getStart()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getLength()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getList().size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.getList().iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.brigadier.suggestion.Suggestion)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.getText()",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "(var3.getTooltip() != null) ? 1 : 0",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "var3.getTooltip() != null",
                                    "instructions": [
                                        {
                                            "field": "oj.a(var3.getTooltip())",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_11": [
                {
                    "class": "pv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 17,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "pv.a(this.a)",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "pv.a(var2)",
                            "var": "var3"
                        },
                        {
                            "field": "var3.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "var3",
                            "var": "var4"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var4.length",
                            "var": "var5"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var6"
                        },
                        {
                            "condition": "var6 < var5",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var4[var6]",
                                    "var": "var7"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var3"
                                },
                                {
                                    "condition": "var7.getRedirect() != null",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "((byte)(var3 | 0x8))",
                                            "var": "var3"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "var7.getCommand() != null",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "((byte)(var3 | 4))",
                                            "var": "var3"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "var7 instanceof com.mojang.brigadier.tree.RootCommandNode",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "((byte)(var3 | 0))",
                                            "var": "var3"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "var7 instanceof com.mojang.brigadier.tree.ArgumentCommandNode",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "((byte)(var3 | 2))",
                                                    "var": "var3"
                                                },
                                                {
                                                    "condition": "((com.mojang.brigadier.tree.ArgumentCommandNode)var7).getCustomSuggestions() != null",
                                                    "instructions": [
                                                        {
                                                            "operation": "store",
                                                            "type": "int",
                                                            "value": "((byte)(var3 | 0x10))",
                                                            "var": "var3"
                                                        }
                                                    ],
                                                    "operation": "if"
                                                },
                                                {
                                                    "instructions": [
                                                        {
                                                            "condition": "var7 instanceof com.mojang.brigadier.tree.LiteralCommandNode",
                                                            "instructions": [
                                                                {
                                                                    "operation": "store",
                                                                    "type": "int",
                                                                    "value": "((byte)(var3 | 1))",
                                                                    "var": "var3"
                                                                }
                                                            ],
                                                            "operation": "if"
                                                        }
                                                    ],
                                                    "operation": "else"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var7.getChildren().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var7.getChildren().iterator()",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((com.mojang.brigadier.tree.CommandNode)var4.next())",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "((Integer)var2.get(var5)).intValue()",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "condition": "var7.getRedirect() != null",
                                    "instructions": [
                                        {
                                            "field": "((Integer)var2.get(var7.getRedirect())).intValue()",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "var7 instanceof com.mojang.brigadier.tree.ArgumentCommandNode",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((com.mojang.brigadier.tree.ArgumentCommandNode)var7)",
                                            "var": "var4"
                                        },
                                        {
                                            "field": "var4.getName()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "fk.b(var4.getType())",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "var2 == null",
                                            "instructions": [
                                                {
                                                    "field": "new wb(\"\")",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2.c",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "args": "var4.getType(), packetbuffer",
                                            "field": "var2.b",
                                            "method": "a(Lcom/mojang/brigadier/arguments/ArgumentType;Lnw;)V",
                                            "name": "a",
                                            "operation": "interfacecall",
                                            "target": "fj",
                                            "type": "interface"
                                        },
                                        {
                                            "condition": "var4.getCustomSuggestions() != null",
                                            "instructions": [
                                                {
                                                    "field": "fm.a(var4.getCustomSuggestions())",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "var7 instanceof com.mojang.brigadier.tree.LiteralCommandNode",
                                            "instructions": [
                                                {
                                                    "field": "((com.mojang.brigadier.tree.LiteralCommandNode)var7).getLiteral()",
                                                    "operation": "write",
                                                    "type": "string"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var6",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "var2.get(a).intValue()",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 17,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getStart()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getLength()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getList().size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.getList().iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "com.mojang.brigadier.suggestion.Suggestion",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getText()",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "(itv.getTooltip() != null) ? 1 : 0",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getTooltip() != null",
                                    "instructions": [
                                        {
                                            "field": "ok.a(itv.getTooltip())",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_12": [
                {
                    "class": "pw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "px.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 18,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "px.a(this.a)",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "px.a(var2)",
                            "var": "var3"
                        },
                        {
                            "field": "var3.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "var3.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "com.mojang.brigadier.tree.CommandNode",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var3"
                                },
                                {
                                    "condition": "itv.getRedirect() != null",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "((byte)(var3 | 0x8))",
                                            "var": "var3"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "itv.getCommand() != null",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "((byte)(var3 | 4))",
                                            "var": "var3"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "itv instanceof com.mojang.brigadier.tree.RootCommandNode",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "((byte)(var3 | 0))",
                                            "var": "var3"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "itv instanceof com.mojang.brigadier.tree.ArgumentCommandNode",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "((byte)(var3 | 2))",
                                                    "var": "var3"
                                                },
                                                {
                                                    "condition": "((com.mojang.brigadier.tree.ArgumentCommandNode)itv).getCustomSuggestions() != null",
                                                    "instructions": [
                                                        {
                                                            "operation": "store",
                                                            "type": "int",
                                                            "value": "((byte)(var3 | 0x10))",
                                                            "var": "var3"
                                                        }
                                                    ],
                                                    "operation": "if"
                                                },
                                                {
                                                    "instructions": [
                                                        {
                                                            "condition": "itv instanceof com.mojang.brigadier.tree.LiteralCommandNode",
                                                            "instructions": [
                                                                {
                                                                    "operation": "store",
                                                                    "type": "int",
                                                                    "value": "((byte)(var3 | 1))",
                                                                    "var": "var3"
                                                                }
                                                            ],
                                                            "operation": "if"
                                                        }
                                                    ],
                                                    "operation": "else"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "itv.getChildren().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "itv.getChildren().iterator()",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((com.mojang.brigadier.tree.CommandNode)var4.next())",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "((Integer)var2.get(var5)).intValue()",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "condition": "itv.getRedirect() != null",
                                    "instructions": [
                                        {
                                            "field": "((Integer)var2.get(itv.getRedirect())).intValue()",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "itv instanceof com.mojang.brigadier.tree.ArgumentCommandNode",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((com.mojang.brigadier.tree.ArgumentCommandNode)itv)",
                                            "var": "var4"
                                        },
                                        {
                                            "field": "var4.getName()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "fk.b(var4.getType())",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "var2 == null",
                                            "instructions": [
                                                {
                                                    "field": "new wn(\"\")",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2.c",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "args": "var4.getType(), packetbuffer",
                                            "field": "var2.b",
                                            "method": "a(Lcom/mojang/brigadier/arguments/ArgumentType;Lnx;)V",
                                            "name": "a",
                                            "operation": "interfacecall",
                                            "target": "fj",
                                            "type": "interface"
                                        },
                                        {
                                            "condition": "var4.getCustomSuggestions() != null",
                                            "instructions": [
                                                {
                                                    "field": "fm.a(var4.getCustomSuggestions())",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "itv instanceof com.mojang.brigadier.tree.LiteralCommandNode",
                                            "instructions": [
                                                {
                                                    "field": "((com.mojang.brigadier.tree.LiteralCommandNode)itv).getLiteral()",
                                                    "operation": "write",
                                                    "type": "string"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "var2.get(a).intValue()",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_13": [
                {
                    "class": "px.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "py.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_14": [
                {
                    "class": "py.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((bnx)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "pz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_15": [
                {
                    "class": "pz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((boo)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_16": [
                {
                    "class": "qa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_17": [
                {
                    "class": "qb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "bnt.a(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_18": [
                {
                    "class": "qc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "t",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "u.copy()",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "bok.a(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_19": [
                {
                    "class": "qd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qe.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "s",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "t.copy()",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1A": [
                {
                    "class": "qe.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1B": [
                {
                    "class": "qf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1C": [
                {
                    "class": "qg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 28,
                    "instructions": [
                        {
                            "field": "(float)a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)b",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)c",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "age.c(this.a)",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "age.c(this.b)",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "age.c(this.c)",
                            "var": "var4"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.e.iterator()",
                            "var": "var5"
                        },
                        {
                            "condition": "var5.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((fx)var5.next())",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var6.u() - var2)",
                                    "var": "var7"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var6.v() - var3)",
                                    "var": "var8"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var6.w() - var4)",
                                    "var": "var9"
                                },
                                {
                                    "field": "var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var8",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var9",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 28,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1D": [
                {
                    "class": "qh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "(float)a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)b",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)c",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "agu.c(this.a)",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "agu.c(this.b)",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "agu.c(this.c)",
                            "var": "var4"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "fx",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.u() - var2)",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.v() - var3)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.w() - var4)",
                                    "var": "var7"
                                },
                                {
                                    "field": "var5",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var6",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var7",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1E": [
                {
                    "class": "qi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "qi$a.a(m)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "n",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1F": [
                {
                    "class": "qj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "qk$a.a(m)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "n",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_20": [
                {
                    "class": "qk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ql.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_21": [
                {
                    "class": "ql.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "varint[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "f.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "g.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.g.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((mq)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_22": [
                {
                    "class": "qm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_23": [
                {
                    "class": "qn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "gn.ab.a(j.b())",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "j",
                            "method": "a(Lnw;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "hj",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "e.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varint[]"
                        },
                        {
                            "field": "f.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "g.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.g.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "mr",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_24": [
                {
                    "class": "qo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "e.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "f.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "g.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.g.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((byte[])var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "h.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.h.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((byte[])var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_25": [
                {
                    "class": "qp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "btu.a(e)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.f.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((wa)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.a()",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "go$b.a.encode(g)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "ckv.r.encode(this::q)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "i.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "l",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "m",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "n",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "o",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "gn.ab.a(j.b())",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "j",
                            "method": "a(Lnx;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "hk",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_26": [
                {
                    "class": "qq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "field": "1",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "d.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.d",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.b()",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "var5.c()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "var5.d()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "var5.e() & 0xf",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "condition": "var5.g() != null",
                                            "instructions": [
                                                {
                                                    "field": "1",
                                                    "operation": "write",
                                                    "type": "boolean"
                                                },
                                                {
                                                    "field": "var5.g()",
                                                    "operation": "write",
                                                    "type": "chatcomponent"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "boolean"
                                                }
                                            ],
                                            "operation": "else"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "boolean"
                                }
                            ],
                            "operation": "else"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e.c",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.d",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.e.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "e.e",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "e.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "f.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "g.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.g.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "h.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.h.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_27": [
                {
                    "class": "qr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "(byte)(b.size() & 0xff)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < b.size()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((bsu)this.b.get(var2))",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.a()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "var3.d()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var3.c()",
                                    "var": "var4"
                                },
                                {
                                    "field": "(var4.b() == 0) ? 1 : 0",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "var4.b() == 0",
                                    "instructions": [
                                        {
                                            "field": "var4",
                                            "operation": "write",
                                            "type": "itemstack"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "var3.p()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "var3.g()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.i()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.o()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.m()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.n()",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "var3.k()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "bul.a(e)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "wm",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "go$b.a.encode(g)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "cln.r.encode(qs::q)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "i.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "l",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "m",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "n",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "o",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_28": [
                {
                    "class": "qs$a.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "field": "1",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "d.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.d.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "del",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.b()",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "itv.c()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.e() & 0xf",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "condition": "itv.g() != null",
                                            "instructions": [
                                                {
                                                    "field": "1",
                                                    "operation": "write",
                                                    "type": "boolean"
                                                },
                                                {
                                                    "field": "itv.g()",
                                                    "operation": "write",
                                                    "type": "chatcomponent"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "boolean"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "boolean"
                                }
                            ],
                            "operation": "else"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e.c",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.d",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.e.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "e.e",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_29": [
                {
                    "class": "qs$b.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "(byte)(b.size() & 0xff)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < b.size()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((btl)this.b.get(var2))",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.a()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "var3.d()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var3.c()",
                                    "var": "var4"
                                },
                                {
                                    "field": "(var4.b() == 0) ? 1 : 0",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "var4.b() == 0",
                                    "instructions": [
                                        {
                                            "field": "var4",
                                            "operation": "write",
                                            "type": "itemstack"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "var3.p()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "var3.g()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.i()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.o()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.m()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.n()",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "var3.k()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2A": [
                {
                    "class": "qs$c.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qv$a.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2B": [
                {
                    "class": "qs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qv$b.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2C": [
                {
                    "class": "qt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qv$c.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2D": [
                {
                    "class": "qu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2E": [
                {
                    "class": "qv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2F": [
                {
                    "class": "qw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 47,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 47,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_30": [
                {
                    "class": "qx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 48,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "qz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 48,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_31": [
                {
                    "class": "qy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 49,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "a",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "b",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "c",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 4))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "d",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 0x8))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ra.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 49,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_32": [
                {
                    "class": "qz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 50,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "a == qz$a.b",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "int"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "condition": "a == qz$a.c",
                                    "instructions": [
                                        {
                                            "field": "b",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "field": "c",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "field": "e",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 50,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "a",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "b",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "c",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 4))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "d",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 0x8))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_33": [
                {
                    "class": "ra.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 51,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((ra$b)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "ra$1.a[this.a.ordinal()]",
                                    "instructions": [
                                        {
                                            "operation": "case",
                                            "value": "1"
                                        },
                                        {
                                            "field": "var3.a().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "var3.a().getName()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "var3.a().getProperties().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var3.a().getProperties().values().iterator()",
                                            "var": "var4"
                                        },
                                        {
                                            "condition": "var4.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "((com.mojang.authlib.properties.Property)var4.next())",
                                                    "var": "var5"
                                                },
                                                {
                                                    "field": "var5.getName()",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "field": "var5.getValue()",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "condition": "var5.hasSignature()",
                                                    "instructions": [
                                                        {
                                                            "field": "1",
                                                            "operation": "write",
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "field": "var5.getSignature()",
                                                            "operation": "write",
                                                            "type": "string"
                                                        }
                                                    ],
                                                    "operation": "if"
                                                },
                                                {
                                                    "instructions": [
                                                        {
                                                            "field": "0",
                                                            "operation": "write",
                                                            "type": "boolean"
                                                        }
                                                    ],
                                                    "operation": "else"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "field": "var3.c().a()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "field": "var3.b()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "condition": "var3.d() == null",
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "boolean"
                                                },
                                                {
                                                    "operation": "break"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var3.d()",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "operation": "break"
                                        },
                                        {
                                            "operation": "case",
                                            "value": "2"
                                        },
                                        {
                                            "field": "var3.a().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "var3.c().a()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "break"
                                        },
                                        {
                                            "operation": "case",
                                            "value": "3"
                                        },
                                        {
                                            "field": "var3.a().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "var3.b()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "break"
                                        },
                                        {
                                            "operation": "case",
                                            "value": "4"
                                        },
                                        {
                                            "field": "var3.a().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "condition": "var3.d() == null",
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "boolean"
                                                },
                                                {
                                                    "operation": "break"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var3.d()",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "operation": "break"
                                        },
                                        {
                                            "operation": "case",
                                            "value": "5"
                                        },
                                        {
                                            "field": "var3.a().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        }
                                    ],
                                    "operation": "switch"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 51,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_34": [
                {
                    "class": "rb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 52,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 52,
                    "instructions": [],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_35": [
                {
                    "class": "rc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 53,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "rc$a.a(f)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "re.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 53,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_36": [
                {
                    "class": "rd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 54,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "blc.values()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((ael$a)this.d.b.get(var5))",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6 == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "ael$a.a(var6)",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "ael$a.b(var6)",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((wb)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "condition": "a == rd$a.a",
                            "instructions": [
                                {
                                    "field": "c.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.c.iterator()",
                                    "var": "var2"
                                },
                                {
                                    "condition": "var2.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((wb)var2.next())",
                                            "var": "var3"
                                        },
                                        {
                                            "field": "var3",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 54,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "rf$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "args": "packetbuffer, itv",
                                    "field": "a",
                                    "method": "a(Lnx;Lrf$b;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "rf$a",
                                    "type": "abstract"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_37": [
                {
                    "class": "re.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 55,
                    "instructions": [
                        {
                            "field": "a.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "field": "var5",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 55,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_38": [
                {
                    "class": "rf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 56,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "aqp.a(b)",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 56,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "rh$a.a(f)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_39": [
                {
                    "class": "rg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 57,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ri.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 57,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "blt.values()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((aex$a)this.d.b.get(var5))",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6 == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "aex$a.a(var6)",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "aex$a.b(var6)",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "wn",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "condition": "a == ri$a.a",
                            "instructions": [
                                {
                                    "field": "c.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.c.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "wn",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3A": [
                {
                    "class": "rh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 58,
                    "instructions": [
                        {
                            "field": "ckv.r.encode(this::j)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "btu.a(e)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 58,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3C": [
                {
                    "class": "rj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 60,
                    "instructions": [
                        {
                            "field": "a.s()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < b.length",
                            "instructions": [
                                {
                                    "field": "(long)((bww.i(c[var2]) << 0xc) | b[var2])",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 60,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3D": [
                {
                    "class": "rk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 61,
                    "instructions": [
                        {
                            "field": "(a != null) ? 1 : 0",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a != null",
                            "instructions": [
                                {
                                    "field": "a",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 61,
                    "instructions": [
                        {
                            "field": "cln.r.encode(rm::j)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "bul.a(e)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3E": [
                {
                    "class": "rl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 62,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "rl$1.a[this.a.ordinal()]",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "1"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "2"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "g",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "3"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "5"
                                },
                                {
                                    "field": "h",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "4"
                                },
                                {
                                    "field": "i",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "6"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "g",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "i",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "h",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "switch"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 62,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3F": [
                {
                    "class": "rm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 63,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ro.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 63,
                    "instructions": [
                        {
                            "field": "a.s()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < b.length",
                            "instructions": [
                                {
                                    "field": "(long)((bxn.i(c[var2]) << 0xc) | b[var2])",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_40": [
                {
                    "class": "rn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 64,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 64,
                    "instructions": [
                        {
                            "field": "(a != null) ? 1 : 0",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a != null",
                            "instructions": [
                                {
                                    "field": "a",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_41": [
                {
                    "class": "ro.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 65,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 65,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_42": [
                {
                    "class": "rp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 66,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 66,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_43": [
                {
                    "class": "rq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 67,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 67,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_44": [
                {
                    "class": "rr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 68,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 68,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_45": [
                {
                    "class": "rs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 69,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "metadata"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ru.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 69,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_46": [
                {
                    "class": "rt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 70,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 70,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_47": [
                {
                    "class": "ru.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 71,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 71,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_48": [
                {
                    "class": "rv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 72,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.b.size()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var3"
                        },
                        {
                            "condition": "var3 < var2",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.datafixers.util.Pair)this.b.get(var3))",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((arc)var4.getFirst())",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((var3 != (var2 - 1)) ? 1 : 0)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var5.ordinal()",
                                    "var": "var7"
                                },
                                {
                                    "field": "(var6) ? (var7 | -128) : var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "(bnx)var4.getSecond()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "amount": "1",
                                    "field": "var3",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 72,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_49": [
                {
                    "class": "rw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 73,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ry.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 73,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4A": [
                {
                    "class": "rx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 74,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "rz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 74,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4B": [
                {
                    "class": "ry.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 75,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "d",
                            "instructions": [
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 75,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4C": [
                {
                    "class": "rz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 76,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 76,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4D": [
                {
                    "class": "sa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 77,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "i",
                            "instructions": [
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "j",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "g",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "i",
                            "instructions": [
                                {
                                    "field": "h.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.h.iterator()",
                                    "var": "var2"
                                },
                                {
                                    "condition": "var2.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((String)var2.next())",
                                            "var": "var3"
                                        },
                                        {
                                            "field": "var3",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 77,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "metadata"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4E": [
                {
                    "class": "sb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 78,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "(b == null) ? \"\" : b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "condition": "d != wq$a.b",
                            "instructions": [
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 78,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4F": [
                {
                    "class": "sc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 79,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "se.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 79,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_50": [
                {
                    "class": "sd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 80,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "a != sd$a.a",
                            "instructions": [
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "a == sd$a.d",
                            "instructions": [
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "int"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 80,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.b.size()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var3"
                        },
                        {
                            "condition": "var3 < var2",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.datafixers.util.Pair)this.b.get(var3))",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((art)var4.getFirst())",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((var3 != (var2 - 1)) ? 1 : 0)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var5.ordinal()",
                                    "var": "var7"
                                },
                                {
                                    "field": "(var6) ? (var7 | -128) : var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "(boo)var4.getSecond()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "amount": "1",
                                    "field": "var3",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_51": [
                {
                    "class": "se.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 81,
                    "instructions": [
                        {
                            "field": "gn.T.a(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 81,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_52": [
                {
                    "class": "sf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 82,
                    "instructions": [
                        {
                            "field": "gn.T.a(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 82,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_53": [
                {
                    "class": "sg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 83,
                    "instructions": [
                        {
                            "condition": "b != null",
                            "instructions": [
                                {
                                    "condition": "a != null",
                                    "instructions": [
                                        {
                                            "field": "3",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "b",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "a",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "b",
                                            "operation": "write",
                                            "type": "enum"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "a != null",
                                            "instructions": [
                                                {
                                                    "field": "2",
                                                    "operation": "write",
                                                    "type": "byte"
                                                },
                                                {
                                                    "field": "a",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "byte"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "si.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 83,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "d",
                            "instructions": [
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_54": [
                {
                    "class": "sh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 84,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 84,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint[]"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_55": [
                {
                    "class": "si.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 85,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 85,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "sk.b(a)",
                            "instructions": [
                                {
                                    "field": "((sk$b)d.orElseThrow(sk::g)).a",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((sk$b)d.orElseThrow(sk::g)).g",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "((sk$b)d.orElseThrow(sk::g)).d",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((sk$b)d.orElseThrow(sk::g)).e",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((sk$b)d.orElseThrow(sk::g)).f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "((sk$b)d.orElseThrow(sk::g)).b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((sk$b)d.orElseThrow(sk::g)).c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "sk.a(a)",
                            "instructions": [
                                {
                                    "field": "c.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.c.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "java.lang.String",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_56": [
                {
                    "class": "sj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 86,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 86,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "(b == null) ? \"\" : b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "condition": "d != xc$a.b",
                            "instructions": [
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_57": [
                {
                    "class": "sk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 87,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 87,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_58": [
                {
                    "class": "sl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 88,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.entrySet().iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((Map$Entry)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((wb)var3.getKey())",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((y$a)var3.getValue())",
                                    "var": "var5"
                                },
                                {
                                    "field": "var4",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "condition": "var5.a == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var5.a",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "condition": "var5.c == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var5.c.a",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "var5.c.b",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "var5.c.c",
                                            "operation": "write",
                                            "type": "itemstack"
                                        },
                                        {
                                            "field": "var5.c.e",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "var5.c.d != null",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 1)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "var5.c.f",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 2)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "var5.c.h",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 4)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "condition": "var5.c.d != null",
                                            "instructions": [
                                                {
                                                    "field": "var5.c.d",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var5.c.i",
                                            "operation": "write",
                                            "type": "float"
                                        },
                                        {
                                            "field": "var5.c.j",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "field": "var5.e.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var5.e.entrySet().iterator()",
                                    "var": "var2"
                                },
                                {
                                    "condition": "var2.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((Map$Entry)var2.next())",
                                            "var": "var3"
                                        },
                                        {
                                            "field": "(String)var3.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "var5.f.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var5.f",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.length",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5",
                                            "var": "var6"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "var6.length",
                                            "var": "var7"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var8"
                                        },
                                        {
                                            "condition": "var8 < var7",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "var6[var8]",
                                                    "var": "var9"
                                                },
                                                {
                                                    "field": "var9",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "amount": "1",
                                                    "field": "var8",
                                                    "operation": "increment"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.c.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((wb)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.d.entrySet().iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((Map$Entry)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "(wb)var3.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "((aa)var3.getValue()).a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((aa)var3.getValue()).a.entrySet().iterator()",
                                    "var": "var2"
                                },
                                {
                                    "condition": "var2.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((Map$Entry)var2.next())",
                                            "var": "var3"
                                        },
                                        {
                                            "field": "(String)var3.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "(((ae)var3.getValue()).b != null) ? 1 : 0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "((ae)var3.getValue()).b != null",
                                            "instructions": [
                                                {
                                                    "field": "((ae)var3.getValue()).b.getTime()",
                                                    "operation": "write",
                                                    "type": "long"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 88,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_59": [
                {
                    "class": "sm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 89,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.b.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((sm$a)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "gn.al.b(var3.a())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "var3.b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "var3.c().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var3.c().iterator()",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((asi)var4.next())",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.a()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "var5.d()",
                                            "operation": "write",
                                            "type": "double"
                                        },
                                        {
                                            "field": "var5.c().a()",
                                            "operation": "write",
                                            "type": "byte"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "so.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 89,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5A": [
                {
                    "class": "sn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 90,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 90,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5B": [
                {
                    "class": "so.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 91,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((bqp)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "gn.ak.b(var3.ai_())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "var3.f()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "args": "packetbuffer, var3",
                                    "field": "var3.ai_()",
                                    "method": "a(Lnw;Lbqp;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "bqr",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 91,
                    "instructions": [
                        {
                            "field": "gn.T.a(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5C": [
                {
                    "class": "sp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 92,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "sr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 92,
                    "instructions": [
                        {
                            "field": "gn.T.a(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5D": [
                null,
                {
                    "class": "ss.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 93,
                    "instructions": [
                        {
                            "condition": "b != null",
                            "instructions": [
                                {
                                    "condition": "a != null",
                                    "instructions": [
                                        {
                                            "field": "3",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "b",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "a",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "b",
                                            "operation": "write",
                                            "type": "enum"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "a != null",
                                            "instructions": [
                                                {
                                                    "field": "2",
                                                    "operation": "write",
                                                    "type": "byte"
                                                },
                                                {
                                                    "field": "a",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "byte"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5E": [
                null,
                {
                    "class": "st.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 94,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5F": [
                null,
                {
                    "class": "su.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 95,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_60": [
                null,
                {
                    "class": "sv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 96,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_61": [
                null,
                {
                    "class": "sw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 97,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_62": [
                null,
                {
                    "class": "sx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 98,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<wn, y$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "condition": "itv.getValue().a == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "itv.getValue().a",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "condition": "itv.getValue().c == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "itv.getValue().c.a",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.b",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.c",
                                            "operation": "write",
                                            "type": "itemstack"
                                        },
                                        {
                                            "field": "itv.getValue().c.e",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 1)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.f",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 2)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.h",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 4)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().c.d",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "itv.getValue().c.i",
                                            "operation": "write",
                                            "type": "float"
                                        },
                                        {
                                            "field": "itv.getValue().c.j",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "field": "itv.getValue().e.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().e.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, ad>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "itv.getValue().f.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "itv.getValue().f",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.length",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5",
                                            "var": "var6"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "var6.length",
                                            "var": "var7"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var8"
                                        },
                                        {
                                            "condition": "var8 < var7",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "var6[var8]",
                                                    "var": "var9"
                                                },
                                                {
                                                    "field": "var9",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "amount": "1",
                                                    "field": "var8",
                                                    "operation": "increment"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "wn",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<wn, aa>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, ae>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "(itv.getValue().b != null) ? 1 : 0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.getValue().b != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().b.getTime()",
                                                    "operation": "write",
                                                    "type": "long"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_63": [
                null,
                {
                    "class": "sy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 99,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "sy$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "gn.al.b(itv.a())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "itv.c().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.c().iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "asz",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.a()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "double"
                                        },
                                        {
                                            "field": "itv.c().a()",
                                            "operation": "write",
                                            "type": "byte"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_64": [
                null,
                {
                    "class": "sz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 100,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_65": [
                null,
                {
                    "class": "ta.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 101,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "brg",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "gn.ak.b(itv.ai_())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.f()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "args": "packetbuffer, itv",
                                    "field": "itv.ai_()",
                                    "method": "a(Lnx;Lbrg;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "bri",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_66": [
                null,
                {
                    "class": "tb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 102,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<wm, afq$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<wn, it.unimi.dsi.fastutil.ints.IntList>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "field": "itv.getValue().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.getValue().iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0E": [
                {
                    "class": "th.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "b == th$a.c",
                            "instructions": [
                                {
                                    "field": "(float)c.c",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "(float)c.d",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "(float)c.e",
                                    "operation": "write",
                                    "type": "float"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "b != th$a.a",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "tt.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "b",
                            "method": "a(Lnx;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "tt$a",
                            "type": "interface"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ]
        }
    },
    "recipes": {
        "brewing_stand": [
            [
                {
                    "id": "minecraft:brewing_stand",
                    "makes": {
                        "count": 1,
                        "name": "brewing_stand",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            " B ",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "grimstone",
                                "type": "item"
                            },
                            "B": {
                                "name": "blaze_rod",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            null,
                            {
                                "name": "blaze_rod",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            [
                {
                    "id": "minecraft:brewing_stand",
                    "makes": {
                        "count": 1,
                        "name": "brewing_stand",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            " B ",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            "B": {
                                "name": "blaze_rod",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            null,
                            {
                                "name": "blaze_rod",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "chiseled_deepslate": [
            null,
            [
                {
                    "id": "minecraft:chiseled_deepslate",
                    "makes": {
                        "count": 1,
                        "name": "chiseled_deepslate",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#",
                            "#"
                        ],
                        "subs": {
                            "#": {
                                "name": "cobbled_deepslate_slab",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "cobbled_deepslate_slab",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "cobbled_deepslate_slab",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "chiseled_grimstone": [
            [
                {
                    "id": "minecraft:chiseled_grimstone",
                    "makes": {
                        "count": 1,
                        "name": "chiseled_grimstone",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#",
                            "#"
                        ],
                        "subs": {
                            "#": {
                                "name": "grimstone_slab",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "grimstone_slab",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "grimstone_slab",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "cobbled_deepslate_slab": [
            null,
            [
                {
                    "id": "minecraft:cobbled_deepslate_slab",
                    "makes": {
                        "count": 6,
                        "name": "cobbled_deepslate_slab",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "cobbled_deepslate_stairs": [
            null,
            [
                {
                    "id": "minecraft:cobbled_deepslate_stairs",
                    "makes": {
                        "count": 4,
                        "name": "cobbled_deepslate_stairs",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#  ",
                            "## ",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            null,
                            null
                        ],
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "cobbled_deepslate_wall": [
            null,
            [
                {
                    "id": "minecraft:cobbled_deepslate_wall",
                    "makes": {
                        "count": 6,
                        "name": "cobbled_deepslate_wall",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "deepslate_brick_slab": [
            null,
            [
                {
                    "id": "minecraft:deepslate_brick_slab",
                    "makes": {
                        "count": 6,
                        "name": "deepslate_brick_slab",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "deepslate_bricks",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "deepslate_bricks",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_bricks",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_bricks",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "deepslate_brick_stairs": [
            null,
            [
                {
                    "id": "minecraft:deepslate_brick_stairs",
                    "makes": {
                        "count": 4,
                        "name": "deepslate_brick_stairs",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#  ",
                            "## ",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "deepslate_bricks",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "deepslate_bricks",
                                "type": "item"
                            },
                            null,
                            null
                        ],
                        [
                            {
                                "name": "deepslate_bricks",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_bricks",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "deepslate_bricks",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_bricks",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_bricks",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "deepslate_brick_wall": [
            null,
            [
                {
                    "id": "minecraft:deepslate_brick_wall",
                    "makes": {
                        "count": 6,
                        "name": "deepslate_brick_wall",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "deepslate_bricks",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "deepslate_bricks",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_bricks",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_bricks",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "deepslate_bricks",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_bricks",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_bricks",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "deepslate_tile_slab": [
            null,
            [
                {
                    "id": "minecraft:deepslate_tile_slab",
                    "makes": {
                        "count": 6,
                        "name": "deepslate_tile_slab",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "deepslate_tiles",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "deepslate_tiles",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_tiles",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_tiles",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "deepslate_tile_stairs": [
            null,
            [
                {
                    "id": "minecraft:deepslate_tile_stairs",
                    "makes": {
                        "count": 4,
                        "name": "deepslate_tile_stairs",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#  ",
                            "## ",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "deepslate_tiles",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "deepslate_tiles",
                                "type": "item"
                            },
                            null,
                            null
                        ],
                        [
                            {
                                "name": "deepslate_tiles",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_tiles",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "deepslate_tiles",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_tiles",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_tiles",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "deepslate_tile_wall": [
            null,
            [
                {
                    "id": "minecraft:deepslate_tile_wall",
                    "makes": {
                        "count": 6,
                        "name": "deepslate_tile_wall",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "deepslate_tiles",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "deepslate_tiles",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_tiles",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_tiles",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "deepslate_tiles",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_tiles",
                                "type": "item"
                            },
                            {
                                "name": "deepslate_tiles",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "furnace": [
            [
                {
                    "id": "minecraft:furnace",
                    "makes": {
                        "count": 1,
                        "name": "furnace",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###",
                            "# #",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "grimstone",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            null,
                            {
                                "name": "grimstone",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            [
                {
                    "id": "minecraft:furnace",
                    "makes": {
                        "count": 1,
                        "name": "furnace",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###",
                            "# #",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            null,
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "grimstone_brick_slab": [
            [
                {
                    "id": "minecraft:grimstone_brick_slab",
                    "makes": {
                        "count": 6,
                        "name": "grimstone_brick_slab",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "grimstone_bricks",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "grimstone_bricks",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_bricks",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_bricks",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "grimstone_brick_stairs": [
            [
                {
                    "id": "minecraft:grimstone_brick_stairs",
                    "makes": {
                        "count": 4,
                        "name": "grimstone_brick_stairs",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#  ",
                            "## ",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "grimstone_bricks",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "grimstone_bricks",
                                "type": "item"
                            },
                            null,
                            null
                        ],
                        [
                            {
                                "name": "grimstone_bricks",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_bricks",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "grimstone_bricks",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_bricks",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_bricks",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "grimstone_brick_wall": [
            [
                {
                    "id": "minecraft:grimstone_brick_wall",
                    "makes": {
                        "count": 6,
                        "name": "grimstone_brick_wall",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "grimstone_bricks",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "grimstone_bricks",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_bricks",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_bricks",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "grimstone_bricks",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_bricks",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_bricks",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "grimstone_slab": [
            [
                {
                    "id": "minecraft:grimstone_slab",
                    "makes": {
                        "count": 6,
                        "name": "grimstone_slab",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "grimstone",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "grimstone_stairs": [
            [
                {
                    "id": "minecraft:grimstone_stairs",
                    "makes": {
                        "count": 4,
                        "name": "grimstone_stairs",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#  ",
                            "## ",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "grimstone",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            null,
                            null
                        ],
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "grimstone_tile_slab": [
            [
                {
                    "id": "minecraft:grimstone_tile_slab",
                    "makes": {
                        "count": 6,
                        "name": "grimstone_tile_slab",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "grimstone_tiles",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "grimstone_tiles",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_tiles",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_tiles",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "grimstone_tile_stairs": [
            [
                {
                    "id": "minecraft:grimstone_tile_stairs",
                    "makes": {
                        "count": 4,
                        "name": "grimstone_tile_stairs",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#  ",
                            "## ",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "grimstone_tiles",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "grimstone_tiles",
                                "type": "item"
                            },
                            null,
                            null
                        ],
                        [
                            {
                                "name": "grimstone_tiles",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_tiles",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "grimstone_tiles",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_tiles",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_tiles",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "grimstone_tile_wall": [
            [
                {
                    "id": "minecraft:grimstone_tile_wall",
                    "makes": {
                        "count": 6,
                        "name": "grimstone_tile_wall",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "grimstone_tiles",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "grimstone_tiles",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_tiles",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_tiles",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "grimstone_tiles",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_tiles",
                                "type": "item"
                            },
                            {
                                "name": "grimstone_tiles",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "grimstone_wall": [
            [
                {
                    "id": "minecraft:grimstone_wall",
                    "makes": {
                        "count": 6,
                        "name": "grimstone_wall",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "grimstone",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "polished_deepslate": [
            null,
            [
                {
                    "id": "minecraft:polished_deepslate",
                    "makes": {
                        "count": 4,
                        "name": "polished_deepslate",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "SS",
                            "SS"
                        ],
                        "subs": {
                            "S": {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "polished_deepslate_slab": [
            null,
            [
                {
                    "id": "minecraft:polished_deepslate_slab",
                    "makes": {
                        "count": 6,
                        "name": "polished_deepslate_slab",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "polished_deepslate",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "polished_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "polished_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "polished_deepslate",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "polished_deepslate_stairs": [
            null,
            [
                {
                    "id": "minecraft:polished_deepslate_stairs",
                    "makes": {
                        "count": 4,
                        "name": "polished_deepslate_stairs",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#  ",
                            "## ",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "polished_deepslate",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "polished_deepslate",
                                "type": "item"
                            },
                            null,
                            null
                        ],
                        [
                            {
                                "name": "polished_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "polished_deepslate",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "polished_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "polished_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "polished_deepslate",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "polished_deepslate_wall": [
            null,
            [
                {
                    "id": "minecraft:polished_deepslate_wall",
                    "makes": {
                        "count": 6,
                        "name": "polished_deepslate_wall",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "polished_deepslate",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "polished_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "polished_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "polished_deepslate",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "polished_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "polished_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "polished_deepslate",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "polished_grimstone": [
            [
                {
                    "id": "minecraft:polished_grimstone",
                    "makes": {
                        "count": 4,
                        "name": "polished_grimstone",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "SS",
                            "SS"
                        ],
                        "subs": {
                            "S": {
                                "name": "grimstone",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "polished_grimstone_slab": [
            [
                {
                    "id": "minecraft:polished_grimstone_slab",
                    "makes": {
                        "count": 6,
                        "name": "polished_grimstone_slab",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "polished_grimstone",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "polished_grimstone",
                                "type": "item"
                            },
                            {
                                "name": "polished_grimstone",
                                "type": "item"
                            },
                            {
                                "name": "polished_grimstone",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "polished_grimstone_stairs": [
            [
                {
                    "id": "minecraft:polished_grimstone_stairs",
                    "makes": {
                        "count": 4,
                        "name": "polished_grimstone_stairs",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "#  ",
                            "## ",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "polished_grimstone",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "polished_grimstone",
                                "type": "item"
                            },
                            null,
                            null
                        ],
                        [
                            {
                                "name": "polished_grimstone",
                                "type": "item"
                            },
                            {
                                "name": "polished_grimstone",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            {
                                "name": "polished_grimstone",
                                "type": "item"
                            },
                            {
                                "name": "polished_grimstone",
                                "type": "item"
                            },
                            {
                                "name": "polished_grimstone",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "polished_grimstone_wall": [
            [
                {
                    "id": "minecraft:polished_grimstone_wall",
                    "makes": {
                        "count": 6,
                        "name": "polished_grimstone_wall",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "###",
                            "###"
                        ],
                        "subs": {
                            "#": {
                                "name": "polished_grimstone",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "polished_grimstone",
                                "type": "item"
                            },
                            {
                                "name": "polished_grimstone",
                                "type": "item"
                            },
                            {
                                "name": "polished_grimstone",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "polished_grimstone",
                                "type": "item"
                            },
                            {
                                "name": "polished_grimstone",
                                "type": "item"
                            },
                            {
                                "name": "polished_grimstone",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            null
        ],
        "stone_axe": [
            [
                {
                    "id": "minecraft:stone_axe",
                    "makes": {
                        "count": 1,
                        "name": "stone_axe",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "XX",
                            "X#",
                            " #"
                        ],
                        "subs": {
                            "#": {
                                "name": "stick",
                                "type": "item"
                            },
                            "X": {
                                "name": "grimstone",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "stick",
                                "type": "item"
                            }
                        ],
                        [
                            null,
                            {
                                "name": "stick",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            [
                {
                    "id": "minecraft:stone_axe",
                    "makes": {
                        "count": 1,
                        "name": "stone_axe",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "XX",
                            "X#",
                            " #"
                        ],
                        "subs": {
                            "#": {
                                "name": "stick",
                                "type": "item"
                            },
                            "X": {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "stick",
                                "type": "item"
                            }
                        ],
                        [
                            null,
                            {
                                "name": "stick",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "stone_hoe": [
            [
                {
                    "id": "minecraft:stone_hoe",
                    "makes": {
                        "count": 1,
                        "name": "stone_hoe",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "XX",
                            " #",
                            " #"
                        ],
                        "subs": {
                            "#": {
                                "name": "stick",
                                "type": "item"
                            },
                            "X": {
                                "name": "grimstone",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            }
                        ],
                        [
                            null,
                            {
                                "name": "stick",
                                "type": "item"
                            }
                        ],
                        [
                            null,
                            {
                                "name": "stick",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            [
                {
                    "id": "minecraft:stone_hoe",
                    "makes": {
                        "count": 1,
                        "name": "stone_hoe",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "XX",
                            " #",
                            " #"
                        ],
                        "subs": {
                            "#": {
                                "name": "stick",
                                "type": "item"
                            },
                            "X": {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        ],
                        [
                            null,
                            {
                                "name": "stick",
                                "type": "item"
                            }
                        ],
                        [
                            null,
                            {
                                "name": "stick",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "stone_pickaxe": [
            [
                {
                    "id": "minecraft:stone_pickaxe",
                    "makes": {
                        "count": 1,
                        "name": "stone_pickaxe",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "XXX",
                            " # ",
                            " # "
                        ],
                        "subs": {
                            "#": {
                                "name": "stick",
                                "type": "item"
                            },
                            "X": {
                                "name": "grimstone",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            },
                            {
                                "name": "grimstone",
                                "type": "item"
                            }
                        ],
                        [
                            null,
                            {
                                "name": "stick",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            null,
                            {
                                "name": "stick",
                                "type": "item"
                            },
                            null
                        ]
                    ],
                    "type": "shape"
                }
            ],
            [
                {
                    "id": "minecraft:stone_pickaxe",
                    "makes": {
                        "count": 1,
                        "name": "stone_pickaxe",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "XXX",
                            " # ",
                            " # "
                        ],
                        "subs": {
                            "#": {
                                "name": "stick",
                                "type": "item"
                            },
                            "X": {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            },
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        ],
                        [
                            null,
                            {
                                "name": "stick",
                                "type": "item"
                            },
                            null
                        ],
                        [
                            null,
                            {
                                "name": "stick",
                                "type": "item"
                            },
                            null
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "stone_shovel": [
            [
                {
                    "id": "minecraft:stone_shovel",
                    "makes": {
                        "count": 1,
                        "name": "stone_shovel",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "X",
                            "#",
                            "#"
                        ],
                        "subs": {
                            "#": {
                                "name": "stick",
                                "type": "item"
                            },
                            "X": {
                                "name": "grimstone",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "stick",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "stick",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            [
                {
                    "id": "minecraft:stone_shovel",
                    "makes": {
                        "count": 1,
                        "name": "stone_shovel",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "X",
                            "#",
                            "#"
                        ],
                        "subs": {
                            "#": {
                                "name": "stick",
                                "type": "item"
                            },
                            "X": {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "stick",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "stick",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ],
        "stone_sword": [
            [
                {
                    "id": "minecraft:stone_sword",
                    "makes": {
                        "count": 1,
                        "name": "stone_sword",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "X",
                            "X",
                            "#"
                        ],
                        "subs": {
                            "#": {
                                "name": "stick",
                                "type": "item"
                            },
                            "X": {
                                "name": "grimstone",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "grimstone",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "stick",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ],
            [
                {
                    "id": "minecraft:stone_sword",
                    "makes": {
                        "count": 1,
                        "name": "stone_sword",
                        "type": "item"
                    },
                    "raw": {
                        "rows": [
                            "X",
                            "X",
                            "#"
                        ],
                        "subs": {
                            "#": {
                                "name": "stick",
                                "type": "item"
                            },
                            "X": {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        }
                    },
                    "shape": [
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "cobbled_deepslate",
                                "type": "item"
                            }
                        ],
                        [
                            {
                                "name": "stick",
                                "type": "item"
                            }
                        ]
                    ],
                    "type": "shape"
                }
            ]
        ]
    },
    "sounds": {
        "block.deepslate.break": [
            null,
            {
                "field": "dO",
                "id": 248,
                "name": "block.deepslate.break",
                "sounds": [
                    {
                        "hash": "bb709bbfde582e0b261b4f8d01e10e35ee41e63b",
                        "name": "block/deepslate/break1"
                    },
                    {
                        "hash": "d80d4bd2f28318f7291baa4fec3f00b4bd56066a",
                        "name": "block/deepslate/break2"
                    },
                    {
                        "hash": "16f63773f4258b983891136c54c32735c59b2c05",
                        "name": "block/deepslate/break3"
                    },
                    {
                        "hash": "a7ff95731dd1668bff61898362091cce9c49cdf1",
                        "name": "block/deepslate/break4"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.deepslate.fall": [
            null,
            {
                "field": "dP",
                "id": 249,
                "name": "block.deepslate.fall",
                "sounds": [
                    {
                        "hash": "f66841e1965b8a4b85fe01a21af09172b002401c",
                        "name": "block/deepslate/step1"
                    },
                    {
                        "hash": "a2d1a08b5c89ff034009d33053fed40c29f68f2e",
                        "name": "block/deepslate/step2"
                    },
                    {
                        "hash": "e889bcce8431d117ce4c0ef3fd9b9a0567484faa",
                        "name": "block/deepslate/step3"
                    },
                    {
                        "hash": "52ff5e2c9ff808388c76e2ad1b2b805cb53ebd38",
                        "name": "block/deepslate/step4"
                    },
                    {
                        "hash": "5447b5165697eb5e2b4724a9dc5b345ba5cce111",
                        "name": "block/deepslate/step5"
                    },
                    {
                        "hash": "d7f85e94a76e067aad8e2b8ee612d65ecfffc11a",
                        "name": "block/deepslate/step6"
                    }
                ]
            }
        ],
        "block.deepslate.hit": [
            null,
            {
                "field": "dQ",
                "id": 250,
                "name": "block.deepslate.hit",
                "sounds": [
                    {
                        "hash": "f66841e1965b8a4b85fe01a21af09172b002401c",
                        "name": "block/deepslate/step1"
                    },
                    {
                        "hash": "a2d1a08b5c89ff034009d33053fed40c29f68f2e",
                        "name": "block/deepslate/step2"
                    },
                    {
                        "hash": "e889bcce8431d117ce4c0ef3fd9b9a0567484faa",
                        "name": "block/deepslate/step3"
                    },
                    {
                        "hash": "52ff5e2c9ff808388c76e2ad1b2b805cb53ebd38",
                        "name": "block/deepslate/step4"
                    },
                    {
                        "hash": "5447b5165697eb5e2b4724a9dc5b345ba5cce111",
                        "name": "block/deepslate/step5"
                    },
                    {
                        "hash": "d7f85e94a76e067aad8e2b8ee612d65ecfffc11a",
                        "name": "block/deepslate/step6"
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.deepslate.place": [
            null,
            {
                "field": "dR",
                "id": 251,
                "name": "block.deepslate.place",
                "sounds": [
                    {
                        "hash": "a181d87822808974392cd7bf081121523687cd3d",
                        "name": "block/deepslate/place1"
                    },
                    {
                        "hash": "a24c6e7d083b8e69caf5de24eb698611b304fc87",
                        "name": "block/deepslate/place2"
                    },
                    {
                        "hash": "36c387db12975376921f130e0971f52bd0bd573a",
                        "name": "block/deepslate/place3"
                    },
                    {
                        "hash": "3a7888bdd0e2803a2b08d2505e4ff99c707df1f9",
                        "name": "block/deepslate/place4"
                    },
                    {
                        "hash": "bdece9f83ab1959684fd51b8b806dce647012dcc",
                        "name": "block/deepslate/place5"
                    },
                    {
                        "hash": "1e99a8f02ad6154660b68863b5dddbfc06aa95a7",
                        "name": "block/deepslate/place6"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.deepslate.step": [
            null,
            {
                "field": "dS",
                "id": 252,
                "name": "block.deepslate.step",
                "sounds": [
                    {
                        "hash": "f66841e1965b8a4b85fe01a21af09172b002401c",
                        "name": "block/deepslate/step1"
                    },
                    {
                        "hash": "a2d1a08b5c89ff034009d33053fed40c29f68f2e",
                        "name": "block/deepslate/step2"
                    },
                    {
                        "hash": "e889bcce8431d117ce4c0ef3fd9b9a0567484faa",
                        "name": "block/deepslate/step3"
                    },
                    {
                        "hash": "52ff5e2c9ff808388c76e2ad1b2b805cb53ebd38",
                        "name": "block/deepslate/step4"
                    },
                    {
                        "hash": "5447b5165697eb5e2b4724a9dc5b345ba5cce111",
                        "name": "block/deepslate/step5"
                    },
                    {
                        "hash": "d7f85e94a76e067aad8e2b8ee612d65ecfffc11a",
                        "name": "block/deepslate/step6"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "block.deepslate_bricks.break": [
            null,
            {
                "field": "dJ",
                "id": 243,
                "name": "block.deepslate_bricks.break",
                "sounds": [
                    {
                        "hash": "f71e1acfb97f26e48044e0d2cacb986b1311d4d9",
                        "name": "block/deepslate_bricks/place1",
                        "pitch": 1,
                        "volume": 0.85
                    },
                    {
                        "hash": "d4c30f6ed41abefe8f72e1578c1006f581fd8a77",
                        "name": "block/deepslate_bricks/place2",
                        "pitch": 1,
                        "volume": 0.85
                    },
                    {
                        "hash": "719a10effd17a4f440985febde4d27529cc278db",
                        "name": "block/deepslate_bricks/place3",
                        "pitch": 1,
                        "volume": 0.85
                    },
                    {
                        "hash": "1bd5bc41540c90a5a156377e7d1acde0c82b0e8f",
                        "name": "block/deepslate_bricks/place4",
                        "pitch": 1,
                        "volume": 0.85
                    },
                    {
                        "hash": "4d68e519f69b99c678870b71d7a8dcdbfda153b3",
                        "name": "block/deepslate_bricks/place5",
                        "pitch": 1,
                        "volume": 0.85
                    },
                    {
                        "hash": "d5671a3b331716cd8a294a089150329dad4d8041",
                        "name": "block/deepslate_bricks/place6",
                        "pitch": 1,
                        "volume": 0.85
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.deepslate_bricks.fall": [
            null,
            {
                "field": "dK",
                "id": 244,
                "name": "block.deepslate_bricks.fall",
                "sounds": [
                    {
                        "hash": "0af366a1afbede2e47146caa5e4a48b647fa770f",
                        "name": "block/deepslate_bricks/step1",
                        "pitch": 1
                    },
                    {
                        "hash": "7d3c3e8889167578206fddb0a25d30f713159de9",
                        "name": "block/deepslate_bricks/step2",
                        "pitch": 1
                    },
                    {
                        "hash": "3634810d138e7094a12b13cbeb46fa0c63f78d13",
                        "name": "block/deepslate_bricks/step3",
                        "pitch": 1
                    },
                    {
                        "hash": "9ee3c91e8feabf53412b7987e1cbf68d4bfe55aa",
                        "name": "block/deepslate_bricks/step4",
                        "pitch": 1
                    },
                    {
                        "hash": "a2ab744b54a54e2eb1fc12c7e26dd6066b1799e8",
                        "name": "block/deepslate_bricks/step5",
                        "pitch": 1
                    }
                ]
            }
        ],
        "block.deepslate_bricks.hit": [
            null,
            {
                "field": "dL",
                "id": 245,
                "name": "block.deepslate_bricks.hit",
                "sounds": [
                    {
                        "hash": "0af366a1afbede2e47146caa5e4a48b647fa770f",
                        "name": "block/deepslate_bricks/step1",
                        "pitch": 1
                    },
                    {
                        "hash": "7d3c3e8889167578206fddb0a25d30f713159de9",
                        "name": "block/deepslate_bricks/step2",
                        "pitch": 1
                    },
                    {
                        "hash": "3634810d138e7094a12b13cbeb46fa0c63f78d13",
                        "name": "block/deepslate_bricks/step3",
                        "pitch": 1
                    },
                    {
                        "hash": "9ee3c91e8feabf53412b7987e1cbf68d4bfe55aa",
                        "name": "block/deepslate_bricks/step4",
                        "pitch": 1
                    },
                    {
                        "hash": "a2ab744b54a54e2eb1fc12c7e26dd6066b1799e8",
                        "name": "block/deepslate_bricks/step5",
                        "pitch": 1
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.deepslate_bricks.place": [
            null,
            {
                "field": "dM",
                "id": 246,
                "name": "block.deepslate_bricks.place",
                "sounds": [
                    {
                        "hash": "f71e1acfb97f26e48044e0d2cacb986b1311d4d9",
                        "name": "block/deepslate_bricks/place1",
                        "pitch": 1,
                        "volume": 0.85
                    },
                    {
                        "hash": "d4c30f6ed41abefe8f72e1578c1006f581fd8a77",
                        "name": "block/deepslate_bricks/place2",
                        "pitch": 1,
                        "volume": 0.85
                    },
                    {
                        "hash": "719a10effd17a4f440985febde4d27529cc278db",
                        "name": "block/deepslate_bricks/place3",
                        "pitch": 1,
                        "volume": 0.85
                    },
                    {
                        "hash": "1bd5bc41540c90a5a156377e7d1acde0c82b0e8f",
                        "name": "block/deepslate_bricks/place4",
                        "pitch": 1,
                        "volume": 0.85
                    },
                    {
                        "hash": "4d68e519f69b99c678870b71d7a8dcdbfda153b3",
                        "name": "block/deepslate_bricks/place5",
                        "pitch": 1,
                        "volume": 0.85
                    },
                    {
                        "hash": "d5671a3b331716cd8a294a089150329dad4d8041",
                        "name": "block/deepslate_bricks/place6",
                        "pitch": 1,
                        "volume": 0.85
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.deepslate_bricks.step": [
            null,
            {
                "field": "dN",
                "id": 247,
                "name": "block.deepslate_bricks.step",
                "sounds": [
                    {
                        "hash": "0af366a1afbede2e47146caa5e4a48b647fa770f",
                        "name": "block/deepslate_bricks/step1",
                        "pitch": 0.9
                    },
                    {
                        "hash": "7d3c3e8889167578206fddb0a25d30f713159de9",
                        "name": "block/deepslate_bricks/step2",
                        "pitch": 0.9
                    },
                    {
                        "hash": "3634810d138e7094a12b13cbeb46fa0c63f78d13",
                        "name": "block/deepslate_bricks/step3",
                        "pitch": 0.9
                    },
                    {
                        "hash": "9ee3c91e8feabf53412b7987e1cbf68d4bfe55aa",
                        "name": "block/deepslate_bricks/step4",
                        "pitch": 0.9
                    },
                    {
                        "hash": "a2ab744b54a54e2eb1fc12c7e26dd6066b1799e8",
                        "name": "block/deepslate_bricks/step5",
                        "pitch": 0.9
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "block.deepslate_tiles.break": [
            null,
            {
                "field": "dT",
                "id": 253,
                "name": "block.deepslate_tiles.break",
                "sounds": [
                    {
                        "hash": "f71e1acfb97f26e48044e0d2cacb986b1311d4d9",
                        "name": "block/deepslate_bricks/place1",
                        "pitch": 1.3,
                        "volume": 0.92
                    },
                    {
                        "hash": "d4c30f6ed41abefe8f72e1578c1006f581fd8a77",
                        "name": "block/deepslate_bricks/place2",
                        "pitch": 1.3,
                        "volume": 0.92
                    },
                    {
                        "hash": "719a10effd17a4f440985febde4d27529cc278db",
                        "name": "block/deepslate_bricks/place3",
                        "pitch": 1.3,
                        "volume": 0.92
                    },
                    {
                        "hash": "1bd5bc41540c90a5a156377e7d1acde0c82b0e8f",
                        "name": "block/deepslate_bricks/place4",
                        "pitch": 1.3,
                        "volume": 0.92
                    },
                    {
                        "hash": "4d68e519f69b99c678870b71d7a8dcdbfda153b3",
                        "name": "block/deepslate_bricks/place5",
                        "pitch": 1.3,
                        "volume": 0.92
                    },
                    {
                        "hash": "d5671a3b331716cd8a294a089150329dad4d8041",
                        "name": "block/deepslate_bricks/place6",
                        "pitch": 1.3,
                        "volume": 0.92
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.deepslate_tiles.fall": [
            null,
            {
                "field": "dU",
                "id": 254,
                "name": "block.deepslate_tiles.fall",
                "sounds": [
                    {
                        "hash": "0af366a1afbede2e47146caa5e4a48b647fa770f",
                        "name": "block/deepslate_bricks/step1",
                        "pitch": 1.3
                    },
                    {
                        "hash": "7d3c3e8889167578206fddb0a25d30f713159de9",
                        "name": "block/deepslate_bricks/step2",
                        "pitch": 1.3
                    },
                    {
                        "hash": "3634810d138e7094a12b13cbeb46fa0c63f78d13",
                        "name": "block/deepslate_bricks/step3",
                        "pitch": 1.3
                    },
                    {
                        "hash": "9ee3c91e8feabf53412b7987e1cbf68d4bfe55aa",
                        "name": "block/deepslate_bricks/step4",
                        "pitch": 1.3
                    },
                    {
                        "hash": "a2ab744b54a54e2eb1fc12c7e26dd6066b1799e8",
                        "name": "block/deepslate_bricks/step5",
                        "pitch": 1.3
                    }
                ]
            }
        ],
        "block.deepslate_tiles.hit": [
            null,
            {
                "field": "dV",
                "id": 255,
                "name": "block.deepslate_tiles.hit",
                "sounds": [
                    {
                        "hash": "0af366a1afbede2e47146caa5e4a48b647fa770f",
                        "name": "block/deepslate_bricks/step1",
                        "pitch": 1.3
                    },
                    {
                        "hash": "7d3c3e8889167578206fddb0a25d30f713159de9",
                        "name": "block/deepslate_bricks/step2",
                        "pitch": 1.3
                    },
                    {
                        "hash": "3634810d138e7094a12b13cbeb46fa0c63f78d13",
                        "name": "block/deepslate_bricks/step3",
                        "pitch": 1.3
                    },
                    {
                        "hash": "9ee3c91e8feabf53412b7987e1cbf68d4bfe55aa",
                        "name": "block/deepslate_bricks/step4",
                        "pitch": 1.3
                    },
                    {
                        "hash": "a2ab744b54a54e2eb1fc12c7e26dd6066b1799e8",
                        "name": "block/deepslate_bricks/step5",
                        "pitch": 1.3
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.deepslate_tiles.place": [
            null,
            {
                "field": "dW",
                "id": 256,
                "name": "block.deepslate_tiles.place",
                "sounds": [
                    {
                        "hash": "f71e1acfb97f26e48044e0d2cacb986b1311d4d9",
                        "name": "block/deepslate_bricks/place1",
                        "pitch": 1.2,
                        "volume": 0.85
                    },
                    {
                        "hash": "d4c30f6ed41abefe8f72e1578c1006f581fd8a77",
                        "name": "block/deepslate_bricks/place2",
                        "pitch": 1.2,
                        "volume": 0.85
                    },
                    {
                        "hash": "719a10effd17a4f440985febde4d27529cc278db",
                        "name": "block/deepslate_bricks/place3",
                        "pitch": 1.2,
                        "volume": 0.85
                    },
                    {
                        "hash": "1bd5bc41540c90a5a156377e7d1acde0c82b0e8f",
                        "name": "block/deepslate_bricks/place4",
                        "pitch": 1.2,
                        "volume": 0.85
                    },
                    {
                        "hash": "4d68e519f69b99c678870b71d7a8dcdbfda153b3",
                        "name": "block/deepslate_bricks/place5",
                        "pitch": 1.2,
                        "volume": 0.85
                    },
                    {
                        "hash": "d5671a3b331716cd8a294a089150329dad4d8041",
                        "name": "block/deepslate_bricks/place6",
                        "pitch": 1.2,
                        "volume": 0.85
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.deepslate_tiles.step": [
            null,
            {
                "field": "dX",
                "id": 257,
                "name": "block.deepslate_tiles.step",
                "sounds": [
                    {
                        "hash": "0af366a1afbede2e47146caa5e4a48b647fa770f",
                        "name": "block/deepslate_bricks/step1",
                        "pitch": 1.2
                    },
                    {
                        "hash": "7d3c3e8889167578206fddb0a25d30f713159de9",
                        "name": "block/deepslate_bricks/step2",
                        "pitch": 1.2
                    },
                    {
                        "hash": "3634810d138e7094a12b13cbeb46fa0c63f78d13",
                        "name": "block/deepslate_bricks/step3",
                        "pitch": 1.2
                    },
                    {
                        "hash": "9ee3c91e8feabf53412b7987e1cbf68d4bfe55aa",
                        "name": "block/deepslate_bricks/step4",
                        "pitch": 1.2
                    },
                    {
                        "hash": "a2ab744b54a54e2eb1fc12c7e26dd6066b1799e8",
                        "name": "block/deepslate_bricks/step5",
                        "pitch": 1.2
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "block.polished_deepslate.break": [
            null,
            {
                "field": "oj",
                "id": 789,
                "name": "block.polished_deepslate.break",
                "sounds": [
                    {
                        "hash": "bb709bbfde582e0b261b4f8d01e10e35ee41e63b",
                        "name": "block/deepslate/break1"
                    },
                    {
                        "hash": "d80d4bd2f28318f7291baa4fec3f00b4bd56066a",
                        "name": "block/deepslate/break2"
                    },
                    {
                        "hash": "16f63773f4258b983891136c54c32735c59b2c05",
                        "name": "block/deepslate/break3"
                    },
                    {
                        "hash": "a7ff95731dd1668bff61898362091cce9c49cdf1",
                        "name": "block/deepslate/break4"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.polished_deepslate.fall": [
            null,
            {
                "field": "ok",
                "id": 790,
                "name": "block.polished_deepslate.fall",
                "sounds": [
                    {
                        "hash": "f66841e1965b8a4b85fe01a21af09172b002401c",
                        "name": "block/deepslate/step1"
                    },
                    {
                        "hash": "a2d1a08b5c89ff034009d33053fed40c29f68f2e",
                        "name": "block/deepslate/step2"
                    },
                    {
                        "hash": "e889bcce8431d117ce4c0ef3fd9b9a0567484faa",
                        "name": "block/deepslate/step3"
                    },
                    {
                        "hash": "52ff5e2c9ff808388c76e2ad1b2b805cb53ebd38",
                        "name": "block/deepslate/step4"
                    },
                    {
                        "hash": "5447b5165697eb5e2b4724a9dc5b345ba5cce111",
                        "name": "block/deepslate/step5"
                    },
                    {
                        "hash": "d7f85e94a76e067aad8e2b8ee612d65ecfffc11a",
                        "name": "block/deepslate/step6"
                    }
                ]
            }
        ],
        "block.polished_deepslate.hit": [
            null,
            {
                "field": "ol",
                "id": 791,
                "name": "block.polished_deepslate.hit",
                "sounds": [
                    {
                        "hash": "f66841e1965b8a4b85fe01a21af09172b002401c",
                        "name": "block/deepslate/step1"
                    },
                    {
                        "hash": "a2d1a08b5c89ff034009d33053fed40c29f68f2e",
                        "name": "block/deepslate/step2"
                    },
                    {
                        "hash": "e889bcce8431d117ce4c0ef3fd9b9a0567484faa",
                        "name": "block/deepslate/step3"
                    },
                    {
                        "hash": "52ff5e2c9ff808388c76e2ad1b2b805cb53ebd38",
                        "name": "block/deepslate/step4"
                    },
                    {
                        "hash": "5447b5165697eb5e2b4724a9dc5b345ba5cce111",
                        "name": "block/deepslate/step5"
                    },
                    {
                        "hash": "d7f85e94a76e067aad8e2b8ee612d65ecfffc11a",
                        "name": "block/deepslate/step6"
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.polished_deepslate.place": [
            null,
            {
                "field": "om",
                "id": 792,
                "name": "block.polished_deepslate.place",
                "sounds": [
                    {
                        "hash": "a181d87822808974392cd7bf081121523687cd3d",
                        "name": "block/deepslate/place1"
                    },
                    {
                        "hash": "a24c6e7d083b8e69caf5de24eb698611b304fc87",
                        "name": "block/deepslate/place2"
                    },
                    {
                        "hash": "36c387db12975376921f130e0971f52bd0bd573a",
                        "name": "block/deepslate/place3"
                    },
                    {
                        "hash": "3a7888bdd0e2803a2b08d2505e4ff99c707df1f9",
                        "name": "block/deepslate/place4"
                    },
                    {
                        "hash": "bdece9f83ab1959684fd51b8b806dce647012dcc",
                        "name": "block/deepslate/place5"
                    },
                    {
                        "hash": "1e99a8f02ad6154660b68863b5dddbfc06aa95a7",
                        "name": "block/deepslate/place6"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.polished_deepslate.step": [
            null,
            {
                "field": "on",
                "id": 793,
                "name": "block.polished_deepslate.step",
                "sounds": [
                    {
                        "hash": "f66841e1965b8a4b85fe01a21af09172b002401c",
                        "name": "block/deepslate/step1"
                    },
                    {
                        "hash": "a2d1a08b5c89ff034009d33053fed40c29f68f2e",
                        "name": "block/deepslate/step2"
                    },
                    {
                        "hash": "e889bcce8431d117ce4c0ef3fd9b9a0567484faa",
                        "name": "block/deepslate/step3"
                    },
                    {
                        "hash": "52ff5e2c9ff808388c76e2ad1b2b805cb53ebd38",
                        "name": "block/deepslate/step4"
                    },
                    {
                        "hash": "5447b5165697eb5e2b4724a9dc5b345ba5cce111",
                        "name": "block/deepslate/step5"
                    },
                    {
                        "hash": "d7f85e94a76e067aad8e2b8ee612d65ecfffc11a",
                        "name": "block/deepslate/step6"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ]
    },
    "stats": {},
    "tags": {
        "blocks/base_stone_overworld": [
            {
                "name": "base_stone_overworld",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:stone",
                    "minecraft:granite",
                    "minecraft:diorite",
                    "minecraft:andesite",
                    "minecraft:grimstone"
                ]
            },
            {
                "name": "base_stone_overworld",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:stone",
                    "minecraft:granite",
                    "minecraft:diorite",
                    "minecraft:andesite",
                    "minecraft:tuff",
                    "minecraft:deepslate"
                ]
            }
        ],
        "blocks/deepslate_ore_replaceables": [
            null,
            {
                "name": "deepslate_ore_replaceables",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:deepslate"
                ]
            }
        ],
        "blocks/diamond_ores": [
            null,
            {
                "name": "diamond_ores",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:diamond_ore",
                    "minecraft:deepslate_diamond_ore"
                ]
            }
        ],
        "blocks/dripstone_replaceable_blocks": [
            {
                "name": "dripstone_replaceable_blocks",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:stone",
                    "minecraft:granite",
                    "minecraft:diorite",
                    "minecraft:andesite",
                    "minecraft:grimstone",
                    "minecraft:dirt"
                ]
            },
            {
                "name": "dripstone_replaceable_blocks",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:stone",
                    "minecraft:granite",
                    "minecraft:diorite",
                    "minecraft:andesite",
                    "minecraft:tuff",
                    "minecraft:deepslate",
                    "minecraft:dirt"
                ]
            }
        ],
        "blocks/gold_ores": [
            {
                "name": "gold_ores",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:gold_ore",
                    "minecraft:nether_gold_ore"
                ]
            },
            {
                "name": "gold_ores",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:gold_ore",
                    "minecraft:nether_gold_ore",
                    "minecraft:deepslate_gold_ore"
                ]
            }
        ],
        "blocks/guarded_by_piglins": [
            {
                "name": "guarded_by_piglins",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:gold_block",
                    "minecraft:barrel",
                    "minecraft:chest",
                    "minecraft:ender_chest",
                    "minecraft:gilded_blackstone",
                    "minecraft:trapped_chest",
                    "minecraft:shulker_box",
                    "minecraft:black_shulker_box",
                    "minecraft:blue_shulker_box",
                    "minecraft:brown_shulker_box",
                    "minecraft:cyan_shulker_box",
                    "minecraft:gray_shulker_box",
                    "minecraft:green_shulker_box",
                    "minecraft:light_blue_shulker_box",
                    "minecraft:light_gray_shulker_box",
                    "minecraft:lime_shulker_box",
                    "minecraft:magenta_shulker_box",
                    "minecraft:orange_shulker_box",
                    "minecraft:pink_shulker_box",
                    "minecraft:purple_shulker_box",
                    "minecraft:red_shulker_box",
                    "minecraft:white_shulker_box",
                    "minecraft:yellow_shulker_box",
                    "minecraft:gold_ore",
                    "minecraft:nether_gold_ore"
                ]
            },
            {
                "name": "guarded_by_piglins",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:gold_block",
                    "minecraft:barrel",
                    "minecraft:chest",
                    "minecraft:ender_chest",
                    "minecraft:gilded_blackstone",
                    "minecraft:trapped_chest",
                    "minecraft:shulker_box",
                    "minecraft:black_shulker_box",
                    "minecraft:blue_shulker_box",
                    "minecraft:brown_shulker_box",
                    "minecraft:cyan_shulker_box",
                    "minecraft:gray_shulker_box",
                    "minecraft:green_shulker_box",
                    "minecraft:light_blue_shulker_box",
                    "minecraft:light_gray_shulker_box",
                    "minecraft:lime_shulker_box",
                    "minecraft:magenta_shulker_box",
                    "minecraft:orange_shulker_box",
                    "minecraft:pink_shulker_box",
                    "minecraft:purple_shulker_box",
                    "minecraft:red_shulker_box",
                    "minecraft:white_shulker_box",
                    "minecraft:yellow_shulker_box",
                    "minecraft:gold_ore",
                    "minecraft:nether_gold_ore",
                    "minecraft:deepslate_gold_ore"
                ]
            }
        ],
        "blocks/iron_ores": [
            null,
            {
                "name": "iron_ores",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:iron_ore",
                    "minecraft:deepslate_iron_ore"
                ]
            }
        ],
        "blocks/lapis_ores": [
            null,
            {
                "name": "lapis_ores",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:lapis_ore",
                    "minecraft:deepslate_lapis_ore"
                ]
            }
        ],
        "blocks/lush_plants_replaceable": [
            {
                "name": "lush_plants_replaceable",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:stone",
                    "minecraft:granite",
                    "minecraft:diorite",
                    "minecraft:andesite",
                    "minecraft:grimstone",
                    "minecraft:cave_vines_body",
                    "minecraft:cave_vines_head",
                    "minecraft:dirt",
                    "minecraft:gravel",
                    "minecraft:sand",
                    "minecraft:moss_block",
                    "minecraft:dandelion",
                    "minecraft:poppy",
                    "minecraft:blue_orchid",
                    "minecraft:allium",
                    "minecraft:azure_bluet",
                    "minecraft:red_tulip",
                    "minecraft:orange_tulip",
                    "minecraft:white_tulip",
                    "minecraft:pink_tulip",
                    "minecraft:oxeye_daisy",
                    "minecraft:cornflower",
                    "minecraft:lily_of_the_valley",
                    "minecraft:wither_rose",
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:peony",
                    "minecraft:rose_bush",
                    "minecraft:grass",
                    "minecraft:tall_grass",
                    "minecraft:moss_carpet",
                    "minecraft:small_dripleaf",
                    "minecraft:big_dripleaf",
                    "minecraft:big_dripleaf_stem",
                    "minecraft:vine"
                ]
            },
            {
                "name": "lush_plants_replaceable",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:stone",
                    "minecraft:granite",
                    "minecraft:diorite",
                    "minecraft:andesite",
                    "minecraft:tuff",
                    "minecraft:deepslate",
                    "minecraft:cave_vines_body",
                    "minecraft:cave_vines_head",
                    "minecraft:dirt",
                    "minecraft:gravel",
                    "minecraft:sand",
                    "minecraft:moss_block",
                    "minecraft:dandelion",
                    "minecraft:poppy",
                    "minecraft:blue_orchid",
                    "minecraft:allium",
                    "minecraft:azure_bluet",
                    "minecraft:red_tulip",
                    "minecraft:orange_tulip",
                    "minecraft:white_tulip",
                    "minecraft:pink_tulip",
                    "minecraft:oxeye_daisy",
                    "minecraft:cornflower",
                    "minecraft:lily_of_the_valley",
                    "minecraft:wither_rose",
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:peony",
                    "minecraft:rose_bush",
                    "minecraft:grass",
                    "minecraft:tall_grass",
                    "minecraft:moss_carpet",
                    "minecraft:small_dripleaf",
                    "minecraft:big_dripleaf",
                    "minecraft:big_dripleaf_stem",
                    "minecraft:vine"
                ]
            }
        ],
        "blocks/redstone_ores": [
            null,
            {
                "name": "redstone_ores",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:redstone_ore",
                    "minecraft:deepslate_redstone_ore"
                ]
            }
        ],
        "blocks/slabs": [
            {
                "name": "slabs",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:oak_slab",
                    "minecraft:spruce_slab",
                    "minecraft:birch_slab",
                    "minecraft:jungle_slab",
                    "minecraft:acacia_slab",
                    "minecraft:dark_oak_slab",
                    "minecraft:crimson_slab",
                    "minecraft:warped_slab",
                    "minecraft:stone_slab",
                    "minecraft:smooth_stone_slab",
                    "minecraft:stone_brick_slab",
                    "minecraft:sandstone_slab",
                    "minecraft:purpur_slab",
                    "minecraft:quartz_slab",
                    "minecraft:red_sandstone_slab",
                    "minecraft:brick_slab",
                    "minecraft:cobblestone_slab",
                    "minecraft:nether_brick_slab",
                    "minecraft:petrified_oak_slab",
                    "minecraft:prismarine_slab",
                    "minecraft:prismarine_brick_slab",
                    "minecraft:dark_prismarine_slab",
                    "minecraft:polished_granite_slab",
                    "minecraft:smooth_red_sandstone_slab",
                    "minecraft:mossy_stone_brick_slab",
                    "minecraft:polished_diorite_slab",
                    "minecraft:mossy_cobblestone_slab",
                    "minecraft:end_stone_brick_slab",
                    "minecraft:smooth_sandstone_slab",
                    "minecraft:smooth_quartz_slab",
                    "minecraft:granite_slab",
                    "minecraft:andesite_slab",
                    "minecraft:red_nether_brick_slab",
                    "minecraft:polished_andesite_slab",
                    "minecraft:diorite_slab",
                    "minecraft:cut_sandstone_slab",
                    "minecraft:cut_red_sandstone_slab",
                    "minecraft:blackstone_slab",
                    "minecraft:polished_blackstone_brick_slab",
                    "minecraft:polished_blackstone_slab",
                    "minecraft:grimstone_slab",
                    "minecraft:polished_grimstone_slab",
                    "minecraft:grimstone_tile_slab",
                    "minecraft:grimstone_brick_slab"
                ]
            },
            {
                "name": "slabs",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:oak_slab",
                    "minecraft:spruce_slab",
                    "minecraft:birch_slab",
                    "minecraft:jungle_slab",
                    "minecraft:acacia_slab",
                    "minecraft:dark_oak_slab",
                    "minecraft:crimson_slab",
                    "minecraft:warped_slab",
                    "minecraft:stone_slab",
                    "minecraft:smooth_stone_slab",
                    "minecraft:stone_brick_slab",
                    "minecraft:sandstone_slab",
                    "minecraft:purpur_slab",
                    "minecraft:quartz_slab",
                    "minecraft:red_sandstone_slab",
                    "minecraft:brick_slab",
                    "minecraft:cobblestone_slab",
                    "minecraft:nether_brick_slab",
                    "minecraft:petrified_oak_slab",
                    "minecraft:prismarine_slab",
                    "minecraft:prismarine_brick_slab",
                    "minecraft:dark_prismarine_slab",
                    "minecraft:polished_granite_slab",
                    "minecraft:smooth_red_sandstone_slab",
                    "minecraft:mossy_stone_brick_slab",
                    "minecraft:polished_diorite_slab",
                    "minecraft:mossy_cobblestone_slab",
                    "minecraft:end_stone_brick_slab",
                    "minecraft:smooth_sandstone_slab",
                    "minecraft:smooth_quartz_slab",
                    "minecraft:granite_slab",
                    "minecraft:andesite_slab",
                    "minecraft:red_nether_brick_slab",
                    "minecraft:polished_andesite_slab",
                    "minecraft:diorite_slab",
                    "minecraft:cut_sandstone_slab",
                    "minecraft:cut_red_sandstone_slab",
                    "minecraft:blackstone_slab",
                    "minecraft:polished_blackstone_brick_slab",
                    "minecraft:polished_blackstone_slab",
                    "minecraft:cobbled_deepslate_slab",
                    "minecraft:polished_deepslate_slab",
                    "minecraft:deepslate_tile_slab",
                    "minecraft:deepslate_brick_slab"
                ]
            }
        ],
        "blocks/stairs": [
            {
                "name": "stairs",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:oak_stairs",
                    "minecraft:spruce_stairs",
                    "minecraft:birch_stairs",
                    "minecraft:jungle_stairs",
                    "minecraft:acacia_stairs",
                    "minecraft:dark_oak_stairs",
                    "minecraft:crimson_stairs",
                    "minecraft:warped_stairs",
                    "minecraft:cobblestone_stairs",
                    "minecraft:sandstone_stairs",
                    "minecraft:nether_brick_stairs",
                    "minecraft:stone_brick_stairs",
                    "minecraft:brick_stairs",
                    "minecraft:purpur_stairs",
                    "minecraft:quartz_stairs",
                    "minecraft:red_sandstone_stairs",
                    "minecraft:prismarine_brick_stairs",
                    "minecraft:prismarine_stairs",
                    "minecraft:dark_prismarine_stairs",
                    "minecraft:polished_granite_stairs",
                    "minecraft:smooth_red_sandstone_stairs",
                    "minecraft:mossy_stone_brick_stairs",
                    "minecraft:polished_diorite_stairs",
                    "minecraft:mossy_cobblestone_stairs",
                    "minecraft:end_stone_brick_stairs",
                    "minecraft:stone_stairs",
                    "minecraft:smooth_sandstone_stairs",
                    "minecraft:smooth_quartz_stairs",
                    "minecraft:granite_stairs",
                    "minecraft:andesite_stairs",
                    "minecraft:red_nether_brick_stairs",
                    "minecraft:polished_andesite_stairs",
                    "minecraft:diorite_stairs",
                    "minecraft:blackstone_stairs",
                    "minecraft:polished_blackstone_brick_stairs",
                    "minecraft:polished_blackstone_stairs",
                    "minecraft:grimstone_stairs",
                    "minecraft:polished_grimstone_stairs",
                    "minecraft:grimstone_tile_stairs",
                    "minecraft:grimstone_brick_stairs"
                ]
            },
            {
                "name": "stairs",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:oak_stairs",
                    "minecraft:spruce_stairs",
                    "minecraft:birch_stairs",
                    "minecraft:jungle_stairs",
                    "minecraft:acacia_stairs",
                    "minecraft:dark_oak_stairs",
                    "minecraft:crimson_stairs",
                    "minecraft:warped_stairs",
                    "minecraft:cobblestone_stairs",
                    "minecraft:sandstone_stairs",
                    "minecraft:nether_brick_stairs",
                    "minecraft:stone_brick_stairs",
                    "minecraft:brick_stairs",
                    "minecraft:purpur_stairs",
                    "minecraft:quartz_stairs",
                    "minecraft:red_sandstone_stairs",
                    "minecraft:prismarine_brick_stairs",
                    "minecraft:prismarine_stairs",
                    "minecraft:dark_prismarine_stairs",
                    "minecraft:polished_granite_stairs",
                    "minecraft:smooth_red_sandstone_stairs",
                    "minecraft:mossy_stone_brick_stairs",
                    "minecraft:polished_diorite_stairs",
                    "minecraft:mossy_cobblestone_stairs",
                    "minecraft:end_stone_brick_stairs",
                    "minecraft:stone_stairs",
                    "minecraft:smooth_sandstone_stairs",
                    "minecraft:smooth_quartz_stairs",
                    "minecraft:granite_stairs",
                    "minecraft:andesite_stairs",
                    "minecraft:red_nether_brick_stairs",
                    "minecraft:polished_andesite_stairs",
                    "minecraft:diorite_stairs",
                    "minecraft:blackstone_stairs",
                    "minecraft:polished_blackstone_brick_stairs",
                    "minecraft:polished_blackstone_stairs",
                    "minecraft:cobbled_deepslate_stairs",
                    "minecraft:polished_deepslate_stairs",
                    "minecraft:deepslate_tile_stairs",
                    "minecraft:deepslate_brick_stairs"
                ]
            }
        ],
        "blocks/stone_ore_replaceables": [
            null,
            {
                "name": "stone_ore_replaceables",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:stone",
                    "minecraft:granite",
                    "minecraft:diorite",
                    "minecraft:andesite",
                    "minecraft:tuff"
                ]
            }
        ],
        "blocks/walls": [
            {
                "name": "walls",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:cobblestone_wall",
                    "minecraft:mossy_cobblestone_wall",
                    "minecraft:brick_wall",
                    "minecraft:prismarine_wall",
                    "minecraft:red_sandstone_wall",
                    "minecraft:mossy_stone_brick_wall",
                    "minecraft:granite_wall",
                    "minecraft:stone_brick_wall",
                    "minecraft:nether_brick_wall",
                    "minecraft:andesite_wall",
                    "minecraft:red_nether_brick_wall",
                    "minecraft:sandstone_wall",
                    "minecraft:end_stone_brick_wall",
                    "minecraft:diorite_wall",
                    "minecraft:blackstone_wall",
                    "minecraft:polished_blackstone_brick_wall",
                    "minecraft:polished_blackstone_wall",
                    "minecraft:grimstone_wall",
                    "minecraft:polished_grimstone_wall",
                    "minecraft:grimstone_tile_wall",
                    "minecraft:grimstone_brick_wall"
                ]
            },
            {
                "name": "walls",
                "replace": false,
                "type": "blocks",
                "values": [
                    "minecraft:cobblestone_wall",
                    "minecraft:mossy_cobblestone_wall",
                    "minecraft:brick_wall",
                    "minecraft:prismarine_wall",
                    "minecraft:red_sandstone_wall",
                    "minecraft:mossy_stone_brick_wall",
                    "minecraft:granite_wall",
                    "minecraft:stone_brick_wall",
                    "minecraft:nether_brick_wall",
                    "minecraft:andesite_wall",
                    "minecraft:red_nether_brick_wall",
                    "minecraft:sandstone_wall",
                    "minecraft:end_stone_brick_wall",
                    "minecraft:diorite_wall",
                    "minecraft:blackstone_wall",
                    "minecraft:polished_blackstone_brick_wall",
                    "minecraft:polished_blackstone_wall",
                    "minecraft:cobbled_deepslate_wall",
                    "minecraft:polished_deepslate_wall",
                    "minecraft:deepslate_tile_wall",
                    "minecraft:deepslate_brick_wall"
                ]
            }
        ],
        "items/diamond_ores": [
            null,
            {
                "name": "diamond_ores",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:diamond_ore",
                    "minecraft:deepslate_diamond_ore"
                ]
            }
        ],
        "items/gold_ores": [
            {
                "name": "gold_ores",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:gold_ore",
                    "minecraft:nether_gold_ore"
                ]
            },
            {
                "name": "gold_ores",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:gold_ore",
                    "minecraft:nether_gold_ore",
                    "minecraft:deepslate_gold_ore"
                ]
            }
        ],
        "items/iron_ores": [
            null,
            {
                "name": "iron_ores",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:iron_ore",
                    "minecraft:deepslate_iron_ore"
                ]
            }
        ],
        "items/lapis_ores": [
            null,
            {
                "name": "lapis_ores",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:lapis_ore",
                    "minecraft:deepslate_lapis_ore"
                ]
            }
        ],
        "items/piglin_loved": [
            {
                "name": "piglin_loved",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:gold_ore",
                    "minecraft:nether_gold_ore",
                    "minecraft:gold_block",
                    "minecraft:gilded_blackstone",
                    "minecraft:light_weighted_pressure_plate",
                    "minecraft:gold_ingot",
                    "minecraft:bell",
                    "minecraft:clock",
                    "minecraft:golden_carrot",
                    "minecraft:glistering_melon_slice",
                    "minecraft:golden_apple",
                    "minecraft:enchanted_golden_apple",
                    "minecraft:golden_helmet",
                    "minecraft:golden_chestplate",
                    "minecraft:golden_leggings",
                    "minecraft:golden_boots",
                    "minecraft:golden_horse_armor",
                    "minecraft:golden_sword",
                    "minecraft:golden_pickaxe",
                    "minecraft:golden_shovel",
                    "minecraft:golden_axe",
                    "minecraft:golden_hoe"
                ]
            },
            {
                "name": "piglin_loved",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:gold_ore",
                    "minecraft:nether_gold_ore",
                    "minecraft:deepslate_gold_ore",
                    "minecraft:gold_block",
                    "minecraft:gilded_blackstone",
                    "minecraft:light_weighted_pressure_plate",
                    "minecraft:gold_ingot",
                    "minecraft:bell",
                    "minecraft:clock",
                    "minecraft:golden_carrot",
                    "minecraft:glistering_melon_slice",
                    "minecraft:golden_apple",
                    "minecraft:enchanted_golden_apple",
                    "minecraft:golden_helmet",
                    "minecraft:golden_chestplate",
                    "minecraft:golden_leggings",
                    "minecraft:golden_boots",
                    "minecraft:golden_horse_armor",
                    "minecraft:golden_sword",
                    "minecraft:golden_pickaxe",
                    "minecraft:golden_shovel",
                    "minecraft:golden_axe",
                    "minecraft:golden_hoe"
                ]
            }
        ],
        "items/redstone_ores": [
            null,
            {
                "name": "redstone_ores",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:redstone_ore",
                    "minecraft:deepslate_redstone_ore"
                ]
            }
        ],
        "items/slabs": [
            {
                "name": "slabs",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:oak_slab",
                    "minecraft:spruce_slab",
                    "minecraft:birch_slab",
                    "minecraft:jungle_slab",
                    "minecraft:acacia_slab",
                    "minecraft:dark_oak_slab",
                    "minecraft:crimson_slab",
                    "minecraft:warped_slab",
                    "minecraft:stone_slab",
                    "minecraft:smooth_stone_slab",
                    "minecraft:stone_brick_slab",
                    "minecraft:sandstone_slab",
                    "minecraft:purpur_slab",
                    "minecraft:quartz_slab",
                    "minecraft:red_sandstone_slab",
                    "minecraft:brick_slab",
                    "minecraft:cobblestone_slab",
                    "minecraft:nether_brick_slab",
                    "minecraft:petrified_oak_slab",
                    "minecraft:prismarine_slab",
                    "minecraft:prismarine_brick_slab",
                    "minecraft:dark_prismarine_slab",
                    "minecraft:polished_granite_slab",
                    "minecraft:smooth_red_sandstone_slab",
                    "minecraft:mossy_stone_brick_slab",
                    "minecraft:polished_diorite_slab",
                    "minecraft:mossy_cobblestone_slab",
                    "minecraft:end_stone_brick_slab",
                    "minecraft:smooth_sandstone_slab",
                    "minecraft:smooth_quartz_slab",
                    "minecraft:granite_slab",
                    "minecraft:andesite_slab",
                    "minecraft:red_nether_brick_slab",
                    "minecraft:polished_andesite_slab",
                    "minecraft:diorite_slab",
                    "minecraft:cut_sandstone_slab",
                    "minecraft:cut_red_sandstone_slab",
                    "minecraft:blackstone_slab",
                    "minecraft:polished_blackstone_brick_slab",
                    "minecraft:polished_blackstone_slab",
                    "minecraft:grimstone_slab",
                    "minecraft:polished_grimstone_slab",
                    "minecraft:grimstone_tile_slab",
                    "minecraft:grimstone_brick_slab"
                ]
            },
            {
                "name": "slabs",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:oak_slab",
                    "minecraft:spruce_slab",
                    "minecraft:birch_slab",
                    "minecraft:jungle_slab",
                    "minecraft:acacia_slab",
                    "minecraft:dark_oak_slab",
                    "minecraft:crimson_slab",
                    "minecraft:warped_slab",
                    "minecraft:stone_slab",
                    "minecraft:smooth_stone_slab",
                    "minecraft:stone_brick_slab",
                    "minecraft:sandstone_slab",
                    "minecraft:purpur_slab",
                    "minecraft:quartz_slab",
                    "minecraft:red_sandstone_slab",
                    "minecraft:brick_slab",
                    "minecraft:cobblestone_slab",
                    "minecraft:nether_brick_slab",
                    "minecraft:petrified_oak_slab",
                    "minecraft:prismarine_slab",
                    "minecraft:prismarine_brick_slab",
                    "minecraft:dark_prismarine_slab",
                    "minecraft:polished_granite_slab",
                    "minecraft:smooth_red_sandstone_slab",
                    "minecraft:mossy_stone_brick_slab",
                    "minecraft:polished_diorite_slab",
                    "minecraft:mossy_cobblestone_slab",
                    "minecraft:end_stone_brick_slab",
                    "minecraft:smooth_sandstone_slab",
                    "minecraft:smooth_quartz_slab",
                    "minecraft:granite_slab",
                    "minecraft:andesite_slab",
                    "minecraft:red_nether_brick_slab",
                    "minecraft:polished_andesite_slab",
                    "minecraft:diorite_slab",
                    "minecraft:cut_sandstone_slab",
                    "minecraft:cut_red_sandstone_slab",
                    "minecraft:blackstone_slab",
                    "minecraft:polished_blackstone_brick_slab",
                    "minecraft:polished_blackstone_slab",
                    "minecraft:cobbled_deepslate_slab",
                    "minecraft:polished_deepslate_slab",
                    "minecraft:deepslate_tile_slab",
                    "minecraft:deepslate_brick_slab"
                ]
            }
        ],
        "items/stairs": [
            {
                "name": "stairs",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:oak_stairs",
                    "minecraft:spruce_stairs",
                    "minecraft:birch_stairs",
                    "minecraft:jungle_stairs",
                    "minecraft:acacia_stairs",
                    "minecraft:dark_oak_stairs",
                    "minecraft:crimson_stairs",
                    "minecraft:warped_stairs",
                    "minecraft:cobblestone_stairs",
                    "minecraft:sandstone_stairs",
                    "minecraft:nether_brick_stairs",
                    "minecraft:stone_brick_stairs",
                    "minecraft:brick_stairs",
                    "minecraft:purpur_stairs",
                    "minecraft:quartz_stairs",
                    "minecraft:red_sandstone_stairs",
                    "minecraft:prismarine_brick_stairs",
                    "minecraft:prismarine_stairs",
                    "minecraft:dark_prismarine_stairs",
                    "minecraft:polished_granite_stairs",
                    "minecraft:smooth_red_sandstone_stairs",
                    "minecraft:mossy_stone_brick_stairs",
                    "minecraft:polished_diorite_stairs",
                    "minecraft:mossy_cobblestone_stairs",
                    "minecraft:end_stone_brick_stairs",
                    "minecraft:stone_stairs",
                    "minecraft:smooth_sandstone_stairs",
                    "minecraft:smooth_quartz_stairs",
                    "minecraft:granite_stairs",
                    "minecraft:andesite_stairs",
                    "minecraft:red_nether_brick_stairs",
                    "minecraft:polished_andesite_stairs",
                    "minecraft:diorite_stairs",
                    "minecraft:blackstone_stairs",
                    "minecraft:polished_blackstone_brick_stairs",
                    "minecraft:polished_blackstone_stairs",
                    "minecraft:grimstone_stairs",
                    "minecraft:polished_grimstone_stairs",
                    "minecraft:grimstone_tile_stairs",
                    "minecraft:grimstone_brick_stairs"
                ]
            },
            {
                "name": "stairs",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:oak_stairs",
                    "minecraft:spruce_stairs",
                    "minecraft:birch_stairs",
                    "minecraft:jungle_stairs",
                    "minecraft:acacia_stairs",
                    "minecraft:dark_oak_stairs",
                    "minecraft:crimson_stairs",
                    "minecraft:warped_stairs",
                    "minecraft:cobblestone_stairs",
                    "minecraft:sandstone_stairs",
                    "minecraft:nether_brick_stairs",
                    "minecraft:stone_brick_stairs",
                    "minecraft:brick_stairs",
                    "minecraft:purpur_stairs",
                    "minecraft:quartz_stairs",
                    "minecraft:red_sandstone_stairs",
                    "minecraft:prismarine_brick_stairs",
                    "minecraft:prismarine_stairs",
                    "minecraft:dark_prismarine_stairs",
                    "minecraft:polished_granite_stairs",
                    "minecraft:smooth_red_sandstone_stairs",
                    "minecraft:mossy_stone_brick_stairs",
                    "minecraft:polished_diorite_stairs",
                    "minecraft:mossy_cobblestone_stairs",
                    "minecraft:end_stone_brick_stairs",
                    "minecraft:stone_stairs",
                    "minecraft:smooth_sandstone_stairs",
                    "minecraft:smooth_quartz_stairs",
                    "minecraft:granite_stairs",
                    "minecraft:andesite_stairs",
                    "minecraft:red_nether_brick_stairs",
                    "minecraft:polished_andesite_stairs",
                    "minecraft:diorite_stairs",
                    "minecraft:blackstone_stairs",
                    "minecraft:polished_blackstone_brick_stairs",
                    "minecraft:polished_blackstone_stairs",
                    "minecraft:cobbled_deepslate_stairs",
                    "minecraft:polished_deepslate_stairs",
                    "minecraft:deepslate_tile_stairs",
                    "minecraft:deepslate_brick_stairs"
                ]
            }
        ],
        "items/stone_crafting_materials": [
            {
                "name": "stone_crafting_materials",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:cobblestone",
                    "minecraft:blackstone",
                    "minecraft:grimstone"
                ]
            },
            {
                "name": "stone_crafting_materials",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:cobblestone",
                    "minecraft:blackstone",
                    "minecraft:cobbled_deepslate"
                ]
            }
        ],
        "items/stone_tool_materials": [
            {
                "name": "stone_tool_materials",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:cobblestone",
                    "minecraft:blackstone",
                    "minecraft:grimstone"
                ]
            },
            {
                "name": "stone_tool_materials",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:cobblestone",
                    "minecraft:blackstone",
                    "minecraft:cobbled_deepslate"
                ]
            }
        ],
        "items/walls": [
            {
                "name": "walls",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:cobblestone_wall",
                    "minecraft:mossy_cobblestone_wall",
                    "minecraft:brick_wall",
                    "minecraft:prismarine_wall",
                    "minecraft:red_sandstone_wall",
                    "minecraft:mossy_stone_brick_wall",
                    "minecraft:granite_wall",
                    "minecraft:stone_brick_wall",
                    "minecraft:nether_brick_wall",
                    "minecraft:andesite_wall",
                    "minecraft:red_nether_brick_wall",
                    "minecraft:sandstone_wall",
                    "minecraft:end_stone_brick_wall",
                    "minecraft:diorite_wall",
                    "minecraft:blackstone_wall",
                    "minecraft:polished_blackstone_brick_wall",
                    "minecraft:polished_blackstone_wall",
                    "minecraft:grimstone_wall",
                    "minecraft:polished_grimstone_wall",
                    "minecraft:grimstone_tile_wall",
                    "minecraft:grimstone_brick_wall"
                ]
            },
            {
                "name": "walls",
                "replace": false,
                "type": "items",
                "values": [
                    "minecraft:cobblestone_wall",
                    "minecraft:mossy_cobblestone_wall",
                    "minecraft:brick_wall",
                    "minecraft:prismarine_wall",
                    "minecraft:red_sandstone_wall",
                    "minecraft:mossy_stone_brick_wall",
                    "minecraft:granite_wall",
                    "minecraft:stone_brick_wall",
                    "minecraft:nether_brick_wall",
                    "minecraft:andesite_wall",
                    "minecraft:red_nether_brick_wall",
                    "minecraft:sandstone_wall",
                    "minecraft:end_stone_brick_wall",
                    "minecraft:diorite_wall",
                    "minecraft:blackstone_wall",
                    "minecraft:polished_blackstone_brick_wall",
                    "minecraft:polished_blackstone_wall",
                    "minecraft:cobbled_deepslate_wall",
                    "minecraft:polished_deepslate_wall",
                    "minecraft:deepslate_tile_wall",
                    "minecraft:deepslate_brick_wall"
                ]
            }
        ]
    },
    "tileentity": {
        "tileentities": {}
    },
    "version": {
        "data": [
            2695,
            2697
        ],
        "id": [
            "21w07a",
            "21w08a"
        ],
        "name": [
            "21w07a",
            "21w08a"
        ],
        "protocol": [
            1073741839,
            1073741840
        ]
    }
}